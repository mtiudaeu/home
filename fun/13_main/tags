!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/srv/main/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(BINDIR)/main	Makefile	/^$(BINDIR)\/main: $(MODULES:%=$(BUILDDIR)\/%.o) Makefile$/;"	t
$(BUILDDIR)/%.em.o	Makefile	/^$(BUILDDIR)\/%.em.o: %.cpp Makefile$/;"	t
$(BUILDDIR)/%.o	Makefile	/^$(BUILDDIR)\/%.o: %.cpp Makefile$/;"	t
$(WWWDIR)	Makefile	/^$(WWWDIR): $(WWWDIR)\/index.html $(WWWDIR)\/_main.js$/;"	t
$(WWWDIR)/_main.js	Makefile	/^$(WWWDIR)\/_main.js: $(MODULES:%=$(BUILDDIR)\/%.em.o) $(ASSETS) Makefile$/;"	t
$(WWWDIR)/index.html	Makefile	/^$(WWWDIR)\/index.html: emscripten-shell.html$/;"	t
<a name="other_libs"></a> Are there other single-file public-domain/open source libraries with minimal dependencies out there?	stb/README.md	/^#### <a name="other_libs"><\/a> Are there other single-file public-domain\/open source libraries/;"	t	section:stb""FAQ
<a name="other_libs"></a> Are there other single-file public-domain/open source libraries with minimal dependencies out there?	stb/tools/README.footer.md	/^#### <a name="other_libs"><\/a> Are there other single-file public-domain\/open source libraries/;"	t	section:FAQ
A	stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	typeref:typename:float * [2]	file:
ACCEL	stb/tests/caveview/cave_main.c	/^#define ACCEL /;"	d	file:
ADDEND	stb/stb_vorbis.c	/^   #define ADDEND(/;"	d	file:
APIENTRY	stb/tests/caveview/glext.h	/^#define APIENTRY$/;"	d
APIENTRY	stb/tests/caveview/stb_gl.h	/^#define APIENTRY /;"	d
APIENTRY	stb/tests/oversample/main.c	/^#define APIENTRY /;"	d	file:
APIENTRYP	stb/tests/caveview/glext.h	/^#define APIENTRYP /;"	d
ASSETS	Makefile	/^ASSETS = assets\/red-blob.png assets\/DroidSans.ttf$/;"	m
ATLAS_H	atlas.h	/^#define ATLAS_H$/;"	d
AddLayer	window.cpp	/^void Window::AddLayer(IRenderLayer* layer) {$/;"	f	class:Window	typeref:typename:void
AddSurface	atlas.cpp	/^int Atlas::AddSurface(SDL_Surface* surface) {$/;"	f	class:Atlas	typeref:typename:int
An interview with STB about stb_voxel_render.h	stb/docs/stb_voxel_render_interview.md	/^# An interview with STB about stb_voxel_render.h$/;"	c
Atlas	atlas.cpp	/^Atlas::Atlas(): self(new AtlasImpl) {$/;"	f	class:Atlas
Atlas	atlas.h	/^class Atlas {$/;"	c
AtlasImpl	atlas.cpp	/^struct AtlasImpl {$/;"	s	file:
AttachShader	glwrappers.cpp	/^void ShaderProgram::AttachShader(GLenum type, const GLchar* source) {$/;"	f	class:ShaderProgram	typeref:typename:void
Attributes	render-shapes.cpp	/^  struct Attributes {$/;"	s	namespace:__anond2ba22070111	file:
Attributes	render-sprites.cpp	/^struct Attributes {$/;"	s	file:
B	stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	typeref:typename:float * [2]	file:
BI	stb/deprecated/rrsprintf.h	/^    #define BI /;"	d
BINDIR	Makefile	/^BINDIR = bin$/;"	m
BITMAP_H	stb/tests/oversample/main.c	/^#define BITMAP_H /;"	d	file:
BITMAP_H	stb/tests/sdf/sdf_test.c	/^#define BITMAP_H /;"	d	file:
BITMAP_H	stb/tests/test_truetype.c	/^#define BITMAP_H /;"	d	file:
BITMAP_W	stb/tests/oversample/main.c	/^#define BITMAP_W /;"	d	file:
BITMAP_W	stb/tests/sdf/sdf_test.c	/^#define BITMAP_W /;"	d	file:
BITMAP_W	stb/tests/test_truetype.c	/^#define BITMAP_W /;"	d	file:
BUILDDIR	Makefile	/^BUILDDIR = build$/;"	m
BUILD_BUFFER_SIZE	stb/tests/caveview/caveview.h	/^#define BUILD_BUFFER_SIZE /;"	d
BUILD_QUAD_MAX	stb/tests/caveview/caveview.h	/^#define BUILD_QUAD_MAX /;"	d
Baseline	font.cpp	/^int Font::Baseline() const {$/;"	f	class:Font	typeref:typename:int
Benefits of oversampling	stb/tests/oversample/README.md	/^## Benefits of oversampling$/;"	s	chapter:Font character oversampling for rendering from atlas textures
Bool	stb/deprecated/stb.h	/^   typedef int Bool;$/;"	t	typeref:typename:int
Btest	stb/tests/stb.c	/^typedef struct Btest$/;"	s	file:
Btest	stb/tests/stb.c	/^} Btest;$/;"	t	typeref:struct:Btest	file:
C	stb/stb_vorbis.c	/^   float *A[2],*B[2],*C[2];$/;"	m	struct:stb_vorbis	typeref:typename:float * [2]	file:
C	stb/stb_vorbis.c	/^#define C /;"	d	file:
CACHED_MESH_NUM_X	stb/tests/caveview/cave_render.c	/^#define CACHED_MESH_NUM_X /;"	d	file:
CACHED_MESH_NUM_Y	stb/tests/caveview/cave_render.c	/^#define CACHED_MESH_NUM_Y /;"	d	file:
CALLBACK	stb/tests/caveview/stb_gl.h	/^#define CALLBACK /;"	d
CALLBACK	stb/tests/oversample/main.c	/^#define CALLBACK /;"	d	file:
CASE	stb/deprecated/stb_image.c	/^         #define CASE(/;"	d	file:
CASE	stb/deprecated/stb_image.c	/^      #define CASE(/;"	d	file:
CFLAGS	stb/tests/Makefile	/^CFLAGS = -Wno-pointer-to-int-cast -Wno-int-to-pointer-cast -DSTB_DIVIDE_TEST$/;"	m
CHECK	stb/stb_vorbis.c	/^#define CHECK(/;"	d	file:
CHECK1	stb/tests/test_sprintf.c	/^#define CHECK1(/;"	d	file:
CHECK2	stb/tests/test_sprintf.c	/^#define CHECK2(/;"	d	file:
CHECK3	stb/tests/test_sprintf.c	/^#define CHECK3(/;"	d	file:
CHECK4	stb/tests/test_sprintf.c	/^#define CHECK4(/;"	d	file:
CHECK5	stb/tests/test_sprintf.c	/^#define CHECK5(/;"	d	file:
CHECK6	stb/tests/test_sprintf.c	/^#define CHECK6(/;"	d	file:
CHECK7	stb/tests/test_sprintf.c	/^#define CHECK7(/;"	d	file:
CHECK8	stb/tests/test_sprintf.c	/^#define CHECK8(/;"	d	file:
CHECK9	stb/tests/test_sprintf.c	/^#define CHECK9(/;"	d	file:
CHECK_END	stb/tests/test_sprintf.c	/^#define CHECK_END(/;"	d	file:
CHUNK_CACHE	stb/tests/caveview/cave_mesher.c	/^#define CHUNK_CACHE /;"	d	file:
CLEX_andand	stb/stb_c_lexer.h	/^   CLEX_andand        ,$/;"	e	enum:__anone321a15d0303
CLEX_andeq	stb/stb_c_lexer.h	/^   CLEX_andeq         ,$/;"	e	enum:__anone321a15d0303
CLEX_arrow	stb/stb_c_lexer.h	/^   CLEX_arrow         ,$/;"	e	enum:__anone321a15d0303
CLEX_charlit	stb/stb_c_lexer.h	/^   CLEX_charlit       ,$/;"	e	enum:__anone321a15d0303
CLEX_diveq	stb/stb_c_lexer.h	/^   CLEX_diveq         ,$/;"	e	enum:__anone321a15d0303
CLEX_dqstring	stb/stb_c_lexer.h	/^   CLEX_dqstring      ,$/;"	e	enum:__anone321a15d0303
CLEX_eof	stb/stb_c_lexer.h	/^   CLEX_eof = 256,$/;"	e	enum:__anone321a15d0303
CLEX_eq	stb/stb_c_lexer.h	/^   CLEX_eq            ,$/;"	e	enum:__anone321a15d0303
CLEX_eqarrow	stb/stb_c_lexer.h	/^   CLEX_eqarrow       ,$/;"	e	enum:__anone321a15d0303
CLEX_first_unused_token	stb/stb_c_lexer.h	/^   CLEX_first_unused_token$/;"	e	enum:__anone321a15d0303
CLEX_floatlit	stb/stb_c_lexer.h	/^   CLEX_floatlit      ,$/;"	e	enum:__anone321a15d0303
CLEX_greatereq	stb/stb_c_lexer.h	/^   CLEX_greatereq     ,$/;"	e	enum:__anone321a15d0303
CLEX_id	stb/stb_c_lexer.h	/^   CLEX_id            ,$/;"	e	enum:__anone321a15d0303
CLEX_intlit	stb/stb_c_lexer.h	/^   CLEX_intlit        ,$/;"	e	enum:__anone321a15d0303
CLEX_lesseq	stb/stb_c_lexer.h	/^   CLEX_lesseq        ,$/;"	e	enum:__anone321a15d0303
CLEX_minuseq	stb/stb_c_lexer.h	/^   CLEX_minuseq       ,$/;"	e	enum:__anone321a15d0303
CLEX_minusminus	stb/stb_c_lexer.h	/^   CLEX_minusminus    ,$/;"	e	enum:__anone321a15d0303
CLEX_modeq	stb/stb_c_lexer.h	/^   CLEX_modeq         ,$/;"	e	enum:__anone321a15d0303
CLEX_muleq	stb/stb_c_lexer.h	/^   CLEX_muleq         ,$/;"	e	enum:__anone321a15d0303
CLEX_noteq	stb/stb_c_lexer.h	/^   CLEX_noteq         ,$/;"	e	enum:__anone321a15d0303
CLEX_oreq	stb/stb_c_lexer.h	/^   CLEX_oreq          ,$/;"	e	enum:__anone321a15d0303
CLEX_oror	stb/stb_c_lexer.h	/^   CLEX_oror          ,$/;"	e	enum:__anone321a15d0303
CLEX_parse_error	stb/stb_c_lexer.h	/^   CLEX_parse_error,$/;"	e	enum:__anone321a15d0303
CLEX_pluseq	stb/stb_c_lexer.h	/^   CLEX_pluseq        ,$/;"	e	enum:__anone321a15d0303
CLEX_plusplus	stb/stb_c_lexer.h	/^   CLEX_plusplus      ,$/;"	e	enum:__anone321a15d0303
CLEX_shl	stb/stb_c_lexer.h	/^   CLEX_shl           ,$/;"	e	enum:__anone321a15d0303
CLEX_shleq	stb/stb_c_lexer.h	/^   CLEX_shleq, CLEX_shreq,$/;"	e	enum:__anone321a15d0303
CLEX_shr	stb/stb_c_lexer.h	/^   CLEX_shr           ,$/;"	e	enum:__anone321a15d0303
CLEX_shreq	stb/stb_c_lexer.h	/^   CLEX_shleq, CLEX_shreq,$/;"	e	enum:__anone321a15d0303
CLEX_sqstring	stb/stb_c_lexer.h	/^   CLEX_sqstring      ,$/;"	e	enum:__anone321a15d0303
CLEX_xoreq	stb/stb_c_lexer.h	/^   CLEX_xoreq         ,$/;"	e	enum:__anone321a15d0303
CLUSTERSIZECOUNT	stb/tools/unicode.c	/^#define CLUSTERSIZECOUNT /;"	d	file:
CODEBOOK_ELEMENT	stb/stb_vorbis.c	/^#define CODEBOOK_ELEMENT(/;"	d	file:
CODEBOOK_ELEMENT_BASE	stb/stb_vorbis.c	/^#define CODEBOOK_ELEMENT_BASE(/;"	d	file:
CODEBOOK_ELEMENT_FAST	stb/stb_vorbis.c	/^#define CODEBOOK_ELEMENT_FAST(/;"	d	file:
COMBO	stb/deprecated/stb_image.c	/^      #define COMBO(/;"	d	file:
COMMONFLAGS	Makefile	/^COMMONFLAGS = -std=c++11 -MMD -MP -isystem .$/;"	m
COMMON_H	common.h	/^#define COMMON_H$/;"	d
CPPFLAGS	stb/tests/Makefile	/^CPPFLAGS = -Wno-write-strings -DSTB_DIVIDE_TEST$/;"	m
CRC32_POLY	stb/stb_vorbis.c	/^#define CRC32_POLY /;"	d	file:
CRCscan	stb/stb_vorbis.c	/^} CRCscan;$/;"	t	typeref:struct:__anon008e12ab0c08	file:
CS	stb/deprecated/rrsprintf.h	/^    #define CS /;"	d
C_INTEGER_DIVISION_TRUNCATES	stb/stb_divide.h	/^      #define C_INTEGER_DIVISION_TRUNCATES$/;"	d
C_cross	stb/tests/caveview/cave_mesher.c	/^   C_cross,$/;"	e	enum:__anon257c0e9b0103	file:
C_empty	stb/tests/caveview/cave_mesher.c	/^   C_empty,$/;"	e	enum:__anon257c0e9b0103	file:
C_force	stb/tests/caveview/cave_mesher.c	/^   C_force,$/;"	e	enum:__anon257c0e9b0103	file:
C_slab	stb/tests/caveview/cave_mesher.c	/^   C_slab,$/;"	e	enum:__anon257c0e9b0103	file:
C_solid	stb/tests/caveview/cave_mesher.c	/^   C_solid,$/;"	e	enum:__anon257c0e9b0103	file:
C_stair	stb/tests/caveview/cave_mesher.c	/^   C_stair,$/;"	e	enum:__anon257c0e9b0103	file:
C_trans	stb/tests/caveview/cave_mesher.c	/^   C_trans,$/;"	e	enum:__anon257c0e9b0103	file:
C_water	stb/tests/caveview/cave_mesher.c	/^   C_water,$/;"	e	enum:__anon257c0e9b0103	file:
Can I link directly to the table of stb libraries?	stb/README.md	/^#### Can I link directly to the table of stb libraries?$/;"	t	section:stb""FAQ
Can I link directly to the table of stb libraries?	stb/tools/README.footer.md	/^#### Can I link directly to the table of stb libraries?$/;"	t	section:FAQ
Codebook	stb/stb_vorbis.c	/^} Codebook;$/;"	t	typeref:struct:__anon008e12ab0408	file:
CopyFromPixels	glwrappers.cpp	/^void Texture::CopyFromPixels(int width, int height,$/;"	f	class:Texture	typeref:typename:void
CopyFromSurface	glwrappers.cpp	/^void Texture::CopyFromSurface(SDL_Surface* surface) {$/;"	f	class:Texture	typeref:typename:void
Could this be turned into a proper Minecraft viewer?	stb/tests/caveview/README.md	/^### Could this be turned into a proper Minecraft viewer?$/;"	S	chapter:FAQ
CreateRGBASurface	glwrappers.cpp	/^SDL_Surface* CreateRGBASurface(int width, int height) {$/;"	f	typeref:typename:SDL_Surface *
DECEL	stb/tests/caveview/cave_main.c	/^#define DECEL /;"	d	file:
DECODE	stb/stb_vorbis.c	/^#define DECODE(/;"	d	file:
DECODE_RAW	stb/stb_vorbis.c	/^#define DECODE_RAW(/;"	d	file:
DECODE_VQ	stb/stb_vorbis.c	/^  #define DECODE_VQ(/;"	d	file:
DEG_TO_RAD	render-sprites.h	/^const float DEG_TO_RAD = 3.141592653589793f \/ 180.0f;$/;"	v	typeref:typename:const float
DIVTAB_DENOM	stb/stb_vorbis.c	/^#define DIVTAB_DENOM /;"	d	file:
DIVTAB_NUMER	stb/stb_vorbis.c	/^#define DIVTAB_NUMER /;"	d	file:
DNL	stb/deprecated/stb_image.c	/^#define DNL(/;"	d	file:
DYNAMIC_FRICTION	stb/tests/caveview/cave_main.c	/^#define DYNAMIC_FRICTION /;"	d	file:
Do you have any advice on how to create my own single-file library?	stb/README.md	/^#### Do you have any advice on how to create my own single-file library?$/;"	t	section:stb""FAQ
Do you have any advice on how to create my own single-file library?	stb/tools/README.footer.md	/^#### Do you have any advice on how to create my own single-file library?$/;"	t	section:FAQ
Draw	font.cpp	/^void Font::Draw(SDL_Surface* surface, int x, int y, const char* text) const {$/;"	f	class:Font	typeref:typename:void
EFFECTIVE_ACCEL	stb/tests/caveview/cave_main.c	/^#define EFFECTIVE_ACCEL /;"	d	file:
EMXX	Makefile	/^EMXX = em++$/;"	m
EMXXLINK	Makefile	/^EMXXLINK = -s TOTAL_MEMORY=50331648 --use-preload-plugins$/;"	m
EOI	stb/deprecated/stb_image.c	/^#define EOI(/;"	d	file:
EOP	stb/stb_vorbis.c	/^#define EOP /;"	d	file:
EncodeArray	stb/deprecated/stb.h	/^#define EncodeArray(/;"	d
EncodeBucket	stb/deprecated/stb.h	/^#define EncodeBucket(/;"	d
EncodeHash	stb/deprecated/stb.h	/^#define EncodeHash(/;"	d
FACE_BUFFER_SIZE	stb/tests/caveview/caveview.h	/^#define FACE_BUFFER_SIZE /;"	d
FAIL	glwrappers.cpp	/^void FAIL(const char* label) {$/;"	f	typeref:typename:void
FALSE	stb/deprecated/stb.h	/^     #define FALSE /;"	d
FALSE	stb/stb_vorbis.c	/^#define FALSE /;"	d	file:
FAQ	stb/README.md	/^FAQ$/;"	s	chapter:stb
FAQ	stb/tests/caveview/README.md	/^# FAQ$/;"	c
FAQ	stb/tools/README.footer.md	/^FAQ$/;"	s
FASTDEF	stb/stb_vorbis.c	/^   #define FASTDEF(/;"	d	file:
FAST_BITS	stb/deprecated/stb_image.c	/^#define FAST_BITS /;"	d	file:
FAST_BITS	stb/stb_image.h	/^#define FAST_BITS /;"	d
FAST_CHUNK	stb/tests/caveview/cave_mesher.c	/^#define FAST_CHUNK$/;"	d	file:
FAST_CHUNK	stb/tests/caveview/cave_parse.c	/^#define FAST_CHUNK /;"	d	file:
FAST_HUFFMAN_TABLE_MASK	stb/stb_vorbis.c	/^#define FAST_HUFFMAN_TABLE_MASK /;"	d	file:
FAST_HUFFMAN_TABLE_SIZE	stb/stb_vorbis.c	/^#define FAST_HUFFMAN_TABLE_SIZE /;"	d	file:
FAST_SCALED_FLOAT_TO_INT	stb/stb_vorbis.c	/^   #define FAST_SCALED_FLOAT_TO_INT(/;"	d	file:
FILE	stb/deprecated/stb.h	/^#define FILE(/;"	d
FONT_H	font.h	/^#define FONT_H$/;"	d
FRAME	window.cpp	/^int Window::FRAME = 0;$/;"	m	class:Window	typeref:typename:int
FRAME	window.h	/^  static int FRAME;$/;"	m	class:Window	typeref:typename:int
F_avg	stb/deprecated/stb_image.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon9409ffb90d03	file:
F_avg_first	stb/deprecated/stb_image.c	/^   F_avg_first, F_paeth_first$/;"	e	enum:__anon9409ffb90d03	file:
F_none	stb/deprecated/stb_image.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon9409ffb90d03	file:
F_paeth	stb/deprecated/stb_image.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon9409ffb90d03	file:
F_paeth_first	stb/deprecated/stb_image.c	/^   F_avg_first, F_paeth_first$/;"	e	enum:__anon9409ffb90d03	file:
F_sub	stb/deprecated/stb_image.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon9409ffb90d03	file:
F_up	stb/deprecated/stb_image.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon9409ffb90d03	file:
False	stb/deprecated/stb.h	/^   #define False /;"	d
Floor	stb/stb_vorbis.c	/^} Floor;$/;"	t	typeref:union:__anon008e12ab070a	file:
Floor0	stb/stb_vorbis.c	/^} Floor0;$/;"	t	typeref:struct:__anon008e12ab0508	file:
Floor1	stb/stb_vorbis.c	/^} Floor1;$/;"	t	typeref:struct:__anon008e12ab0608	file:
Font	font.cpp	/^Font::Font(const char* filename, float ptsize, float xadvance_adjust): self(new FontImpl) {$/;"	f	class:Font
Font	font.h	/^class Font {$/;"	c
Font character oversampling for rendering from atlas textures	stb/tests/oversample/README.md	/^# Font character oversampling for rendering from atlas textures$/;"	c
FontCharacter	font.cpp	/^struct FontCharacter {$/;"	s	file:
FontImpl	font.cpp	/^struct FontImpl {$/;"	s	file:
GLAPI	stb/tests/caveview/glext.h	/^#define GLAPI /;"	d
GLARB	stb/tests/caveview/stb_gl.h	/^#define GLARB(/;"	d
GLATI	stb/tests/caveview/stb_gl.h	/^#define GLATI(/;"	d
GLCORE	stb/tests/caveview/stb_gl.h	/^#define GLCORE(/;"	d
GLDEBUGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	stb/tests/caveview/glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengt/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	stb/tests/caveview/glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLE	stb/tests/caveview/stb_gl.h	/^   #define GLE(/;"	d
GLERRORS	glwrappers.cpp	/^void GLERRORS(const char* label) {$/;"	f	typeref:typename:void
GLEXT	stb/tests/caveview/stb_gl.h	/^#define GLEXT(/;"	d
GLEXT_64_TYPES_DEFINED	stb/tests/caveview/glext.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLNV	stb/tests/caveview/stb_gl.h	/^#define GLNV(/;"	d
GLWRAPPERS_H	glwrappers.h	/^#define GLWRAPPERS_H$/;"	d
GL_1PASS_EXT	stb/tests/caveview/glext.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	stb/tests/caveview/glext.h	/^#define GL_1PASS_SGIS /;"	d
GL_2PASS_0_EXT	stb/tests/caveview/glext.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	stb/tests/caveview/glext.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	stb/tests/caveview/glext.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	stb/tests/caveview/glext.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_2X_BIT_ATI /;"	d
GL_3DFX_multisample	stb/tests/caveview/glext.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	stb/tests/caveview/glext.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	stb/tests/caveview/glext.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_422_AVERAGE_EXT	stb/tests/caveview/glext.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	stb/tests/caveview/glext.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	stb/tests/caveview/glext.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	stb/tests/caveview/glext.h	/^#define GL_422_REV_EXT /;"	d
GL_4PASS_0_EXT	stb/tests/caveview/glext.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	stb/tests/caveview/glext.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	stb/tests/caveview/glext.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	stb/tests/caveview/glext.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	stb/tests/caveview/glext.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	stb/tests/caveview/glext.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	stb/tests/caveview/glext.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	stb/tests/caveview/glext.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_4X_BIT_ATI /;"	d
GL_8X_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	stb/tests/caveview/glext.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	stb/tests/caveview/glext.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD_ATI	stb/tests/caveview/glext.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	stb/tests/caveview/glext.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	stb/tests/caveview/glext.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	stb/tests/caveview/glext.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	stb/tests/caveview/glext.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	stb/tests/caveview/glext.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	stb/tests/caveview/glext.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	stb/tests/caveview/glext.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_BARRIER_BITS	stb/tests/caveview/glext.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	stb/tests/caveview/glext.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_COMPLETED_NV	stb/tests/caveview/glext.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_SHADER_BITS	stb/tests/caveview/glext.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_STATIC_DATA_IBM	stb/tests/caveview/glext.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA12_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16F_ARB	stb/tests/caveview/glext.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16I_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_SNORM	stb/tests/caveview/glext.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	stb/tests/caveview/glext.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32I_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8I_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_SNORM	stb/tests/caveview/glext.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_INTEGER	stb/tests/caveview/glext.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	stb/tests/caveview/glext.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	stb/tests/caveview/glext.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_SNORM	stb/tests/caveview/glext.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALREADY_SIGNALED	stb/tests/caveview/glext.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS_FAST_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMD_blend_minmax_factor	stb/tests/caveview/glext.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_conservative_depth	stb/tests/caveview/glext.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	stb/tests/caveview/glext.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	stb/tests/caveview/glext.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	stb/tests/caveview/glext.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_interleaved_elements	stb/tests/caveview/glext.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	stb/tests/caveview/glext.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	stb/tests/caveview/glext.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	stb/tests/caveview/glext.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	stb/tests/caveview/glext.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	stb/tests/caveview/glext.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_query_buffer_object	stb/tests/caveview/glext.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	stb/tests/caveview/glext.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	stb/tests/caveview/glext.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	stb/tests/caveview/glext.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_stencil_export	stb/tests/caveview/glext.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_trinary_minmax	stb/tests/caveview/glext.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	stb/tests/caveview/glext.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	stb/tests/caveview/glext.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_texture4	stb/tests/caveview/glext.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	stb/tests/caveview/glext.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_vertex_shader_layer	stb/tests/caveview/glext.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	stb/tests/caveview/glext.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	stb/tests/caveview/glext.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_ANY_SAMPLES_PASSED	stb/tests/caveview/glext.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	stb/tests/caveview/glext.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_APPLE_aux_depth_stencil	stb/tests/caveview/glext.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	stb/tests/caveview/glext.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_element_array	stb/tests/caveview/glext.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	stb/tests/caveview/glext.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	stb/tests/caveview/glext.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	stb/tests/caveview/glext.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_object_purgeable	stb/tests/caveview/glext.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_rgb_422	stb/tests/caveview/glext.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	stb/tests/caveview/glext.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	stb/tests/caveview/glext.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_texture_range	stb/tests/caveview/glext.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	stb/tests/caveview/glext.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	stb/tests/caveview/glext.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	stb/tests/caveview/glext.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	stb/tests/caveview/glext.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	stb/tests/caveview/glext.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	stb/tests/caveview/glext.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_compatibility	stb/tests/caveview/glext.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	stb/tests/caveview/glext.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	stb/tests/caveview/glext.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	stb/tests/caveview/glext.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	stb/tests/caveview/glext.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	stb/tests/caveview/glext.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	stb/tests/caveview/glext.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	stb/tests/caveview/glext.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_color_buffer_float	stb/tests/caveview/glext.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	stb/tests/caveview/glext.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	stb/tests/caveview/glext.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	stb/tests/caveview/glext.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	stb/tests/caveview/glext.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conservative_depth	stb/tests/caveview/glext.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	stb/tests/caveview/glext.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	stb/tests/caveview/glext.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_debug_output	stb/tests/caveview/glext.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	stb/tests/caveview/glext.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	stb/tests/caveview/glext.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	stb/tests/caveview/glext.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_draw_buffers	stb/tests/caveview/glext.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	stb/tests/caveview/glext.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	stb/tests/caveview/glext.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	stb/tests/caveview/glext.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	stb/tests/caveview/glext.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	stb/tests/caveview/glext.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	stb/tests/caveview/glext.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	stb/tests/caveview/glext.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	stb/tests/caveview/glext.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	stb/tests/caveview/glext.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	stb/tests/caveview/glext.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	stb/tests/caveview/glext.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	stb/tests/caveview/glext.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_framebuffer_no_attachments	stb/tests/caveview/glext.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	stb/tests/caveview/glext.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	stb/tests/caveview/glext.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	stb/tests/caveview/glext.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_gpu_shader5	stb/tests/caveview/glext.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	stb/tests/caveview/glext.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_pixel	stb/tests/caveview/glext.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	stb/tests/caveview/glext.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	stb/tests/caveview/glext.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	stb/tests/caveview/glext.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	stb/tests/caveview/glext.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	stb/tests/caveview/glext.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	stb/tests/caveview/glext.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	stb/tests/caveview/glext.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	stb/tests/caveview/glext.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	stb/tests/caveview/glext.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	stb/tests/caveview/glext.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	stb/tests/caveview/glext.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	stb/tests/caveview/glext.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	stb/tests/caveview/glext.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	stb/tests/caveview/glext.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	stb/tests/caveview/glext.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	stb/tests/caveview/glext.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_pixel_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	stb/tests/caveview/glext.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	stb/tests/caveview/glext.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_program_interface_query	stb/tests/caveview/glext.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	stb/tests/caveview/glext.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	stb/tests/caveview/glext.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	stb/tests/caveview/glext.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	stb/tests/caveview/glext.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_shading	stb/tests/caveview/glext.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	stb/tests/caveview/glext.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	stb/tests/caveview/glext.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	stb/tests/caveview/glext.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	stb/tests/caveview/glext.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_draw_parameters	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_lod	stb/tests/caveview/glext.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shading_language_100	stb/tests/caveview/glext.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	stb/tests/caveview/glext.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	stb/tests/caveview/glext.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	stb/tests/caveview/glext.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	stb/tests/caveview/glext.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	stb/tests/caveview/glext.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_texture	stb/tests/caveview/glext.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_stencil_texturing	stb/tests/caveview/glext.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	stb/tests/caveview/glext.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	stb/tests/caveview/glext.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_border_clamp	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_float	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	stb/tests/caveview/glext.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	stb/tests/caveview/glext.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	stb/tests/caveview/glext.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	stb/tests/caveview/glext.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	stb/tests/caveview/glext.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transpose_matrix	stb/tests/caveview/glext.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	stb/tests/caveview/glext.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	stb/tests/caveview/glext.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	stb/tests/caveview/glext.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARRAY_BUFFER	stb/tests/caveview/glext.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	stb/tests/caveview/glext.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	stb/tests/caveview/glext.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	stb/tests/caveview/glext.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	stb/tests/caveview/glext.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	stb/tests/caveview/glext.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	stb/tests/caveview/glext.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	stb/tests/caveview/glext.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	stb/tests/caveview/glext.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	stb/tests/caveview/glext.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATI_draw_buffers	stb/tests/caveview/glext.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	stb/tests/caveview/glext.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	stb/tests/caveview/glext.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	stb/tests/caveview/glext.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	stb/tests/caveview/glext.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	stb/tests/caveview/glext.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pixel_format_float	stb/tests/caveview/glext.h	/^#define GL_ATI_pixel_format_float /;"	d
GL_ATI_pn_triangles	stb/tests/caveview/glext.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	stb/tests/caveview/glext.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_text_fragment_shader	stb/tests/caveview/glext.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_env_combine3	stb/tests/caveview/glext.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	stb/tests/caveview/glext.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	stb/tests/caveview/glext.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	stb/tests/caveview/glext.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	stb/tests/caveview/glext.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	stb/tests/caveview/glext.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	stb/tests/caveview/glext.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	stb/tests/caveview/glext.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	stb/tests/caveview/glext.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	stb/tests/caveview/glext.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	stb/tests/caveview/glext.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	stb/tests/caveview/glext.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_AUTO_GENERATE_MIPMAP	stb/tests/caveview/glext.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUX_DEPTH_STENCIL_APPLE	stb/tests/caveview/glext.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	stb/tests/caveview/glext.h	/^#define GL_AVERAGE_EXT /;"	d
GL_AVERAGE_HP	stb/tests/caveview/glext.h	/^#define GL_AVERAGE_HP /;"	d
GL_BACK_NORMALS_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_SECONDARY_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BEVEL_NV	stb/tests/caveview/glext.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	stb/tests/caveview/glext.h	/^#define GL_BGR /;"	d
GL_BGRA	stb/tests/caveview/glext.h	/^#define GL_BGRA /;"	d
GL_BGRA_EXT	stb/tests/caveview/glext.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_INTEGER	stb/tests/caveview/glext.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	stb/tests/caveview/glext.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	stb/tests/caveview/glext.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BIAS_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	stb/tests/caveview/glext.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINORMAL_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	stb/tests/caveview/glext.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	stb/tests/caveview/glext.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST_ALPHA	stb/tests/caveview/glext.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	stb/tests/caveview/glext.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_OVERLAP_NV	stb/tests/caveview/glext.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	stb/tests/caveview/glext.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC_ALPHA	stb/tests/caveview/glext.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	stb/tests/caveview/glext.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLOCK_INDEX	stb/tests/caveview/glext.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	stb/tests/caveview/glext.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	stb/tests/caveview/glext.h	/^#define GL_BLUE_NV /;"	d
GL_BOLD_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	stb/tests/caveview/glext.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	stb/tests/caveview/glext.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	stb/tests/caveview/glext.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	stb/tests/caveview/glext.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	stb/tests/caveview/glext.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	stb/tests/caveview/glext.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	stb/tests/caveview/glext.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	stb/tests/caveview/glext.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	stb/tests/caveview/glext.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAP_LENGTH	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	stb/tests/caveview/glext.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_OBJECT_APPLE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	stb/tests/caveview/glext.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	stb/tests/caveview/glext.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	stb/tests/caveview/glext.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	stb/tests/caveview/glext.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	stb/tests/caveview/glext.h	/^#define GL_CALLIGRAPHIC_FRAGMENT_SGIX /;"	d
GL_CAVEAT_SUPPORT	stb/tests/caveview/glext.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP_FRAGMENT_COLOR	stb/tests/caveview/glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	stb/tests/caveview/glext.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	stb/tests/caveview/glext.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	stb/tests/caveview/glext.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	stb/tests/caveview/glext.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	stb/tests/caveview/glext.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_SGIS	stb/tests/caveview/glext.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	stb/tests/caveview/glext.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_SGIS	stb/tests/caveview/glext.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	stb/tests/caveview/glext.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	stb/tests/caveview/glext.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR_BUFFER	stb/tests/caveview/glext.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	stb/tests/caveview/glext.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_STORAGE_BIT	stb/tests/caveview/glext.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIP_DISTANCE0	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_DISTANCE_NV	stb/tests/caveview/glext.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	stb/tests/caveview/glext.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	stb/tests/caveview/glext.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	stb/tests/caveview/glext.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	stb/tests/caveview/glext.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	stb/tests/caveview/glext.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	stb/tests/caveview/glext.h	/^#define GL_CND_ATI /;"	d
GL_COLOR3_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_NV	stb/tests/caveview/glext.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_NV	stb/tests/caveview/glext.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	stb/tests/caveview/glext.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT1	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT11	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT12	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT13	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT14	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT15	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT1_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT2	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT3	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT4	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT5	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT6	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT7	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT8	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT9	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	stb/tests/caveview/glext.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	stb/tests/caveview/glext.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_FLOAT_APPLE	stb/tests/caveview/glext.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX12_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_MATRIX	stb/tests/caveview/glext.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	stb/tests/caveview/glext.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	stb/tests/caveview/glext.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	stb/tests/caveview/glext.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	stb/tests/caveview/glext.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	stb/tests/caveview/glext.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	stb/tests/caveview/glext.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_SGI	stb/tests/caveview/glext.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COMBINE	stb/tests/caveview/glext.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	stb/tests/caveview/glext.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	stb/tests/caveview/glext.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	stb/tests/caveview/glext.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	stb/tests/caveview/glext.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	stb/tests/caveview/glext.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	stb/tests/caveview/glext.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	stb/tests/caveview/glext.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_R11_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	stb/tests/caveview/glext.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	stb/tests/caveview/glext.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	stb/tests/caveview/glext.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONJOINT_NV	stb/tests/caveview/glext.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	stb/tests/caveview/glext.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_BORDER	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_BORDER_HP	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_BORDER_HP /;"	d
GL_CONSTANT_COLOR	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	stb/tests/caveview/glext.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	stb/tests/caveview/glext.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_PROFILE_MASK	stb/tests/caveview/glext.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTINUOUS_AMD	stb/tests/caveview/glext.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	stb/tests/caveview/glext.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	stb/tests/caveview/glext.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_BORDER_COLOR_HP /;"	d
GL_CONVOLUTION_BORDER_MODE	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	stb/tests/caveview/glext.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_10_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_10_ATI /;"	d
GL_CON_11_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_11_ATI /;"	d
GL_CON_12_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_12_ATI /;"	d
GL_CON_13_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_13_ATI /;"	d
GL_CON_14_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_14_ATI /;"	d
GL_CON_15_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_15_ATI /;"	d
GL_CON_16_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_16_ATI /;"	d
GL_CON_17_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_17_ATI /;"	d
GL_CON_18_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_18_ATI /;"	d
GL_CON_19_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_19_ATI /;"	d
GL_CON_1_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_20_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_20_ATI /;"	d
GL_CON_21_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_21_ATI /;"	d
GL_CON_22_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_22_ATI /;"	d
GL_CON_23_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_23_ATI /;"	d
GL_CON_24_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_24_ATI /;"	d
GL_CON_25_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_25_ATI /;"	d
GL_CON_26_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_26_ATI /;"	d
GL_CON_27_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_27_ATI /;"	d
GL_CON_28_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_28_ATI /;"	d
GL_CON_29_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_29_ATI /;"	d
GL_CON_2_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_30_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_30_ATI /;"	d
GL_CON_31_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_31_ATI /;"	d
GL_CON_3_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_7_ATI /;"	d
GL_CON_8_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_8_ATI /;"	d
GL_CON_9_ATI	stb/tests/caveview/glext.h	/^#define GL_CON_9_ATI /;"	d
GL_COORD_REPLACE	stb/tests/caveview/glext.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	stb/tests/caveview/glext.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	stb/tests/caveview/glext.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COPY_READ_BUFFER	stb/tests/caveview/glext.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COUNTER_RANGE_AMD	stb/tests/caveview/glext.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	stb/tests/caveview/glext.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	stb/tests/caveview/glext.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	stb/tests/caveview/glext.h	/^#define GL_COUNT_UP_NV /;"	d
GL_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	stb/tests/caveview/glext.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_HP	stb/tests/caveview/glext.h	/^#define GL_CUBIC_HP /;"	d
GL_CULL_FRAGMENT_NV	stb/tests/caveview/glext.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	stb/tests/caveview/glext.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	stb/tests/caveview/glext.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	stb/tests/caveview/glext.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	stb/tests/caveview/glext.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	stb/tests/caveview/glext.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	stb/tests/caveview/glext.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_FOG_COORD	stb/tests/caveview/glext.h	/^#define GL_CURRENT_FOG_COORD /;"	d
GL_CURRENT_FOG_COORDINATE	stb/tests/caveview/glext.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	stb/tests/caveview/glext.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	stb/tests/caveview/glext.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	stb/tests/caveview/glext.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	stb/tests/caveview/glext.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	stb/tests/caveview/glext.h	/^#define GL_CURRENT_RASTER_NORMAL_SGIX /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	stb/tests/caveview/glext.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR	stb/tests/caveview/glext.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TIME_NV	stb/tests/caveview/glext.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	stb/tests/caveview/glext.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_DARKEN_NV	stb/tests/caveview/glext.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	stb/tests/caveview/glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	stb/tests/caveview/glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	stb/tests/caveview/glext.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	stb/tests/caveview/glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	stb/tests/caveview/glext.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECODE_EXT	stb/tests/caveview/glext.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR_WRAP	stb/tests/caveview/glext.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	stb/tests/caveview/glext.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEFORMATIONS_MASK_SGIX	stb/tests/caveview/glext.h	/^#define GL_DEFORMATIONS_MASK_SGIX /;"	d
GL_DELETE_STATUS	stb/tests/caveview/glext.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	stb/tests/caveview/glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH24_STENCIL8	stb/tests/caveview/glext.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	stb/tests/caveview/glext.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH32F_STENCIL8	stb/tests/caveview/glext.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BOUNDS_EXT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	stb/tests/caveview/glext.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_FAR_AMD	stb/tests/caveview/glext.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	stb/tests/caveview/glext.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_COMPONENT16	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_SGIX	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_SGIX	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_SGIX	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_RENDERABLE	stb/tests/caveview/glext.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_STENCIL	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	stb/tests/caveview/glext.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEXTURE_MODE	stb/tests/caveview/glext.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	stb/tests/caveview/glext.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	stb/tests/caveview/glext.h	/^#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS /;"	d
GL_DETAIL_TEXTURE_2D_SGIS	stb/tests/caveview/glext.h	/^#define GL_DETAIL_TEXTURE_2D_SGIS /;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	stb/tests/caveview/glext.h	/^#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	stb/tests/caveview/glext.h	/^#define GL_DETAIL_TEXTURE_LEVEL_SGIS /;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	stb/tests/caveview/glext.h	/^#define GL_DETAIL_TEXTURE_MODE_SGIS /;"	d
GL_DIFFERENCE_NV	stb/tests/caveview/glext.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DISCARD_ATI	stb/tests/caveview/glext.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	stb/tests/caveview/glext.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	stb/tests/caveview/glext.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	stb/tests/caveview/glext.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	stb/tests/caveview/glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	stb/tests/caveview/glext.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	stb/tests/caveview/glext.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DISTANCE_ATTENUATION_SGIS	stb/tests/caveview/glext.h	/^#define GL_DISTANCE_ATTENUATION_SGIS /;"	d
GL_DOT2_ADD_ATI	stb/tests/caveview/glext.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	stb/tests/caveview/glext.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	stb/tests/caveview/glext.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE_MAT2	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	stb/tests/caveview/glext.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DRAW_BUFFER0	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER1	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER11	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER12	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER13	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER14	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER15	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER1_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER2	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER3	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER4	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER5	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER6	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER7	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER8	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER9	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	stb/tests/caveview/glext.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_FRAMEBUFFER	stb/tests/caveview/glext.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	stb/tests/caveview/glext.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	stb/tests/caveview/glext.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	stb/tests/caveview/glext.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	stb/tests/caveview/glext.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ATOP_NV	stb/tests/caveview/glext.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_IN_NV	stb/tests/caveview/glext.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	stb/tests/caveview/glext.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	stb/tests/caveview/glext.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	stb/tests/caveview/glext.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	stb/tests/caveview/glext.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUAL_ALPHA12_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_ALPHA12_SGIS /;"	d
GL_DUAL_ALPHA16_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_ALPHA16_SGIS /;"	d
GL_DUAL_ALPHA4_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_ALPHA4_SGIS /;"	d
GL_DUAL_ALPHA8_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_ALPHA8_SGIS /;"	d
GL_DUAL_INTENSITY12_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_INTENSITY12_SGIS /;"	d
GL_DUAL_INTENSITY16_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_INTENSITY16_SGIS /;"	d
GL_DUAL_INTENSITY4_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_INTENSITY4_SGIS /;"	d
GL_DUAL_INTENSITY8_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_INTENSITY8_SGIS /;"	d
GL_DUAL_LUMINANCE12_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE12_SGIS /;"	d
GL_DUAL_LUMINANCE16_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE16_SGIS /;"	d
GL_DUAL_LUMINANCE4_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE4_SGIS /;"	d
GL_DUAL_LUMINANCE8_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE8_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA4_SGIS /;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_LUMINANCE_ALPHA8_SGIS /;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	stb/tests/caveview/glext.h	/^#define GL_DUAL_TEXTURE_SELECT_SGIS /;"	d
GL_DUDV_ATI	stb/tests/caveview/glext.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	stb/tests/caveview/glext.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGEFLAG_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EIGHTH_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	stb/tests/caveview/glext.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	stb/tests/caveview/glext.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EVAL_2D_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	stb/tests/caveview/glext.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_NV	stb/tests/caveview/glext.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXPAND_NEGATE_NV	stb/tests/caveview/glext.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	stb/tests/caveview/glext.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	stb/tests/caveview/glext.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_abgr	stb/tests/caveview/glext.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	stb/tests/caveview/glext.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	stb/tests/caveview/glext.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	stb/tests/caveview/glext.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	stb/tests/caveview/glext.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	stb/tests/caveview/glext.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_subtable	stb/tests/caveview/glext.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	stb/tests/caveview/glext.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	stb/tests/caveview/glext.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	stb/tests/caveview/glext.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	stb/tests/caveview/glext.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	stb/tests/caveview/glext.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	stb/tests/caveview/glext.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	stb/tests/caveview/glext.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	stb/tests/caveview/glext.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_direct_state_access	stb/tests/caveview/glext.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_draw_buffers2	stb/tests/caveview/glext.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_instanced	stb/tests/caveview/glext.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	stb/tests/caveview/glext.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_fog_coord	stb/tests/caveview/glext.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_framebuffer_blit	stb/tests/caveview/glext.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	stb/tests/caveview/glext.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	stb/tests/caveview/glext.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	stb/tests/caveview/glext.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	stb/tests/caveview/glext.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_shader4	stb/tests/caveview/glext.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	stb/tests/caveview/glext.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	stb/tests/caveview/glext.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_histogram	stb/tests/caveview/glext.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	stb/tests/caveview/glext.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	stb/tests/caveview/glext.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	stb/tests/caveview/glext.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	stb/tests/caveview/glext.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	stb/tests/caveview/glext.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_misc_attribute	stb/tests/caveview/glext.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	stb/tests/caveview/glext.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	stb/tests/caveview/glext.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_packed_depth_stencil	stb/tests/caveview/glext.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	stb/tests/caveview/glext.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	stb/tests/caveview/glext.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	stb/tests/caveview/glext.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	stb/tests/caveview/glext.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	stb/tests/caveview/glext.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	stb/tests/caveview/glext.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	stb/tests/caveview/glext.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	stb/tests/caveview/glext.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_provoking_vertex	stb/tests/caveview/glext.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_rescale_normal	stb/tests/caveview/glext.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_secondary_color	stb/tests/caveview/glext.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_separate_shader_objects	stb/tests/caveview/glext.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	stb/tests/caveview/glext.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_image_load_store	stb/tests/caveview/glext.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_integer_mix	stb/tests/caveview/glext.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shadow_funcs	stb/tests/caveview/glext.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shared_texture_palette	stb/tests/caveview/glext.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_stencil_clear_tag	stb/tests/caveview/glext.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	stb/tests/caveview/glext.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	stb/tests/caveview/glext.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	stb/tests/caveview/glext.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	stb/tests/caveview/glext.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	stb/tests/caveview/glext.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_buffer_object	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_latc	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_cube_map	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_env_add	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_integer	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_sRGB	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_decode	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shared_exponent	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_swizzle	stb/tests/caveview/glext.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_timer_query	stb/tests/caveview/glext.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	stb/tests/caveview/glext.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_vertex_array	stb/tests/caveview/glext.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	stb/tests/caveview/glext.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_attrib_64bit	stb/tests/caveview/glext.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	stb/tests/caveview/glext.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	stb/tests/caveview/glext.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_x11_sync_object	stb/tests/caveview/glext.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	stb/tests/caveview/glext.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	stb/tests/caveview/glext.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINE_SGIS	stb/tests/caveview/glext.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	stb/tests/caveview/glext.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	stb/tests/caveview/glext.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	stb/tests/caveview/glext.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	stb/tests/caveview/glext.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_MAX_AMD	stb/tests/caveview/glext.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	stb/tests/caveview/glext.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	stb/tests/caveview/glext.h	/^#define GL_FAILURE_NV /;"	d
GL_FENCE_APPLE	stb/tests/caveview/glext.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	stb/tests/caveview/glext.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	stb/tests/caveview/glext.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FIELDS_NV	stb/tests/caveview/glext.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	stb/tests/caveview/glext.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	stb/tests/caveview/glext.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	stb/tests/caveview/glext.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILTER	stb/tests/caveview/glext.h	/^#define GL_FILTER /;"	d
GL_FILTER4_SGIS	stb/tests/caveview/glext.h	/^#define GL_FILTER4_SGIS /;"	d
GL_FIRST_TO_REST_NV	stb/tests/caveview/glext.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	stb/tests/caveview/glext.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	stb/tests/caveview/glext.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIXED	stb/tests/caveview/glext.h	/^#define GL_FIXED /;"	d
GL_FIXED_OES	stb/tests/caveview/glext.h	/^#define GL_FIXED_OES /;"	d
GL_FIXED_ONLY	stb/tests/caveview/glext.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	stb/tests/caveview/glext.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FLOAT16_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	stb/tests/caveview/glext.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_R16_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	stb/tests/caveview/glext.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	stb/tests/caveview/glext.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG_COORD	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD /;"	d
GL_FOG_COORDINATE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	stb/tests/caveview/glext.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	stb/tests/caveview/glext.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DISTANCE_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_FUNC_POINTS_SGIS	stb/tests/caveview/glext.h	/^#define GL_FOG_FUNC_POINTS_SGIS /;"	d
GL_FOG_FUNC_SGIS	stb/tests/caveview/glext.h	/^#define GL_FOG_FUNC_SGIS /;"	d
GL_FOG_OFFSET_SGIX	stb/tests/caveview/glext.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	stb/tests/caveview/glext.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	stb/tests/caveview/glext.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FONT_ASCENDER_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	stb/tests/caveview/glext.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	stb/tests/caveview/glext.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	stb/tests/caveview/glext.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRACTIONAL_EVEN	stb/tests/caveview/glext.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	stb/tests/caveview/glext.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX /;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_SGIX /;"	d
GL_FRAGMENT_DEPTH	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_LIGHT0_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT0_SGIX /;"	d
GL_FRAGMENT_LIGHT1_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT1_SGIX /;"	d
GL_FRAGMENT_LIGHT2_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT2_SGIX /;"	d
GL_FRAGMENT_LIGHT3_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT3_SGIX /;"	d
GL_FRAGMENT_LIGHT4_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT4_SGIX /;"	d
GL_FRAGMENT_LIGHT5_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT5_SGIX /;"	d
GL_FRAGMENT_LIGHT6_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT6_SGIX /;"	d
GL_FRAGMENT_LIGHT7_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT7_SGIX /;"	d
GL_FRAGMENT_LIGHTING_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHTING_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BLEND	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_RENDERABLE	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	stb/tests/oversample/main.c	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d	file:
GL_FRAMEBUFFER_UNDEFINED	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	stb/tests/caveview/glext.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEZOOM_FACTOR_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_FRAMEZOOM_SGIX	stb/tests/caveview/glext.h	/^#define GL_FRAMEZOOM_SGIX /;"	d
GL_FRAME_NV	stb/tests/caveview/glext.h	/^#define GL_FRAME_NV /;"	d
GL_FULL_RANGE_EXT	stb/tests/caveview/glext.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	stb/tests/caveview/glext.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	stb/tests/caveview/glext.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	stb/tests/caveview/glext.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	stb/tests/caveview/glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	stb/tests/caveview/glext.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	stb/tests/caveview/glext.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	stb/tests/caveview/glext.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GENERATE_MIPMAP	stb/tests/caveview/glext.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	stb/tests/caveview/glext.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	stb/tests/caveview/glext.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	stb/tests/caveview/glext.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	stb/tests/caveview/glext.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_DEFORMATION_SGIX	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_DEFORMATION_SGIX /;"	d
GL_GEOMETRY_INPUT_TYPE	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_OUTPUT_TYPE	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_EXT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	stb/tests/caveview/glext.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	stb/tests/caveview/glext.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	stb/tests/caveview/glext.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLEXT_PROTOTYPES	glwrappers.h	/^#define GL_GLEXT_PROTOTYPES$/;"	d
GL_GLEXT_VERSION	stb/tests/caveview/glext.h	/^#define GL_GLEXT_VERSION /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	stb/tests/caveview/glext.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	stb/tests/caveview/glext.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GREEN_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	stb/tests/caveview/glext.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	stb/tests/caveview/glext.h	/^#define GL_GREEN_NV /;"	d
GL_GREMEDY_frame_terminator	stb/tests/caveview/glext.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	stb/tests/caveview/glext.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	stb/tests/caveview/glext.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_APPLE	stb/tests/caveview/glext.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	stb/tests/caveview/glext.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	stb/tests/caveview/glext.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	stb/tests/caveview/glext.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	stb/tests/caveview/glext.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	stb/tests/caveview/glext.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HARDLIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	stb/tests/caveview/glext.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	stb/tests/caveview/glext.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	stb/tests/caveview/glext.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	stb/tests/caveview/glext.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	stb/tests/caveview/glext.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	stb/tests/caveview/glext.h	/^#define GL_HILO_NV /;"	d
GL_HISTOGRAM	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	stb/tests/caveview/glext.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	stb/tests/caveview/glext.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	stb/tests/caveview/glext.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	stb/tests/caveview/glext.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	stb/tests/caveview/glext.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_NV	stb/tests/caveview/glext.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_NV	stb/tests/caveview/glext.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_NV	stb/tests/caveview/glext.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	stb/tests/caveview/glext.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	stb/tests/caveview/glext.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	stb/tests/caveview/glext.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	stb/tests/caveview/glext.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	stb/tests/caveview/glext.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	stb/tests/caveview/glext.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	stb/tests/caveview/glext.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER_HP	stb/tests/caveview/glext.h	/^#define GL_IGNORE_BORDER_HP /;"	d
GL_IMAGE_1D	stb/tests/caveview/glext.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	stb/tests/caveview/glext.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_CLASS_10_10_10_2	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	stb/tests/caveview/glext.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_CUBIC_WEIGHT_HP /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	stb/tests/caveview/glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_MAG_FILTER_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_MAG_FILTER_HP /;"	d
GL_IMAGE_MIN_FILTER_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_MIN_FILTER_HP /;"	d
GL_IMAGE_PIXEL_FORMAT	stb/tests/caveview/glext.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_ROTATE_ANGLE_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_ROTATE_ANGLE_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_X_HP /;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_ROTATE_ORIGIN_Y_HP /;"	d
GL_IMAGE_SCALE_X_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_SCALE_X_HP /;"	d
GL_IMAGE_SCALE_Y_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_SCALE_Y_HP /;"	d
GL_IMAGE_TEXEL_SIZE	stb/tests/caveview/glext.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMAGE_TRANSFORM_2D_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_TRANSFORM_2D_HP /;"	d
GL_IMAGE_TRANSLATE_X_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_TRANSLATE_X_HP /;"	d
GL_IMAGE_TRANSLATE_Y_HP	stb/tests/caveview/glext.h	/^#define GL_IMAGE_TRANSLATE_Y_HP /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	stb/tests/caveview/glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	stb/tests/caveview/glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	stb/tests/caveview/glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	stb/tests/caveview/glext.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCR_WRAP	stb/tests/caveview/glext.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	stb/tests/caveview/glext.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	stb/tests/caveview/glext.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_MATERIAL_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_MATERIAL_EXT /;"	d
GL_INDEX_MATERIAL_FACE_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_MATERIAL_FACE_EXT /;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_MATERIAL_PARAMETER_EXT /;"	d
GL_INDEX_TEST_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_TEST_EXT /;"	d
GL_INDEX_TEST_FUNC_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_TEST_FUNC_EXT /;"	d
GL_INDEX_TEST_REF_EXT	stb/tests/caveview/glext.h	/^#define GL_INDEX_TEST_REF_EXT /;"	d
GL_INFO_LOG_LENGTH	stb/tests/caveview/glext.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_blend_func_separate	stb/tests/caveview/glext.h	/^#define GL_INGR_blend_func_separate /;"	d
GL_INGR_color_clamp	stb/tests/caveview/glext.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	stb/tests/caveview/glext.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	stb/tests/caveview/glext.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	stb/tests/caveview/glext.h	/^#define GL_INSTRUMENT_BUFFER_POINTER_SGIX /;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	stb/tests/caveview/glext.h	/^#define GL_INSTRUMENT_MEASUREMENTS_SGIX /;"	d
GL_INT16_NV	stb/tests/caveview/glext.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_NV	stb/tests/caveview/glext.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	stb/tests/caveview/glext.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_fragment_shader_ordering	stb/tests/caveview/glext.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_map_texture	stb/tests/caveview/glext.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	stb/tests/caveview/glext.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	stb/tests/caveview/glext.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTENSITY12_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16F_ARB	stb/tests/caveview/glext.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_SNORM	stb/tests/caveview/glext.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	stb/tests/caveview/glext.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8I_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	stb/tests/caveview/glext.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_SNORM	stb/tests/caveview/glext.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	stb/tests/caveview/glext.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	stb/tests/caveview/glext.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	stb/tests/caveview/glext.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	stb/tests/caveview/glext.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	stb/tests/caveview/glext.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	stb/tests/caveview/glext.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	stb/tests/caveview/glext.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	stb/tests/caveview/glext.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	stb/tests/caveview/glext.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	stb/tests/caveview/glext.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_2_10_10_10_REV	stb/tests/caveview/glext.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_CUBE	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_CUBE	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	stb/tests/caveview/glext.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	stb/tests/caveview/glext.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	stb/tests/caveview/glext.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	stb/tests/caveview/glext.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	stb/tests/caveview/glext.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	stb/tests/caveview/glext.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	stb/tests/caveview/glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	stb/tests/caveview/glext.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_INDEX	stb/tests/caveview/glext.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVARIANT_DATATYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	stb/tests/caveview/glext.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	stb/tests/caveview/glext.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	stb/tests/caveview/glext.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	stb/tests/caveview/glext.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERTED_SCREEN_W_REND	stb/tests/caveview/glext.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	stb/tests/caveview/glext.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	stb/tests/caveview/glext.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_IR_INSTRUMENT1_SGIX	stb/tests/caveview/glext.h	/^#define GL_IR_INSTRUMENT1_SGIX /;"	d
GL_ISOLINES	stb/tests/caveview/glext.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	stb/tests/caveview/glext.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	stb/tests/caveview/glext.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_IUI_N3F_V2F_EXT	stb/tests/caveview/glext.h	/^#define GL_IUI_N3F_V2F_EXT /;"	d
GL_IUI_N3F_V3F_EXT	stb/tests/caveview/glext.h	/^#define GL_IUI_N3F_V3F_EXT /;"	d
GL_IUI_V2F_EXT	stb/tests/caveview/glext.h	/^#define GL_IUI_V2F_EXT /;"	d
GL_IUI_V3F_EXT	stb/tests/caveview/glext.h	/^#define GL_IUI_V3F_EXT /;"	d
GL_KHR_debug	stb/tests/caveview/glext.h	/^#define GL_KHR_debug /;"	d
GL_KHR_texture_compression_astc_hdr	stb/tests/caveview/glext.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	stb/tests/caveview/glext.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_LARGE_CCW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	stb/tests/caveview/glext.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	stb/tests/caveview/glext.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	stb/tests/caveview/glext.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYER_NV	stb/tests/caveview/glext.h	/^#define GL_LAYER_NV /;"	d
GL_LAYER_PROVOKING_VERTEX	stb/tests/caveview/glext.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYOUT_DEFAULT_INTEL	stb/tests/caveview/glext.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	stb/tests/caveview/glext.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	stb/tests/caveview/glext.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LERP_ATI	stb/tests/caveview/glext.h	/^#define GL_LERP_ATI /;"	d
GL_LIGHTEN_NV	stb/tests/caveview/glext.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHT_ENV_MODE_SGIX	stb/tests/caveview/glext.h	/^#define GL_LIGHT_ENV_MODE_SGIX /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	stb/tests/caveview/glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	stb/tests/caveview/glext.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	stb/tests/caveview/glext.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LINEARBURN_NV	stb/tests/caveview/glext.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	stb/tests/caveview/glext.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	stb/tests/caveview/glext.h	/^#define GL_LINEAR_CLIPMAP_LINEAR_SGIX /;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	stb/tests/caveview/glext.h	/^#define GL_LINEAR_CLIPMAP_NEAREST_SGIX /;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_DETAIL_ALPHA_SGIS /;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_DETAIL_COLOR_SGIS /;"	d
GL_LINEAR_DETAIL_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_DETAIL_SGIS /;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_SHARPEN_ALPHA_SGIS /;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_SHARPEN_COLOR_SGIS /;"	d
GL_LINEAR_SHARPEN_SGIS	stb/tests/caveview/glext.h	/^#define GL_LINEAR_SHARPEN_SGIS /;"	d
GL_LINES_ADJACENCY	stb/tests/caveview/glext.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	stb/tests/caveview/glext.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	stb/tests/caveview/glext.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINE_STRIP_ADJACENCY	stb/tests/caveview/glext.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	stb/tests/caveview/glext.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	stb/tests/caveview/glext.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINK_STATUS	stb/tests/caveview/glext.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_PRIORITY_SGIX	stb/tests/caveview/glext.h	/^#define GL_LIST_PRIORITY_SGIX /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	stb/tests/caveview/glext.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	stb/tests/caveview/glext.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	stb/tests/caveview/glext.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	stb/tests/caveview/glext.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	stb/tests/caveview/glext.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	stb/tests/caveview/glext.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	stb/tests/caveview/glext.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	stb/tests/caveview/glext.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	stb/tests/caveview/glext.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	stb/tests/caveview/glext.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUMINANCE12_ALPHA12_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16F_ARB	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4_ALPHA4_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA16F_ARB	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SNORM	stb/tests/caveview/glext.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	stb/tests/caveview/glext.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	stb/tests/caveview/glext.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	stb/tests/caveview/glext.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_TANGENT_EXT	stb/tests/caveview/glext.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_TANGENT_EXT	stb/tests/caveview/glext.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	stb/tests/caveview/glext.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	stb/tests/caveview/glext.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	stb/tests/caveview/glext.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_TESSELLATION_NV	stb/tests/caveview/glext.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	stb/tests/caveview/glext.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	stb/tests/caveview/glext.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_PALETTE_ARB	stb/tests/caveview/glext.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_STRIDE	stb/tests/caveview/glext.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	stb/tests/caveview/glext.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	stb/tests/caveview/glext.h	/^#define GL_MAX_4D_TEXTURE_SIZE_SGIS /;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_ACTIVE_LIGHTS_SGIX /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	stb/tests/caveview/glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	stb/tests/caveview/glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_CLIPMAP_DEPTH_SGIX /;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_MAX_CLIP_DISTANCES	stb/tests/caveview/glext.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	stb/tests/caveview/glext.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	stb/tests/caveview/glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_DEFORMATION_ORDER_SGIX /;"	d
GL_MAX_DEPTH	stb/tests/caveview/glext.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	stb/tests/caveview/glext.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	stb/tests/caveview/glext.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	stb/tests/caveview/glext.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	stb/tests/caveview/glext.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	stb/tests/caveview/glext.h	/^#define GL_MAX_FOG_FUNC_POINTS_SGIS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_LIGHTS_SGIX /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	stb/tests/caveview/glext.h	/^#define GL_MAX_FRAMEZOOM_FACTOR_SGIX /;"	d
GL_MAX_GENERAL_COMBINERS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	stb/tests/caveview/glext.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	stb/tests/caveview/glext.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_MAP_TESSELLATION_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_NAME_LENGTH	stb/tests/caveview/glext.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	stb/tests/caveview/glext.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	stb/tests/caveview/glext.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PATCH_VERTICES	stb/tests/caveview/glext.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	stb/tests/caveview/glext.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV /;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RENDERBUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLE_MASK_WORDS	stb/tests/caveview/glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	stb/tests/caveview/glext.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	stb/tests/caveview/glext.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHININESS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPOT_EXPONENT_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBROUTINES	stb/tests/caveview/glext.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	stb/tests/caveview/glext.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_COORDS	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	stb/tests/caveview/glext.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	stb/tests/caveview/glext.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	stb/tests/caveview/glext.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	stb/tests/caveview/glext.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	stb/tests/caveview/glext.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	stb/tests/caveview/glext.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_WIDTH	stb/tests/caveview/glext.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	stb/tests/caveview/glext.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	stb/tests/caveview/glext.h	/^#define GL_MEDIUM_INT /;"	d
GL_MESAX_texture_stack	stb/tests/caveview/glext.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_pack_invert	stb/tests/caveview/glext.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_resize_buffers	stb/tests/caveview/glext.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_window_pos	stb/tests/caveview/glext.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	stb/tests/caveview/glext.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	stb/tests/caveview/glext.h	/^#define GL_MIN /;"	d
GL_MINMAX	stb/tests/caveview/glext.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	stb/tests/caveview/glext.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	stb/tests/caveview/glext.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	stb/tests/caveview/glext.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	stb/tests/caveview/glext.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	stb/tests/caveview/glext.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	stb/tests/caveview/glext.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	stb/tests/caveview/glext.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_EXT	stb/tests/caveview/glext.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_LOD_WARNING_AMD	stb/tests/caveview/glext.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	stb/tests/caveview/glext.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	stb/tests/caveview/glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	stb/tests/caveview/glext.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SPARSE_LEVEL_AMD	stb/tests/caveview/glext.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIN_SPARSE_LEVEL_ARB	stb/tests/caveview/glext.h	/^#define GL_MIN_SPARSE_LEVEL_ARB /;"	d
GL_MIPMAP	stb/tests/caveview/glext.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	stb/tests/caveview/glext.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	stb/tests/caveview/glext.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	stb/tests/caveview/glext.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	stb/tests/caveview/glext.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MITER_REVERT_NV	stb/tests/caveview/glext.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	stb/tests/caveview/glext.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MODELVIEW0_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_PROJECTION_NV	stb/tests/caveview/glext.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODULATE_ADD_ATI	stb/tests/caveview/glext.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATI	stb/tests/caveview/glext.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SUBTRACT_ATI	stb/tests/caveview/glext.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MOVE_TO_CONTINUES_NV	stb/tests/caveview/glext.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	stb/tests/caveview/glext.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	stb/tests/caveview/glext.h	/^#define GL_MOV_ATI /;"	d
GL_MULTIPLY_NV	stb/tests/caveview/glext.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_3DFX	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_SGIS	stb/tests/caveview/glext.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MUL_ATI	stb/tests/caveview/glext.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_NAMED_STRING_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	stb/tests/caveview/glext.h	/^#define GL_NAME_LENGTH /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	stb/tests/caveview/glext.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	stb/tests/caveview/glext.h	/^#define GL_NEAREST_CLIPMAP_LINEAR_SGIX /;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	stb/tests/caveview/glext.h	/^#define GL_NEAREST_CLIPMAP_NEAREST_SGIX /;"	d
GL_NEGATE_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	stb/tests/caveview/glext.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_W_EXT	stb/tests/caveview/glext.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	stb/tests/caveview/glext.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	stb/tests/caveview/glext.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	stb/tests/caveview/glext.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEXT_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_NEXT_BUFFER_NV /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	stb/tests/caveview/glext.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NORMALIZED_RANGE_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	stb/tests/caveview/glext.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	stb/tests/caveview/glext.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	stb/tests/caveview/glext.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NO_RESET_NOTIFICATION_ARB	stb/tests/caveview/glext.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	stb/tests/caveview/glext.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	stb/tests/caveview/glext.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	stb/tests/caveview/glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	stb/tests/caveview/glext.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_EXTENSIONS	stb/tests/caveview/glext.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	stb/tests/caveview/glext.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	stb/tests/caveview/glext.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	stb/tests/caveview/glext.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	stb/tests/caveview/glext.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	stb/tests/caveview/glext.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	stb/tests/caveview/glext.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	stb/tests/caveview/glext.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	stb/tests/caveview/glext.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	stb/tests/caveview/glext.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NVX_conditional_render	stb/tests/caveview/glext.h	/^#define GL_NVX_conditional_render /;"	d
GL_NV_bindless_multi_draw_indirect	stb/tests/caveview/glext.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_texture	stb/tests/caveview/glext.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	stb/tests/caveview/glext.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	stb/tests/caveview/glext.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_square	stb/tests/caveview/glext.h	/^#define GL_NV_blend_square /;"	d
GL_NV_compute_program5	stb/tests/caveview/glext.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_conditional_render	stb/tests/caveview/glext.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_copy_depth_to_color	stb/tests/caveview/glext.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	stb/tests/caveview/glext.h	/^#define GL_NV_copy_image /;"	d
GL_NV_deep_texture3D	stb/tests/caveview/glext.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	stb/tests/caveview/glext.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	stb/tests/caveview/glext.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_draw_texture	stb/tests/caveview/glext.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_evaluators	stb/tests/caveview/glext.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_multisample	stb/tests/caveview/glext.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fence	stb/tests/caveview/glext.h	/^#define GL_NV_fence /;"	d
GL_NV_float_buffer	stb/tests/caveview/glext.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	stb/tests/caveview/glext.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_program	stb/tests/caveview/glext.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	stb/tests/caveview/glext.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	stb/tests/caveview/glext.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	stb/tests/caveview/glext.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_framebuffer_multisample_coverage	stb/tests/caveview/glext.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_geometry_program4	stb/tests/caveview/glext.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	stb/tests/caveview/glext.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_gpu_program4	stb/tests/caveview/glext.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	stb/tests/caveview/glext.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	stb/tests/caveview/glext.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_shader5	stb/tests/caveview/glext.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	stb/tests/caveview/glext.h	/^#define GL_NV_half_float /;"	d
GL_NV_light_max_exponent	stb/tests/caveview/glext.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_coverage	stb/tests/caveview/glext.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	stb/tests/caveview/glext.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	stb/tests/caveview/glext.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	stb/tests/caveview/glext.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_parameter_buffer_object	stb/tests/caveview/glext.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	stb/tests/caveview/glext.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	stb/tests/caveview/glext.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_pixel_data_range	stb/tests/caveview/glext.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	stb/tests/caveview/glext.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_present_video	stb/tests/caveview/glext.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	stb/tests/caveview/glext.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_register_combiners	stb/tests/caveview/glext.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	stb/tests/caveview/glext.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_shader_atomic_counters	stb/tests/caveview/glext.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	stb/tests/caveview/glext.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_buffer_load	stb/tests/caveview/glext.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_buffer_store	stb/tests/caveview/glext.h	/^#define GL_NV_shader_buffer_store /;"	d
GL_NV_shader_storage_buffer_object	stb/tests/caveview/glext.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_tessellation_program5	stb/tests/caveview/glext.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	stb/tests/caveview/glext.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	stb/tests/caveview/glext.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_barrier	stb/tests/caveview/glext.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_compression_vtc	stb/tests/caveview/glext.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	stb/tests/caveview/glext.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	stb/tests/caveview/glext.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	stb/tests/caveview/glext.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_rectangle	stb/tests/caveview/glext.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_shader	stb/tests/caveview/glext.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	stb/tests/caveview/glext.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	stb/tests/caveview/glext.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	stb/tests/caveview/glext.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	stb/tests/caveview/glext.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_vdpau_interop	stb/tests/caveview/glext.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vertex_array_range	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	stb/tests/caveview/glext.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	stb/tests/caveview/glext.h	/^#define GL_NV_video_capture /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	stb/tests/caveview/glext.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	stb/tests/caveview/glext.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	stb/tests/caveview/glext.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	stb/tests/caveview/glext.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINE_SGIS	stb/tests/caveview/glext.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_POINT_SGIS	stb/tests/caveview/glext.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	stb/tests/caveview/glext.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	stb/tests/caveview/glext.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	stb/tests/caveview/glext.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OCCLUSION_TEST_HP	stb/tests/caveview/glext.h	/^#define GL_OCCLUSION_TEST_HP /;"	d
GL_OCCLUSION_TEST_RESULT_HP	stb/tests/caveview/glext.h	/^#define GL_OCCLUSION_TEST_RESULT_HP /;"	d
GL_OES_byte_coordinates	stb/tests/caveview/glext.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_paletted_texture	stb/tests/caveview/glext.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_fixed_point	stb/tests/caveview/glext.h	/^#define GL_OES_fixed_point /;"	d
GL_OES_query_matrix	stb/tests/caveview/glext.h	/^#define GL_OES_query_matrix /;"	d
GL_OES_read_format	stb/tests/caveview/glext.h	/^#define GL_OES_read_format /;"	d
GL_OES_single_precision	stb/tests/caveview/glext.h	/^#define GL_OES_single_precision /;"	d
GL_OFFSET	stb/tests/caveview/glext.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	stb/tests/caveview/glext.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	stb/tests/caveview/glext.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	stb/tests/caveview/glext.h	/^#define GL_OML_subsample /;"	d
GL_ONE_EXT	stb/tests/caveview/glext.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_SRC1_ALPHA	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	stb/tests/caveview/glext.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_OPERAND0_ALPHA	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	stb/tests/caveview/glext.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OP_ADD_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	stb/tests/caveview/glext.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OUTPUT_COLOR0_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	stb/tests/caveview/glext.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OVERLAY_NV	stb/tests/caveview/glext.h	/^#define GL_OVERLAY_NV /;"	d
GL_PACK_CMYK_HINT_EXT	stb/tests/caveview/glext.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	stb/tests/caveview/glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	stb/tests/caveview/glext.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_DEPTH_SGIS	stb/tests/caveview/glext.h	/^#define GL_PACK_IMAGE_DEPTH_SGIS /;"	d
GL_PACK_IMAGE_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	stb/tests/caveview/glext.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_RESAMPLE_OML	stb/tests/caveview/glext.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	stb/tests/caveview/glext.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_ROW_BYTES_APPLE	stb/tests/caveview/glext.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_SKIP_IMAGES	stb/tests/caveview/glext.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	stb/tests/caveview/glext.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_VOLUMES_SGIS	stb/tests/caveview/glext.h	/^#define GL_PACK_SKIP_VOLUMES_SGIS /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	stb/tests/caveview/glext.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PALETTE4_R5_G6_B5_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	stb/tests/caveview/glext.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	stb/tests/caveview/glext.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	stb/tests/caveview/glext.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	stb/tests/caveview/glext.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PATCHES	stb/tests/caveview/glext.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	stb/tests/caveview/glext.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	stb/tests/caveview/glext.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	stb/tests/caveview/glext.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MITER_LIMIT_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	stb/tests/caveview/glext.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PERCENTAGE_AMD	stb/tests/caveview/glext.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_RESULT_AMD	stb/tests/caveview/glext.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	stb/tests/caveview/glext.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	stb/tests/caveview/glext.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	stb/tests/caveview/glext.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	stb/tests/caveview/glext.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERTURB_EXT	stb/tests/caveview/glext.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_STAGE_CONSTANTS_NV	stb/tests/caveview/glext.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	stb/tests/caveview/glext.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	stb/tests/caveview/glext.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	stb/tests/caveview/glext.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	stb/tests/caveview/glext.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	stb/tests/caveview/glext.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	stb/tests/caveview/glext.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	stb/tests/caveview/glext.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	stb/tests/caveview/glext.h	/^#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS /;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	stb/tests/caveview/glext.h	/^#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS /;"	d
GL_PIXEL_GROUP_COLOR_SGIS	stb/tests/caveview/glext.h	/^#define GL_PIXEL_GROUP_COLOR_SGIS /;"	d
GL_PIXEL_MAG_FILTER_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MIN_FILTER_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_PACK_BUFFER	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TEXTURE_SGIS	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TEXTURE_SGIS /;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TEX_GEN_MODE_SGIX /;"	d
GL_PIXEL_TEX_GEN_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TEX_GEN_SGIX /;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX /;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_CACHE_SIZE_SGIX /;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_GRID_DEPTH_SGIX /;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_GRID_WIDTH_SGIX /;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_HEIGHT_SGIX /;"	d
GL_PIXEL_TILE_WIDTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TILE_WIDTH_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	stb/tests/caveview/glext.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	stb/tests/caveview/glext.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	stb/tests/caveview/glext.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	stb/tests/caveview/glext.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT_DISTANCE_ATTENUATION	stb/tests/caveview/glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	stb/tests/caveview/glext.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	stb/tests/caveview/glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	stb/tests/caveview/glext.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS /;"	d
GL_POINT_SIZE_MAX	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MAX_SGIS	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MAX_SGIS /;"	d
GL_POINT_SIZE_MIN	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_MIN_SGIS	stb/tests/caveview/glext.h	/^#define GL_POINT_SIZE_MIN_SGIS /;"	d
GL_POINT_SPRITE	stb/tests/caveview/glext.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	stb/tests/caveview/glext.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	stb/tests/caveview/glext.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_NV	stb/tests/caveview/glext.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_EXT	stb/tests/caveview/glext.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	stb/tests/caveview/glext.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	stb/tests/caveview/glext.h	/^#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	stb/tests/caveview/glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	stb/tests/caveview/glext.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	stb/tests/caveview/glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	stb/tests/caveview/glext.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	stb/tests/caveview/glext.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	stb/tests/caveview/glext.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	stb/tests/caveview/glext.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	stb/tests/caveview/glext.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	stb/tests/caveview/glext.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	stb/tests/caveview/glext.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	stb/tests/caveview/glext.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	stb/tests/caveview/glext.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	stb/tests/caveview/glext.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVE_ID_NV	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	stb/tests/caveview/glext.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	stb/tests/caveview/glext.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_FORMATS	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_STRING_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	stb/tests/caveview/glext.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROVOKING_VERTEX	stb/tests/caveview/glext.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	stb/tests/caveview/glext.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	stb/tests/caveview/glext.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	stb/tests/caveview/glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	stb/tests/caveview/glext.h	/^#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_4D_SGIS	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_4D_SGIS /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	stb/tests/caveview/glext.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_QUADRATIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	stb/tests/caveview/glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	stb/tests/caveview/glext.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUAD_ALPHA4_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_ALPHA4_SGIS /;"	d
GL_QUAD_ALPHA8_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_ALPHA8_SGIS /;"	d
GL_QUAD_INTENSITY4_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_INTENSITY4_SGIS /;"	d
GL_QUAD_INTENSITY8_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_INTENSITY8_SGIS /;"	d
GL_QUAD_LUMINANCE4_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_LUMINANCE4_SGIS /;"	d
GL_QUAD_LUMINANCE8_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_LUMINANCE8_SGIS /;"	d
GL_QUAD_MESH_SUN	stb/tests/caveview/glext.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	stb/tests/caveview/glext.h	/^#define GL_QUAD_TEXTURE_SELECT_SGIS /;"	d
GL_QUARTER_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	stb/tests/caveview/glext.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	stb/tests/caveview/glext.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	stb/tests/caveview/glext.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_NV	stb/tests/caveview/glext.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	stb/tests/caveview/glext.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ARB	stb/tests/caveview/glext.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_NO_WAIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_NV	stb/tests/caveview/glext.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ARB	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_NO_WAIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	stb/tests/caveview/glext.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_WAIT	stb/tests/caveview/glext.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_NV	stb/tests/caveview/glext.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R11F_G11F_B10F	stb/tests/caveview/glext.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_EXT	stb/tests/caveview/glext.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R16	stb/tests/caveview/glext.h	/^#define GL_R16 /;"	d
GL_R16F	stb/tests/caveview/glext.h	/^#define GL_R16F /;"	d
GL_R16I	stb/tests/caveview/glext.h	/^#define GL_R16I /;"	d
GL_R16UI	stb/tests/caveview/glext.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	stb/tests/caveview/glext.h	/^#define GL_R16_SNORM /;"	d
GL_R1UI_C3F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	stb/tests/caveview/glext.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	stb/tests/caveview/glext.h	/^#define GL_R32F /;"	d
GL_R32I	stb/tests/caveview/glext.h	/^#define GL_R32I /;"	d
GL_R32UI	stb/tests/caveview/glext.h	/^#define GL_R32UI /;"	d
GL_R8	stb/tests/caveview/glext.h	/^#define GL_R8 /;"	d
GL_R8I	stb/tests/caveview/glext.h	/^#define GL_R8I /;"	d
GL_R8UI	stb/tests/caveview/glext.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	stb/tests/caveview/glext.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	stb/tests/caveview/glext.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	stb/tests/caveview/glext.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	stb/tests/caveview/glext.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	stb/tests/caveview/glext.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_READ_FRAMEBUFFER	stb/tests/caveview/glext.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_ONLY	stb/tests/caveview/glext.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	stb/tests/caveview/glext.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	stb/tests/caveview/glext.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	stb/tests/caveview/glext.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	stb/tests/caveview/glext.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	stb/tests/caveview/glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	stb/tests/caveview/glext.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	stb/tests/caveview/glext.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	stb/tests/caveview/glext.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	stb/tests/caveview/glext.h	/^#define GL_RECT_NV /;"	d
GL_REDUCE	stb/tests/caveview/glext.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	stb/tests/caveview/glext.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_INTEGER	stb/tests/caveview/glext.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	stb/tests/caveview/glext.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	stb/tests/caveview/glext.h	/^#define GL_RED_NV /;"	d
GL_RED_SNORM	stb/tests/caveview/glext.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	stb/tests/caveview/glext.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	stb/tests/caveview/glext.h	/^#define GL_REFERENCE_PLANE_EQUATION_SGIX /;"	d
GL_REFERENCE_PLANE_SGIX	stb/tests/caveview/glext.h	/^#define GL_REFERENCE_PLANE_SGIX /;"	d
GL_REFLECTION_MAP	stb/tests/caveview/glext.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	stb/tests/caveview/glext.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	stb/tests/caveview/glext.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	stb/tests/caveview/glext.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGISTER_COMBINERS_NV	stb/tests/caveview/glext.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_10_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_10_ATI /;"	d
GL_REG_11_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_11_ATI /;"	d
GL_REG_12_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_12_ATI /;"	d
GL_REG_13_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_13_ATI /;"	d
GL_REG_14_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_14_ATI /;"	d
GL_REG_15_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_15_ATI /;"	d
GL_REG_16_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_16_ATI /;"	d
GL_REG_17_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_17_ATI /;"	d
GL_REG_18_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_18_ATI /;"	d
GL_REG_19_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_19_ATI /;"	d
GL_REG_1_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_20_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_20_ATI /;"	d
GL_REG_21_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_21_ATI /;"	d
GL_REG_22_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_22_ATI /;"	d
GL_REG_23_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_23_ATI /;"	d
GL_REG_24_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_24_ATI /;"	d
GL_REG_25_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_25_ATI /;"	d
GL_REG_26_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_26_ATI /;"	d
GL_REG_27_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_27_ATI /;"	d
GL_REG_28_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_28_ATI /;"	d
GL_REG_29_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_29_ATI /;"	d
GL_REG_2_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_30_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_30_ATI /;"	d
GL_REG_31_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_31_ATI /;"	d
GL_REG_3_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_5_ATI /;"	d
GL_REG_6_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_6_ATI /;"	d
GL_REG_7_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_7_ATI /;"	d
GL_REG_8_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_8_ATI /;"	d
GL_REG_9_ATI	stb/tests/caveview/glext.h	/^#define GL_REG_9_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	stb/tests/caveview/glext.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDERBUFFER	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	stb/tests/caveview/glext.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_REND_screen_coordinates	stb/tests/caveview/glext.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	stb/tests/caveview/glext.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	stb/tests/caveview/glext.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	stb/tests/caveview/glext.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	stb/tests/caveview/glext.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPLICATE_BORDER_HP	stb/tests/caveview/glext.h	/^#define GL_REPLICATE_BORDER_HP /;"	d
GL_RESAMPLE_AVERAGE_OML	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	stb/tests/caveview/glext.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	stb/tests/caveview/glext.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	stb/tests/caveview/glext.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESTART_PATH_NV	stb/tests/caveview/glext.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	stb/tests/caveview/glext.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	stb/tests/caveview/glext.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RG	stb/tests/caveview/glext.h	/^#define GL_RG /;"	d
GL_RG16	stb/tests/caveview/glext.h	/^#define GL_RG16 /;"	d
GL_RG16F	stb/tests/caveview/glext.h	/^#define GL_RG16F /;"	d
GL_RG16I	stb/tests/caveview/glext.h	/^#define GL_RG16I /;"	d
GL_RG16UI	stb/tests/caveview/glext.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	stb/tests/caveview/glext.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	stb/tests/caveview/glext.h	/^#define GL_RG32F /;"	d
GL_RG32I	stb/tests/caveview/glext.h	/^#define GL_RG32I /;"	d
GL_RG32UI	stb/tests/caveview/glext.h	/^#define GL_RG32UI /;"	d
GL_RG8	stb/tests/caveview/glext.h	/^#define GL_RG8 /;"	d
GL_RG8I	stb/tests/caveview/glext.h	/^#define GL_RG8I /;"	d
GL_RG8UI	stb/tests/caveview/glext.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	stb/tests/caveview/glext.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB10_A2UI	stb/tests/caveview/glext.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16F	stb/tests/caveview/glext.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	stb/tests/caveview/glext.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16I	stb/tests/caveview/glext.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	stb/tests/caveview/glext.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB2_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	stb/tests/caveview/glext.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	stb/tests/caveview/glext.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32I	stb/tests/caveview/glext.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	stb/tests/caveview/glext.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB565	stb/tests/caveview/glext.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8I	stb/tests/caveview/glext.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	stb/tests/caveview/glext.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	stb/tests/caveview/glext.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA12_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16F	stb/tests/caveview/glext.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	stb/tests/caveview/glext.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16I	stb/tests/caveview/glext.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	stb/tests/caveview/glext.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	stb/tests/caveview/glext.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	stb/tests/caveview/glext.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32I	stb/tests/caveview/glext.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	stb/tests/caveview/glext.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4_DXT5_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8I	stb/tests/caveview/glext.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	stb/tests/caveview/glext.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_FLOAT_MODE_ATI	stb/tests/caveview/glext.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	d
GL_RGBA_INTEGER	stb/tests/caveview/glext.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	stb/tests/caveview/glext.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	stb/tests/caveview/glext.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_FLOAT16_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	stb/tests/caveview/glext.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	stb/tests/caveview/glext.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_INTEGER	stb/tests/caveview/glext.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	stb/tests/caveview/glext.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	stb/tests/caveview/glext.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	stb/tests/caveview/glext.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	stb/tests/caveview/glext.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	stb/tests/caveview/glext.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SNORM	stb/tests/caveview/glext.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_INTEGER	stb/tests/caveview/glext.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	stb/tests/caveview/glext.h	/^#define GL_RG_SNORM /;"	d
GL_ROUND_NV	stb/tests/caveview/glext.h	/^#define GL_ROUND_NV /;"	d
GL_S3_s3tc	stb/tests/caveview/glext.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	stb/tests/caveview/glext.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_3D	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_BINDING	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_CUBE	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_OBJECT_AMD	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COVERAGE	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	stb/tests/caveview/glext.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SATURATE_BIT_ATI	stb/tests/caveview/glext.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	stb/tests/caveview/glext.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	stb/tests/caveview/glext.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	stb/tests/caveview/glext.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	stb/tests/caveview/glext.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	stb/tests/caveview/glext.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	stb/tests/caveview/glext.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	stb/tests/caveview/glext.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCREEN_COORDINATES_REND	stb/tests/caveview/glext.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_NV	stb/tests/caveview/glext.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	stb/tests/caveview/glext.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SEPARABLE_2D	stb/tests/caveview/glext.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	stb/tests/caveview/glext.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	stb/tests/caveview/glext.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	stb/tests/caveview/glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET_AMD	stb/tests/caveview/glext.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_detail_texture	stb/tests/caveview/glext.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	stb/tests/caveview/glext.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	stb/tests/caveview/glext.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	stb/tests/caveview/glext.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	stb/tests/caveview/glext.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	stb/tests/caveview/glext.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_point_parameters	stb/tests/caveview/glext.h	/^#define GL_SGIS_point_parameters /;"	d
GL_SGIS_sharpen_texture	stb/tests/caveview/glext.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_color_mask	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_color_mask /;"	d
GL_SGIS_texture_edge_clamp	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	stb/tests/caveview/glext.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	stb/tests/caveview/glext.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	stb/tests/caveview/glext.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	stb/tests/caveview/glext.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	stb/tests/caveview/glext.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_calligraphic_fragment	stb/tests/caveview/glext.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	stb/tests/caveview/glext.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	stb/tests/caveview/glext.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_pass_instrument	stb/tests/caveview/glext.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	stb/tests/caveview/glext.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	stb/tests/caveview/glext.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	stb/tests/caveview/glext.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fragment_lighting	stb/tests/caveview/glext.h	/^#define GL_SGIX_fragment_lighting /;"	d
GL_SGIX_framezoom	stb/tests/caveview/glext.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_igloo_interface	stb/tests/caveview/glext.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_instruments	stb/tests/caveview/glext.h	/^#define GL_SGIX_instruments /;"	d
GL_SGIX_interlace	stb/tests/caveview/glext.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	stb/tests/caveview/glext.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	stb/tests/caveview/glext.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	stb/tests/caveview/glext.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_tiles	stb/tests/caveview/glext.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	stb/tests/caveview/glext.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_reference_plane	stb/tests/caveview/glext.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	stb/tests/caveview/glext.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	stb/tests/caveview/glext.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	stb/tests/caveview/glext.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	stb/tests/caveview/glext.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	stb/tests/caveview/glext.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subsample	stb/tests/caveview/glext.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	stb/tests/caveview/glext.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	stb/tests/caveview/glext.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	stb/tests/caveview/glext.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	stb/tests/caveview/glext.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	stb/tests/caveview/glext.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_scale_bias	stb/tests/caveview/glext.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_vertex_preclip	stb/tests/caveview/glext.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_ycrcb	stb/tests/caveview/glext.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	stb/tests/caveview/glext.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	stb/tests/caveview/glext.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_matrix	stb/tests/caveview/glext.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	stb/tests/caveview/glext.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	stb/tests/caveview/glext.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SHADER	stb/tests/caveview/glext.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	stb/tests/caveview/glext.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_COMPILER	stb/tests/caveview/glext.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	stb/tests/caveview/glext.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	stb/tests/caveview/glext.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	stb/tests/caveview/glext.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	stb/tests/caveview/glext.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	stb/tests/caveview/glext.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	stb/tests/caveview/glext.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_ARB	stb/tests/caveview/glext.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	stb/tests/caveview/glext.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	stb/tests/caveview/glext.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	stb/tests/caveview/glext.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	stb/tests/caveview/glext.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	stb/tests/caveview/glext.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	stb/tests/caveview/glext.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	stb/tests/caveview/glext.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	stb/tests/caveview/glext.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	stb/tests/caveview/glext.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	stb/tests/caveview/glext.h	/^#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS /;"	d
GL_SIGNALED	stb/tests/caveview/glext.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_ALPHA8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	stb/tests/caveview/glext.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	stb/tests/caveview/glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	stb/tests/caveview/glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	stb/tests/caveview/glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	stb/tests/caveview/glext.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	stb/tests/caveview/glext.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	stb/tests/caveview/glext.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_COMPONENTS1_NV	stb/tests/caveview/glext.h	/^#define GL_SKIP_COMPONENTS1_NV /;"	d
GL_SKIP_COMPONENTS2_NV	stb/tests/caveview/glext.h	/^#define GL_SKIP_COMPONENTS2_NV /;"	d
GL_SKIP_COMPONENTS3_NV	stb/tests/caveview/glext.h	/^#define GL_SKIP_COMPONENTS3_NV /;"	d
GL_SKIP_COMPONENTS4_NV	stb/tests/caveview/glext.h	/^#define GL_SKIP_COMPONENTS4_NV /;"	d
GL_SKIP_DECODE_EXT	stb/tests/caveview/glext.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	stb/tests/caveview/glext.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	stb/tests/caveview/glext.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLUMINANCE	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_EXT	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_EXT	stb/tests/caveview/glext.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SMALL_CCW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	stb/tests/caveview/glext.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SOFTLIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	stb/tests/caveview/glext.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	stb/tests/caveview/glext.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	stb/tests/caveview/glext.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	stb/tests/caveview/glext.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	stb/tests/caveview/glext.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	stb/tests/caveview/glext.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	stb/tests/caveview/glext.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPRITE_AXIAL_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_AXIAL_SGIX /;"	d
GL_SPRITE_AXIS_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_AXIS_SGIX /;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_EYE_ALIGNED_SGIX /;"	d
GL_SPRITE_MODE_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_MODE_SGIX /;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_OBJECT_ALIGNED_SGIX /;"	d
GL_SPRITE_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_SGIX /;"	d
GL_SPRITE_TRANSLATION_SGIX	stb/tests/caveview/glext.h	/^#define GL_SPRITE_TRANSLATION_SGIX /;"	d
GL_SQUARE_NV	stb/tests/caveview/glext.h	/^#define GL_SQUARE_NV /;"	d
GL_SRC0_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	stb/tests/caveview/glext.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	stb/tests/caveview/glext.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	stb/tests/caveview/glext.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	stb/tests/caveview/glext.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ATOP_NV	stb/tests/caveview/glext.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_IN_NV	stb/tests/caveview/glext.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	stb/tests/caveview/glext.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	stb/tests/caveview/glext.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	stb/tests/caveview/glext.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRGB	stb/tests/caveview/glext.h	/^#define GL_SRGB /;"	d
GL_SRGB8	stb/tests/caveview/glext.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	stb/tests/caveview/glext.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	stb/tests/caveview/glext.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	stb/tests/caveview/glext.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB_ALPHA	stb/tests/caveview/glext.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	stb/tests/caveview/glext.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	stb/tests/caveview/glext.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	stb/tests/caveview/glext.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	stb/tests/caveview/glext.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	stb/tests/caveview/glext.h	/^#define GL_SRGB_WRITE /;"	d
GL_STANDARD_FONT_NAME_NV	stb/tests/caveview/glext.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATIC_ATI	stb/tests/caveview/glext.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	stb/tests/caveview/glext.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	stb/tests/caveview/glext.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	stb/tests/caveview/glext.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	stb/tests/caveview/glext.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	stb/tests/caveview/glext.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	stb/tests/caveview/glext.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	stb/tests/caveview/glext.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STENCIL_ATTACHMENT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	stb/tests/caveview/glext.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_COMPONENTS	stb/tests/caveview/glext.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_INDEX1	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX4	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX8	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_OP_VALUE_AMD	stb/tests/caveview/glext.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_RENDERABLE	stb/tests/caveview/glext.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TAG_BITS_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STORAGE_CACHED_APPLE	stb/tests/caveview/glext.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	stb/tests/caveview/glext.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	stb/tests/caveview/glext.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	stb/tests/caveview/glext.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	stb/tests/caveview/glext.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	stb/tests/caveview/glext.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	stb/tests/caveview/glext.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	stb/tests/caveview/glext.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_READ	stb/tests/caveview/glext.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	stb/tests/caveview/glext.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	stb/tests/caveview/glext.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	stb/tests/caveview/glext.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	stb/tests/caveview/glext.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	stb/tests/caveview/glext.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	stb/tests/caveview/glext.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	stb/tests/caveview/glext.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	stb/tests/caveview/glext.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	stb/tests/caveview/glext.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	stb/tests/caveview/glext.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_slice_accum	stb/tests/caveview/glext.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	stb/tests/caveview/glext.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	stb/tests/caveview/glext.h	/^#define GL_SUN_vertex /;"	d
GL_SURFACE_MAPPED_NV	stb/tests/caveview/glext.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	stb/tests/caveview/glext.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	stb/tests/caveview/glext.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	stb/tests/caveview/glext.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	stb/tests/caveview/glext.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	stb/tests/caveview/glext.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	stb/tests/caveview/glext.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	stb/tests/caveview/glext.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	stb/tests/caveview/glext.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	stb/tests/caveview/glext.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	stb/tests/caveview/glext.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	stb/tests/caveview/glext.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_X11_FENCE_EXT	stb/tests/caveview/glext.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	stb/tests/caveview/glext.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T2F_IUI_N3F_V2F_EXT	stb/tests/caveview/glext.h	/^#define GL_T2F_IUI_N3F_V2F_EXT /;"	d
GL_T2F_IUI_N3F_V3F_EXT	stb/tests/caveview/glext.h	/^#define GL_T2F_IUI_N3F_V3F_EXT /;"	d
GL_T2F_IUI_V2F_EXT	stb/tests/caveview/glext.h	/^#define GL_T2F_IUI_V2F_EXT /;"	d
GL_T2F_IUI_V3F_EXT	stb/tests/caveview/glext.h	/^#define GL_T2F_IUI_V3F_EXT /;"	d
GL_TABLE_TOO_LARGE	stb/tests/caveview/glext.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TABLE_TOO_LARGE_EXT	stb/tests/caveview/glext.h	/^#define GL_TABLE_TOO_LARGE_EXT /;"	d
GL_TANGENT_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TESSELLATION_FACTOR_AMD	stb/tests/caveview/glext.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	stb/tests/caveview/glext.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	stb/tests/caveview/glext.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	stb/tests/caveview/glext.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	stb/tests/caveview/glext.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	stb/tests/caveview/glext.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXCOORD1_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE0	stb/tests/caveview/glext.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	stb/tests/caveview/glext.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	stb/tests/caveview/glext.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	stb/tests/caveview/glext.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	stb/tests/caveview/glext.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	stb/tests/caveview/glext.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	stb/tests/caveview/glext.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	stb/tests/caveview/glext.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	stb/tests/caveview/glext.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	stb/tests/caveview/glext.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	stb/tests/caveview/glext.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	stb/tests/caveview/glext.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	stb/tests/caveview/glext.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	stb/tests/caveview/glext.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	stb/tests/caveview/glext.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	stb/tests/caveview/glext.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	stb/tests/caveview/glext.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	stb/tests/caveview/glext.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	stb/tests/caveview/glext.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	stb/tests/caveview/glext.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	stb/tests/caveview/glext.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	stb/tests/caveview/glext.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	stb/tests/caveview/glext.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	stb/tests/caveview/glext.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	stb/tests/caveview/glext.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	stb/tests/caveview/glext.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	stb/tests/caveview/glext.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	stb/tests/caveview/glext.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	stb/tests/caveview/glext.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	stb/tests/caveview/glext.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	stb/tests/caveview/glext.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	stb/tests/caveview/glext.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_4DSIZE_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_4DSIZE_SGIS /;"	d
GL_TEXTURE_4D_BINDING_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_4D_BINDING_SGIS /;"	d
GL_TEXTURE_4D_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_4D_SGIS /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER_VALUES_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_CENTER_SGIX /;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX /;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_FRAME_SGIX /;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX /;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COLOR_WRITEMASK_SGIS /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_MODE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPRESSED	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CUBE_MAP	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEFORMATION_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEFORMATION_SGIX /;"	d
GL_TEXTURE_DEPTH	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV_BIAS_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_ENV_BIAS_SGIX /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FILTER4_SIZE_SGIS /;"	d
GL_TEXTURE_FILTER_CONTROL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HI_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHTING_MODE_HP	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LIGHTING_MODE_HP /;"	d
GL_TEXTURE_LIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LOD_BIAS_R_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LOD_BIAS_S_SGIX /;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LOD_BIAS_T_SGIX /;"	d
GL_TEXTURE_LO_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_LOD	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_POST_SPECULAR_HP	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_POST_SPECULAR_HP /;"	d
GL_TEXTURE_PRE_SPECULAR_HP	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_PRE_SPECULAR_HP /;"	d
GL_TEXTURE_PRIORITY_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_RED_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADER_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STENCIL_SIZE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TOO_LARGE_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_TOO_LARGE_EXT /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_VIEW	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WRAP_Q_SGIS	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_WRAP_Q_SGIS /;"	d
GL_TEXTURE_WRAP_R	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	stb/tests/caveview/glext.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	stb/tests/caveview/glext.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TIMEOUT_EXPIRED	stb/tests/caveview/glext.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	stb/tests/caveview/glext.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	stb/tests/caveview/glext.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	stb/tests/caveview/glext.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_EXT	stb/tests/caveview/glext.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	stb/tests/caveview/glext.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACK_MATRIX_NV	stb/tests/caveview/glext.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	stb/tests/caveview/glext.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_FEEDBACK	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	stb/tests/caveview/glext.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	stb/tests/caveview/glext.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES_ADJACENCY	stb/tests/caveview/glext.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	stb/tests/caveview/glext.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	stb/tests/caveview/glext.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLE_LIST_SUN	stb/tests/caveview/glext.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	stb/tests/caveview/glext.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	stb/tests/caveview/glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	stb/tests/caveview/glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	stb/tests/caveview/glext.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGULAR_NV	stb/tests/caveview/glext.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TYPE	stb/tests/caveview/glext.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	stb/tests/caveview/glext.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	stb/tests/caveview/glext.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	stb/tests/caveview/glext.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	stb/tests/caveview/glext.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	stb/tests/caveview/glext.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	stb/tests/caveview/glext.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	stb/tests/caveview/glext.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	stb/tests/caveview/glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	stb/tests/caveview/glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	stb/tests/caveview/glext.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	stb/tests/caveview/glext.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	stb/tests/caveview/glext.h	/^#define GL_UNPACK_IMAGE_DEPTH_SGIS /;"	d
GL_UNPACK_IMAGE_HEIGHT	stb/tests/caveview/glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	stb/tests/caveview/glext.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_RESAMPLE_OML	stb/tests/caveview/glext.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	stb/tests/caveview/glext.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	stb/tests/caveview/glext.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_SKIP_IMAGES	stb/tests/caveview/glext.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	stb/tests/caveview/glext.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	stb/tests/caveview/glext.h	/^#define GL_UNPACK_SKIP_VOLUMES_SGIS /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	stb/tests/caveview/glext.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNSIGNALED	stb/tests/caveview/glext.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT16_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_24_8	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	stb/tests/caveview/glext.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	stb/tests/caveview/glext.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	stb/tests/caveview/glext.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	stb/tests/caveview/glext.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	stb/tests/caveview/glext.h	/^#define GL_UTF8_NV /;"	d
GL_VALIDATE_STATUS	stb/tests/caveview/glext.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	stb/tests/caveview/glext.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	stb/tests/caveview/glext.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	stb/tests/caveview/glext.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	stb/tests/caveview/glext.h	/^#define GL_VECTOR_EXT /;"	d
GL_VERSION_1_2	stb/tests/caveview/glext.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	stb/tests/caveview/glext.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	stb/tests/caveview/glext.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	stb/tests/caveview/glext.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	stb/tests/caveview/glext.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	stb/tests/caveview/glext.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	stb/tests/caveview/glext.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	stb/tests/caveview/glext.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	stb/tests/caveview/glext.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	stb/tests/caveview/glext.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	stb/tests/caveview/glext.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	stb/tests/caveview/glext.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	stb/tests/caveview/glext.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	stb/tests/caveview/glext.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	stb/tests/caveview/glext.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERTEX23_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	stb/tests/caveview/glext.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_DIVISOR	stb/tests/caveview/glext.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	stb/tests/caveview/glext.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	stb/tests/caveview/glext.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	stb/tests/caveview/glext.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	stb/tests/caveview/glext.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	stb/tests/caveview/glext.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	stb/tests/caveview/glext.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	stb/tests/caveview/glext.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VIBRANCE_BIAS_NV	stb/tests/caveview/glext.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	stb/tests/caveview/glext.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	stb/tests/caveview/glext.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIEWPORT_BOUNDS_RANGE	stb/tests/caveview/glext.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	stb/tests/caveview/glext.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	stb/tests/caveview/glext.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	stb/tests/caveview/glext.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	stb/tests/caveview/glext.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	stb/tests/caveview/glext.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VOLATILE_APPLE	stb/tests/caveview/glext.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	stb/tests/caveview/glext.h	/^#define GL_WAIT_FAILED /;"	d
GL_WEIGHT_ARRAY_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	stb/tests/caveview/glext.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	stb/tests/caveview/glext.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WIN_phong_shading	stb/tests/caveview/glext.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	stb/tests/caveview/glext.h	/^#define GL_WIN_specular_fog /;"	d
GL_WRAP_BORDER_SUN	stb/tests/caveview/glext.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITE_DISCARD_NV	stb/tests/caveview/glext.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	stb/tests/caveview/glext.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	stb/tests/caveview/glext.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	stb/tests/caveview/glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	stb/tests/caveview/glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	stb/tests/caveview/glext.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	stb/tests/caveview/glext.h	/^#define GL_W_EXT /;"	d
GL_XOR_NV	stb/tests/caveview/glext.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	stb/tests/caveview/glext.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	stb/tests/caveview/glext.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	stb/tests/caveview/glext.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	stb/tests/caveview/glext.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	stb/tests/caveview/glext.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_YCRCBA_SGIX	stb/tests/caveview/glext.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_422_SGIX	stb/tests/caveview/glext.h	/^#define GL_YCRCB_422_SGIX /;"	d
GL_YCRCB_444_SGIX	stb/tests/caveview/glext.h	/^#define GL_YCRCB_444_SGIX /;"	d
GL_YCRCB_SGIX	stb/tests/caveview/glext.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	stb/tests/caveview/glext.h	/^#define GL_Y_EXT /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	stb/tests/caveview/glext.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	stb/tests/caveview/glext.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	stb/tests/caveview/glext.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	stb/tests/caveview/glext.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	stb/tests/caveview/glext.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO_EXT	stb/tests/caveview/glext.h	/^#define GL_ZERO_EXT /;"	d
GL_Z_EXT	stb/tests/caveview/glext.h	/^#define GL_Z_EXT /;"	d
GLchar	stb/tests/caveview/glext.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	stb/tests/caveview/glext.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLfixed	stb/tests/caveview/glext.h	/^typedef GLint GLfixed;$/;"	t	typeref:typename:GLint
GLhalf	stb/tests/caveview/glext.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	stb/tests/caveview/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	stb/tests/caveview/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	stb/tests/caveview/glext.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	stb/tests/caveview/glext.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint64	stb/tests/caveview/glext.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64EXT	stb/tests/caveview/glext.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	stb/tests/caveview/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	stb/tests/caveview/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	stb/tests/caveview/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	stb/tests/caveview/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	stb/tests/caveview/glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLuint64	stb/tests/caveview/glext.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	stb/tests/caveview/glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLvdpauSurfaceNV	stb/tests/caveview/glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GetArray	stb/deprecated/stb.h	/^#define GetArray(/;"	d
GetBucket	stb/deprecated/stb.h	/^#define GetBucket(/;"	d
GetHash	stb/deprecated/stb.h	/^#define GetHash(/;"	d
GetLocation	atlas.cpp	/^const SpriteLocation& Atlas::GetLocation(int id) const {$/;"	f	class:Atlas	typeref:typename:const SpriteLocation &
GetSurface	atlas.cpp	/^SDL_Surface* Atlas::GetSurface() {$/;"	f	class:Atlas	typeref:typename:SDL_Surface *
GlContext	glwrappers.cpp	/^GlContext::GlContext(SDL_Window* window) {$/;"	f	class:GlContext
GlContext	glwrappers.h	/^struct GlContext: nocopy {$/;"	s
HDR_BUFLEN	stb/deprecated/stb_image.c	/^#define HDR_BUFLEN /;"	d	file:
HHEAP_COUNT	stb/tests/stb.c	/^      #define HHEAP_COUNT /;"	d	file:
HHEAP_COUNT2	stb/tests/stb.c	/^      #define HHEAP_COUNT2 /;"	d	file:
HIGH_CHAR	font.cpp	/^const int HIGH_CHAR = 126+1; \/\/ tilde$/;"	v	typeref:typename:const int
HKEY	stb/deprecated/stb.h	/^#define HKEY /;"	d
HW	stb/deprecated/rrsprintf.h	/^    #define HW /;"	d
HandleResize	window.cpp	/^void Window::HandleResize() {$/;"	f	class:Window	typeref:typename:void
Height	font.cpp	/^int Font::Height() const {$/;"	f	class:Font	typeref:typename:int
HexWave	stb/stb_hexwave.h	/^struct HexWave$/;"	s
HexWave	stb/stb_hexwave.h	/^typedef struct HexWave HexWave;$/;"	t	typeref:struct:HexWave
HexWaveParameters	stb/stb_hexwave.h	/^} HexWaveParameters;$/;"	t	typeref:struct:__anon773b6f930108
How accurate is this as a Minecraft viewer?	stb/tests/caveview/README.md	/^### How accurate is this as a Minecraft viewer?$/;"	S	chapter:FAQ
How do I use these libraries?	stb/README.md	/^#### How do I use these libraries?$/;"	t	section:stb""FAQ
How do I use these libraries?	stb/tools/README.footer.md	/^#### How do I use these libraries?$/;"	t	section:FAQ
How to run it?	stb/tests/caveview/README.md	/^### How to run it?$/;"	S	chapter:FAQ
IDCT_1D	stb/deprecated/stb_image.c	/^#define IDCT_1D(/;"	d	file:
INCLUDES	stb/tests/Makefile	/^INCLUDES = -I..$/;"	m
INCLUDE_CAVEVIEW_H	stb/tests/caveview/caveview.h	/^#define INCLUDE_CAVEVIEW_H$/;"	d
INCLUDE_CAVE_PARSE_H	stb/tests/caveview/cave_parse.h	/^#define INCLUDE_CAVE_PARSE_H$/;"	d
INCLUDE_STB_CONNECTED_COMPONENTS_H	stb/stb_connected_components.h	/^#define INCLUDE_STB_CONNECTED_COMPONENTS_H$/;"	d
INCLUDE_STB_C_LEXER_H	stb/stb_c_lexer.h	/^#define INCLUDE_STB_C_LEXER_H$/;"	d
INCLUDE_STB_DIVIDE_H	stb/stb_divide.h	/^#define INCLUDE_STB_DIVIDE_H$/;"	d
INCLUDE_STB_DS_H	stb/stb_ds.h	/^#define INCLUDE_STB_DS_H$/;"	d
INCLUDE_STB_EASY_FONT_H	stb/stb_easy_font.h	/^#define INCLUDE_STB_EASY_FONT_H$/;"	d
INCLUDE_STB_GLPROG_H	stb/tests/caveview/stb_glprog.h	/^#define INCLUDE_STB_GLPROG_H$/;"	d
INCLUDE_STB_GL_H	stb/tests/caveview/stb_gl.h	/^#define INCLUDE_STB_GL_H$/;"	d
INCLUDE_STB_HWANG_H	stb/stb_herringbone_wang_tile.h	/^#define INCLUDE_STB_HWANG_H$/;"	d
INCLUDE_STB_IMAGE_WRITE_H	stb/stb_image_write.h	/^#define INCLUDE_STB_IMAGE_WRITE_H$/;"	d
INCLUDE_STB_LEAKCHECK_H	stb/stb_leakcheck.h	/^#define INCLUDE_STB_LEAKCHECK_H$/;"	d
INCLUDE_STB_TEXTEDIT_H	stb/stb_textedit.h	/^#define INCLUDE_STB_TEXTEDIT_H$/;"	d
INCLUDE_STB_VOXEL_RENDER_H	stb/stb_voxel_render.h	/^#define INCLUDE_STB_VOXEL_RENDER_H$/;"	d
INCLUDE_STB_WINGRAPH_H	stb/tests/oversample/stb_wingraph.h	/^#define INCLUDE_STB_WINGRAPH_H$/;"	d
INTROSPECT	stb/deprecated/stb.h	/^#define INTROSPECT(/;"	d
INVALID_BITS	stb/stb_vorbis.c	/^#define INVALID_BITS /;"	d	file:
IN_ARGS	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	e	enum:__anon97bba3320303	file:
IN_COMPILERS	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	e	enum:__anon97bba3320303	file:
IN_LINK	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	e	enum:__anon97bba3320303	file:
IN_PLACE	stb/tests/caveview/cave_mesher.c	/^#define IN_PLACE$/;"	d	file:
IN_PROJECTS	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	e	enum:__anon97bba3320303	file:
IRenderLayer	render-layer.h	/^struct IRenderLayer: nocopy {$/;"	s
IS_PUSH_MODE	stb/stb_vorbis.c	/^   #define IS_PUSH_MODE(/;"	d	file:
If I wrap an stb library in a new library, does the new library have to be public domain/MIT?	stb/README.md	/^#### If I wrap an stb library in a new library, does the new library have to be public domain\/M/;"	t	section:stb""FAQ
If I wrap an stb library in a new library, does the new library have to be public domain/MIT?	stb/tools/README.footer.md	/^#### If I wrap an stb library in a new library, does the new library have to be public domain\/M/;"	t	section:FAQ
KD	stb/deprecated/stb.h	/^#define KD(/;"	d
KEYDOWN_BIT	stb/tests/test_cpp_compilation.cpp	/^#define KEYDOWN_BIT /;"	d	file:
KEYDOWN_BIT	stb/tests/textedit_sample.c	/^#define KEYDOWN_BIT /;"	d	file:
KF	stb/deprecated/stb.h	/^#define KF(/;"	d
KI	stb/deprecated/rrsprintf.h	/^    #define KI /;"	d
KI	stb/deprecated/stb.h	/^#define KI(/;"	d
KS	stb/deprecated/stb.h	/^#define KS(/;"	d
KU	stb/deprecated/stb.h	/^#define KU(/;"	d
L	stb/stb_vorbis.c	/^#define L /;"	d	file:
LEN_LIMIT	stb/tools/easy_font_maker.c	/^#define LEN_LIMIT /;"	d	file:
LIBVORBIS_MDCT	stb/stb_vorbis.c	/^#define LIBVORBIS_MDCT /;"	d	file:
LINE_OP	stb/stb_vorbis.c	/^#define LINE_OP(/;"	d	file:
LJ	stb/deprecated/rrsprintf.h	/^    #define LJ /;"	d
LLVMFuzzerTestOneInput	stb/tests/stb_c_lexer_fuzzer.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	stb/tests/stbi_read_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LOCALFLAGS	Makefile	/^LOCALFLAGS = -g -O2 $(COMMONFLAGS) $(shell pkg-config --cflags sdl2)$/;"	m
LOCALLIBS	Makefile	/^LOCALLIBS = $(shell sdl2-config --libs) -lSDL2_image$/;"	m
LOCALWARN	Makefile	/^LOCALWARN = -Wall -Wextra -pedantic -Wpointer-arith -Wshadow -Wfloat-conversion -Wfloat-equal -W/;"	m
LOG	common.h	/^#define LOG(/;"	d
LOG_ERROR	common.h	/^#define LOG_ERROR(/;"	d
LOW_CHAR	font.cpp	/^const int LOW_CHAR = 32; \/\/ space$/;"	v	typeref:typename:const int
LP	stb/deprecated/rrsprintf.h	/^    #define LP /;"	d
LS	stb/deprecated/rrsprintf.h	/^    #define LS /;"	d
LX	stb/deprecated/rrsprintf.h	/^    #define LX /;"	d
LZ	stb/deprecated/rrsprintf.h	/^    #define LZ /;"	d
LoadImage	atlas.cpp	/^int Atlas::LoadImage(const char* filename) {$/;"	f	class:Atlas	typeref:typename:int
M1	stb/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v	typeref:typename:mdct_lookup
M2	stb/stb_vorbis.c	/^mdct_lookup M1,M2;$/;"	v	typeref:typename:mdct_lookup
MAGIC	stb/stb_vorbis.c	/^   #define MAGIC(/;"	d	file:
MARKER_none	stb/deprecated/stb_image.c	/^#define MARKER_none /;"	d	file:
MAX	stb/tests/test_ds.c	/^#define MAX(/;"	d	file:
MAX	stb/tests/test_ds_cpp.cpp	/^#define MAX(/;"	d	file:
MAX_BLOCKSIZE	stb/stb_vorbis.c	/^#define MAX_BLOCKSIZE /;"	d	file:
MAX_BLOCKSIZE_LOG	stb/stb_vorbis.c	/^#define MAX_BLOCKSIZE_LOG /;"	d	file:
MAX_CHUNK_LOAD_WORKERS	stb/tests/caveview/cave_render.c	/^#define MAX_CHUNK_LOAD_WORKERS /;"	d	file:
MAX_DECODED_CHUNK_X	stb/tests/caveview/cave_parse.c	/^#define MAX_DECODED_CHUNK_X /;"	d	file:
MAX_DECODED_CHUNK_Z	stb/tests/caveview/cave_parse.c	/^#define MAX_DECODED_CHUNK_Z /;"	d	file:
MAX_LAYERMASK	stb/stb_tilemap_editor.h	/^#define MAX_LAYERMASK /;"	d
MAX_MAP_REGIONS	stb/tests/caveview/cave_parse.c	/^#define MAX_MAP_REGIONS /;"	d	file:
MAX_MESH_WORKERS	stb/tests/caveview/cave_render.c	/^#define MAX_MESH_WORKERS /;"	d	file:
MAX_QUEUE	stb/tests/caveview/cave_render.c	/^      #define MAX_QUEUE /;"	d	file:
MAX_VEL	stb/tests/caveview/cave_main.c	/^#define MAX_VEL /;"	d	file:
MODECOUNT	stb/tools/unicode.c	/^#define MODECOUNT /;"	d	file:
MODULES	Makefile	/^MODULES = main glwrappers window atlas font render-sprites render-shapes render-surface tetris s/;"	m
MT_SIZE	stb/tests/resample_test.cpp	/^#define MT_SIZE /;"	d	file:
M_PI	stb/deprecated/stb.h	/^     #define M_PI /;"	d
M_PI	stb/stb_vorbis.c	/^  #define M_PI /;"	d	file:
M_PI	stb/tests/caveview/stb_gl.h	/^#define M_PI /;"	d
Mapping	stb/stb_vorbis.c	/^} Mapping;$/;"	t	typeref:struct:__anon008e12ab0a08	file:
MappingChannel	stb/stb_vorbis.c	/^} MappingChannel;$/;"	t	typeref:struct:__anon008e12ab0908	file:
Mode	stb/stb_vorbis.c	/^} Mode;$/;"	t	typeref:struct:__anon008e12ab0b08	file:
N	stb/stb_c_lexer.h	/^#define N(/;"	d
NG	stb/deprecated/rrsprintf.h	/^    #define NG /;"	d
NONE	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	e	enum:__anon97bba3320303	file:
NOWARNDIRS	Makefile	/^NOWARNDIRS = stb\/$/;"	m
NO_CODE	stb/stb_vorbis.c	/^#define NO_CODE /;"	d	file:
NULL	stb/stb_vorbis.c	/^   #define NULL /;"	d	file:
NUMSZ	stb/deprecated/rrsprintf.h	/^      #define NUMSZ /;"	d
NUM_CACHED_X	stb/tests/caveview/cave_parse.c	/^#define NUM_CACHED_X /;"	d	file:
NUM_CACHED_Z	stb/tests/caveview/cave_parse.c	/^#define NUM_CACHED_Z /;"	d	file:
NUM_CHUNKS_PER_REGION	stb/tests/caveview/cave_parse.c	/^#define NUM_CHUNKS_PER_REGION /;"	d	file:
NUM_CHUNKS_PER_REGION_LOG2	stb/tests/caveview/cave_parse.c	/^#define NUM_CHUNKS_PER_REGION_LOG2 /;"	d	file:
NUM_COLUMNS_PER_CHUNK	stb/tests/caveview/cave_parse.c	/^#define NUM_COLUMNS_PER_CHUNK /;"	d	file:
NUM_COLUMNS_PER_CHUNK_LOG2	stb/tests/caveview/cave_parse.c	/^#define NUM_COLUMNS_PER_CHUNK_LOG2 /;"	d	file:
NUM_SEGMENTS	stb/tests/caveview/cave_parse.h	/^#define NUM_SEGMENTS /;"	d
OVERWRITE_ARRAY_SIZE	stb/stb_image_resize.h	/^#define OVERWRITE_ARRAY_SIZE /;"	d
OutOfMemory	stb/tests/caveview/win32/SDL_windows_main.c	/^OutOfMemory(void)$/;"	f	typeref:typename:BOOL	file:
PADDING	atlas.cpp	/^const int PADDING = 1;$/;"	v	typeref:typename:const int
PAGEFLAG_continued_packet	stb/stb_vorbis.c	/^#define PAGEFLAG_continued_packet /;"	d	file:
PAGEFLAG_first_page	stb/stb_vorbis.c	/^#define PAGEFLAG_first_page /;"	d	file:
PAGEFLAG_last_page	stb/stb_vorbis.c	/^#define PAGEFLAG_last_page /;"	d	file:
PFNGLACCUMXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLfixed value)
PFNGLACTIVEPROGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLALPHAFRAGMENTOP1ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLfixed ref)
PFNGLAPPLYTEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * programs,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (APIENTRYP)(GLint i)
PFNGLARRAYOBJECTATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, c/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum value)
PFNGLBINDPROGRAMARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum va/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum unit,GLenum value)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMAL3BEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte bx,GLbyte by,GLbyte bz)
PFNGLBINORMAL3BVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLBINORMAL3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble bx,GLdouble by,GLdouble bz)
PFNGLBINORMAL3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLBINORMAL3FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat bx,GLfloat by,GLfloat bz)
PFNGLBINORMAL3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLBINORMAL3IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint bx,GLint by,GLint bz)
PFNGLBINORMAL3IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLBINORMAL3SEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort bx,GLshort by,GLshort bz)
PFNGLBINORMAL3SVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLBINORMALPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLBITMAPXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte * bitmap)
PFNGLBLENDBARRIERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLOREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLBLENDEQUATIONEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINGRPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPARAMETERIAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERSTORAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeipt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARACCUMXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARBUFFERDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alp/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCLEARDEPTHDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXIMAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPPLANEFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLCOLOR3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue)
PFNGLCOLOR3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, G/;"	t	typeref:typename:void (APIENTRYP)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)
PFNGLCOLOR4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLOR4XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * components)
PFNGLCOLORFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, co/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **poin/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLEPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei widt/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutpu/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCONVOLUTIONFILTER1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLCONVOLUTIONPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLCOPYBUFFERSUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint sr/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEPERFQUERYINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADEROBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum shaderType)
PFNGLCREATESHADERPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	stb/tests/caveview/glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCULLPARAMETERDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMATIONMAP3DSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble * points)
PFNGLDEFORMATIONMAP3FSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat * points)
PFNGLDEFORMSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLDELETEASYNCMARKERSSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *n/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLDELETEQUERIESARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESYNCPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed n,GLfixed f)
PFNGLDETACHOBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attache/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWBUFFERSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWMESHARRAYSSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei width)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint en/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLEDGEFLAGFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboo/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointe/;"	t	typeref:typename:void (APIENTRYP)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLELEMENTPOINTERAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDFRAGMENTSHADERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVERTEXSHADEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDVIDEOCAPTURENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot)
PFNGLEVALCOORD1XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u)
PFNGLEVALCOORD1XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALCOORD2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed u,GLfixed v)
PFNGLEVALCOORD2XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLEVALMAPSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTRACTCOMPONENTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLFEEDBACKBUFFERXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buf/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLenum type,const GLfixed * buffer)
PFNGLFENCESYNCPROC	stb/tests/caveview/glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum ma/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHFENCENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHSTATICDATAIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV fog)
PFNGLFOGCOORDHVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * fog)
PFNGLFOGCOORDPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *poin/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * points)
PFNGLFOGXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLFOGXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLint * params)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALFSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat para/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat param)
PFNGLFRAGMENTMATERIALFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param)/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint param)
PFNGLFRAGMENTMATERIALIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEZOOMSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLGENASYNCMARKERSSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENBUFFERSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENFENCESAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * programs)
PFNGLGENQUERIESARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSYMBOLSEXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum r/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum plane,GLfixed * equation)
PFNGLGETCOLORTABLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, /;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *im/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCONVOLUTIONFILTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETDEBUGMESSAGELOGAMDPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETFENCEIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFIXEDVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETHANDLEARBPROC	stb/tests/caveview/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (APIENTRYP)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfix/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETHISTOGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETINFOLOGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINSTRUMENTSSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:GLint (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLISTPARAMETERFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat * params)
PFNGLGETLISTPARAMETERIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMAPXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLfixed * v)
PFNGLGETMATERIALXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLGETMINMAXEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *value/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *val/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	stb/tests/caveview/glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *va/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELMAPXVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,GLfixed * values)
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPROGRAMBINARYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMINFOLOGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * params)
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint * param)
PFNGLGETQUERYINDEXEDIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat * points)
PFNGLGETSTRINGIPROC	stb/tests/caveview/glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *w/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXLEVELPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	stb/tests/caveview/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTRACKMATRIXIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharAR/;"	t	typeref:typename:GLint (APIENTRYP)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (APIENTRYP)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *dat/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *par/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint s/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGLOBALALPHAFACTORBSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort factor)
PFNGLHINTPGIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint mode)
PFNGLHISTOGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const void * params)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTSYNCEXTPROC	stb/tests/caveview/glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLclampf ref)
PFNGLINDEXMATERIALEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINDEXXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed component)
PFNGLINDEXXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * component)
PFNGLINSERTCOMPONENTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINSTRUMENTSBUFFERSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei size,GLint * buffer)
PFNGLINTERPOLATEPATHSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint marker)
PFNGLISBUFFERARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISENABLEDINDEXEDEXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISFENCEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFENCENVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISNAMEAMDPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPATHNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISPROGRAMPIPELINEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSYNCPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLIGHTENVISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLLIGHTMODELXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * param)
PFNGLLIGHTXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTPARAMETERFSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLfloat param)
PFNGLLISTPARAMETERFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLfloat * params)
PFNGLLISTPARAMETERISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,GLint param)
PFNGLLISTPARAMETERIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLenum pname,const GLint * params)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLLOADMATRIXXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLLOADTRANSPOSEMATRIXFARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLLOADTRANSPOSEMATRIXXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLLOCKARRAYSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint first,GLsizei count)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAP1XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)
PFNGLMAP2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)
PFNGLMAPBUFFERARBPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPGRID1XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2)
PFNGLMAPGRID2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)
PFNGLMAPNAMEDBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	stb/tests/caveview/glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield ac/;"	t	typeref:typename:void * (APIENTRYP)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum pname,const GLfixed * param)
PFNGLMATRIXFRUSTUMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXINDEXPOINTERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * indices)
PFNGLMATRIXLOADDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMEMORYBARRIEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINMAXEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirec/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *c/;"	t	typeref:typename:void (APIENTRYP)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s)
PFNGLMULTITEXCOORD1BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD1DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s)
PFNGLMULTITEXCOORD1HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD1IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s)
PFNGLMULTITEXCOORD1XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD2BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t)
PFNGLMULTITEXCOORD2BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD2DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t)
PFNGLMULTITEXCOORD2HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD2IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t)
PFNGLMULTITEXCOORD2XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD3BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r)
PFNGLMULTITEXCOORD3BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD3DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLMULTITEXCOORD3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD3IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r)
PFNGLMULTITEXCOORD3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORD4BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLMULTITEXCOORD4BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLbyte * coords)
PFNGLMULTITEXCOORD4DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLha/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLMULTITEXCOORD4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLhalfNV * v)
PFNGLMULTITEXCOORD4IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfi/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORD4XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,const GLfixed * coords)
PFNGLMULTITEXCOORDP1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * m)
PFNGLMULTTRANSPOSEMATRIXFARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * m)
PFNGLMULTTRANSPOSEMATRIXXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * m)
PFNGLNAMEDBUFFERDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenu/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)
PFNGLNORMAL3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLNORMAL3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMAL3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLNORMALFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)
PFNGLNORMALSTREAM3BVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)
PFNGLNORMALSTREAM3DVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)
PFNGLNORMALSTREAM3FVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint nx,GLint ny,GLint nz)
PFNGLNORMALSTREAM3IVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLsh/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort nx,GLshort ny,GLshort nz)
PFNGLNORMALSTREAM3SVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLen/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed/;"	t	typeref:typename:void (APIENTRYP)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)
PFNGLPASSTEXCOORDATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPASSTHROUGHXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed token)
PFNGLPATCHPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorForm/;"	t	typeref:typename:void (APIENTRYP)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum genMode)
PFNGLPATHGLYPHRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint compon/;"	t	typeref:typename:void (APIENTRYP)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELDATARANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLPIXELMAPXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum map,GLint size,const GLfixed * values)
PFNGLPIXELSTOREXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTEXGENPARAMETERFSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPIXELTEXGENPARAMETERISGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPIXELTEXGENSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPIXELTRANSFERXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfixed param)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELZOOMXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed xfactor,GLfixed yfactor)
PFNGLPNTRIANGLESFATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint * markerp)
PFNGLPOLLINSTRUMENTSSGIXPROC	stb/tests/caveview/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLint * marker_p)
PFNGLPOLYGONOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresent/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVERESTARTINDEXNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, cons/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZETEXTURESXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, con/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures,const GLfixed * priorities)
PFNGLPROGRAMBINARYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingInde/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingInd/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble * v)
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLub/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat * v)
PFNGLPROGRAMPARAMETER4DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x,/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLdouble * v)
PFNGLPROGRAMPARAMETER4FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfl/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,const GLfloat * v)
PFNGLPROGRAMPARAMETERIARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLdouble * v)
PFNGLPROGRAMPARAMETERS4FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLsizei count,const GLfloat * v)
PFNGLPROGRAMSTRINGARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei count,const GLuint * params)
PFNGLPROGRAMUNIFORM1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYMATRIXXOESPROC	stb/tests/caveview/glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t	typeref:typename:GLbitfield (APIENTRYP)(GLfixed * mantissa,GLint * exponent)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLRASTERPOS2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLRASTERPOS2XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLRASTERPOS3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLRASTERPOS4XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z,GLfixed w)
PFNGLRASTERPOS4XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLREADINSTRUMENTSSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLREADNPIXELSARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLRECTXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)
PFNGLRECTXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * v1,const GLfixed * v2)
PFNGLREFERENCEPLANESGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * equation)
PFNGLRELEASESHADERCOMPILERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const /;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void ** pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint /;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, /;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, con/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (APIENTRYP)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * programs)
PFNGLRESETHISTOGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETHISTOGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESETMINMAXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLROTATEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCALEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue)/;"	t	typeref:typename:void (APIENTRYP)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blu/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV red,GLhalfNV green,GLhalfNV blue)
PFNGLSECONDARYCOLOR3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLSECONDARYCOLOR3IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue/;"	t	typeref:typename:void (APIENTRYP)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint s/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSEPARABLEFILTER2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence)
PFNGLSETFENCENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value/;"	t	typeref:typename:void (APIENTRYP)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr)/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,const void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2)/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2,/;"	t	typeref:typename:void (APIENTRYP)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLSTARTINSTRUMENTSSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSTENCILCLEARTAGEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClea/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stencilTagBits,GLuint stencilClearTag)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTOPINSTRUMENTSSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLint marker)
PFNGLSTRINGMARKERGREMEDYPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei len,const void * string)
PFNGLSWIZZLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTANGENT3BEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte tx,GLbyte ty,GLbyte tz)
PFNGLTANGENT3BVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * v)
PFNGLTANGENT3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble tx,GLdouble ty,GLdouble tz)
PFNGLTANGENT3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLTANGENT3FEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat tx,GLfloat ty,GLfloat tz)
PFNGLTANGENT3FVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLTANGENT3IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLint tx,GLint ty,GLint tz)
PFNGLTANGENT3IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLTANGENT3SEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort tx,GLshort ty,GLshort tz)
PFNGLTANGENT3SVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLTANGENTPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *po/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride,const void * pointer)
PFNGLTBUFFERMASK3DFXPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTFENCENVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * param)
PFNGLTEXCOORD1BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s)
PFNGLTEXCOORD1BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD1HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s)
PFNGLTEXCOORD1HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD1XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s)
PFNGLTEXCOORD1XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD2BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t)
PFNGLTEXCOORD2BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r,/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLuby/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat n/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLflo/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t)
PFNGLTEXCOORD2HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t)
PFNGLTEXCOORD2XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD3BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r)
PFNGLTEXCOORD3BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r)
PFNGLTEXCOORD3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r)
PFNGLTEXCOORD3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORD4BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte s,GLbyte t,GLbyte r,GLbyte q)
PFNGLTEXCOORD4BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, cons/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)
PFNGLTEXCOORD4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLTEXCOORD4XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLTEXCOORD4XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLTEXCOORDFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **p/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei covera/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLTEXSTORAGE1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGESPARSEAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURECOLORMASKSGISPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolea/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLTEXTUREIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean resident)
PFNGLTEXTUREPARAMETERFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTURERANGEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei length,const void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGESPARSEAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs/;"	t	typeref:typename:void (APIENTRYP)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLint * attribs,GLsizei nbuffers,const GLint * bufstreams,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *v/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLUNMAPBUFFERARBPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei s/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (APIENTRYP)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride,/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLbyte * addr)
PFNGLVARIANTDVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLdouble * addr)
PFNGLVARIANTFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLfloat * addr)
PFNGLVARIANTIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum type,GLuint stride,const void * addr)
PFNGLVARIANTSVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLshort * addr)
PFNGLVARIANTUBVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLuint * addr)
PFNGLVARIANTUSVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,const GLushort * addr)
PFNGLVDPAUFININVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress/;"	t	typeref:typename:void (APIENTRYP)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	stb/tests/caveview/glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceN/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	stb/tests/caveview/glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurfa/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	stb/tests/caveview/glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurfac/;"	t	typeref:typename:GLvdpauSurfaceNV (APIENTRYP)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access)/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurface/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (APIENTRYP)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x)
PFNGLVERTEX2BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX2HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y)
PFNGLVERTEX2HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX2XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x)
PFNGLVERTEX2XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX3BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y)
PFNGLVERTEX3BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEX3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX3XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y)
PFNGLVERTEX3XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEX4BOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t	typeref:typename:void (APIENTRYP)(GLbyte x,GLbyte y,GLbyte z)
PFNGLVERTEX4BVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLbyte * coords)
PFNGLVERTEX4HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEX4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * v)
PFNGLVERTEX4XOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfixed x,GLfixed y,GLfixed z)
PFNGLVERTEX4XVOESPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfixed * coords)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x)
PFNGLVERTEXATTRIB1HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB1SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y)
PFNGLVERTEXATTRIB2HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB2SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)
PFNGLVERTEXATTRIB3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB3SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalf/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)
PFNGLVERTEXATTRIB4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLhalfNV * v)
PFNGLVERTEXATTRIB4IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS1SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS2SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS3SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei n,const GLhalfNV * v)
PFNGLVERTEXATTRIBS4SVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLsizei count,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, c/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **poi/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshor/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t	typeref:typename:void (APIENTRYP)(GLhalfNV weight)
PFNGLVERTEXWEIGHTHVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t	typeref:typename:void (APIENTRYP)(const GLhalfNV * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVIDEOCAPTURENVPROC	stb/tests/caveview/glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLWAITSYNCPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWEIGHTBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLbyte * weights)
PFNGLWEIGHTDVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLdouble * weights)
PFNGLWEIGHTFVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLfloat * weights)
PFNGLWEIGHTIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLint * weights)
PFNGLWEIGHTPATHSNVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWEIGHTPOINTERARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLWEIGHTSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLshort * weights)
PFNGLWEIGHTUBVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLuint * weights)
PFNGLWEIGHTUSVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,const GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS2FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS2IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS2SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS2SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3DARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3DVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS3FARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3FVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS3IARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3IVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS3SARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS3SVPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWINDOWPOS4DMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLWINDOWPOS4DVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLdouble * v)
PFNGLWINDOWPOS4FMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLfloat * v)
PFNGLWINDOWPOS4IMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLint * v)
PFNGLWINDOWPOS4SMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t	typeref:typename:void (APIENTRYP)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(const GLshort * v)
PFNGLWRITEMASKEXTPROC	stb/tests/caveview/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY,/;"	t	typeref:typename:void (APIENTRYP)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PLAYBACK_LEFT	stb/stb_vorbis.c	/^#define PLAYBACK_LEFT /;"	d	file:
PLAYBACK_MONO	stb/stb_vorbis.c	/^#define PLAYBACK_MONO /;"	d	file:
PLAYBACK_RIGHT	stb/stb_vorbis.c	/^#define PLAYBACK_RIGHT /;"	d	file:
PNG_TYPE	stb/deprecated/stb_image.c	/^#define PNG_TYPE(/;"	d	file:
ParseCommandLine	stb/tests/caveview/win32/SDL_windows_main.c	/^ParseCommandLine(char *cmdline, char **argv)$/;"	f	typeref:typename:int	file:
ProbedPage	stb/stb_vorbis.c	/^} ProbedPage;$/;"	t	typeref:struct:__anon008e12ab0d08	file:
ProcessEvent	render-layer.h	/^  virtual void ProcessEvent(SDL_Event* event) {}$/;"	f	struct:IRenderLayer	typeref:typename:void
ProcessEvent	tetris.cpp	/^void Tetris::ProcessEvent(SDL_Event* event) {}$/;"	f	class:Tetris	typeref:typename:void
ProcessEvent	window.cpp	/^void Window::ProcessEvent(SDL_Event* event) {$/;"	f	class:Window	typeref:typename:void
Pull requests	stb/.github/CONTRIBUTING.md	/^# Pull requests$/;"	c
R	stb/stb_vorbis.c	/^#define R /;"	d	file:
RENDER_LAYER_H	render-layer.h	/^#define RENDER_LAYER_H$/;"	d
RENDER_SHAPES_H	render-shapes.h	/^#define RENDER_SHAPES_H$/;"	d
RENDER_SPRITES_H	render-sprites.h	/^#define RENDER_SPRITES_H$/;"	d
RENDER_SURFACE_H	render-surface.h	/^#define RENDER_SURFACE_H$/;"	d
RESTART	stb/deprecated/stb_image.c	/^#define RESTART(/;"	d	file:
REVERSE_DEPTH	stb/tests/caveview/cave_main.c	/^#define REVERSE_DEPTH$/;"	d	file:
RRCCS	stb/deprecated/rrsprintf.h	/^typedef struct RRCCS$/;"	s
RRCCS	stb/deprecated/rrsprintf.h	/^} RRCCS;$/;"	t	typeref:struct:RRCCS
RRCOPYFP	stb/deprecated/rrsprintf.h	/^ #define RRCOPYFP(/;"	d
RRPUBLIC_DEC	stb/deprecated/rrsprintf.h	/^#define RRPUBLIC_DEC /;"	d
RRPUBLIC_DEF	stb/deprecated/rrsprintf.h	/^#define RRPUBLIC_DEF /;"	d
RRPUBLIC_DEF	stb/deprecated/rrsprintf.h	/^#define RRPUBLIC_DEF$/;"	d
RRSPECIAL	stb/deprecated/rrsprintf.h	/^#define RRSPECIAL /;"	d
RRSPRINTFCB	stb/deprecated/rrsprintf.h	/^typedef char * RRSPRINTFCB( char * buf, void * user, int len );$/;"	t	typeref:typename:char * ()(char * buf,void * user,int len)
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^#define RR_SPRINTF_DECORATE(/;"	d
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF int RR_SPRINTF_DECORATE( snprintf )( char * buf, int count, char const * fmt, ... )$/;"	f	typeref:typename:RRPUBLIC_DEF int
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF int RR_SPRINTF_DECORATE( sprintf )( char * buf, char const * fmt, ... )$/;"	f	typeref:typename:RRPUBLIC_DEF int
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF int RR_SPRINTF_DECORATE( vsnprintf )( char * buf, int count, char const * fmt, va_l/;"	f	typeref:typename:RRPUBLIC_DEF int
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF int RR_SPRINTF_DECORATE( vsprintf )( char * buf, char const * fmt, va_list va )$/;"	f	typeref:typename:RRPUBLIC_DEF int
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF int RR_SPRINTF_DECORATE( vsprintfcb )( RRSPRINTFCB * callback, void * user, char * /;"	f	typeref:typename:RRPUBLIC_DEF int
RR_SPRINTF_DECORATE	stb/deprecated/rrsprintf.h	/^RRPUBLIC_DEF void RR_SPRINTF_DECORATE( setseparators )( char pcomma, char pperiod )$/;"	f	typeref:typename:RRPUBLIC_DEF void
RR_SPRINTF_H_INCLUDE	stb/deprecated/rrsprintf.h	/^#define RR_SPRINTF_H_INCLUDE$/;"	d
RR_SPRINTF_MIN	stb/deprecated/rrsprintf.h	/^#define RR_SPRINTF_MIN /;"	d
RR_SPRINTF_MSVC_MODE	stb/deprecated/rrsprintf.h	/^#define RR_SPRINTF_MSVC_MODE$/;"	d
RR_UNALIGNED	stb/deprecated/rrsprintf.h	/^#define RR_UNALIGNED(/;"	d
RRcomma	stb/deprecated/rrsprintf.h	/^static char RRcomma=',';$/;"	v	typeref:typename:char
RRperiod	stb/deprecated/rrsprintf.h	/^static char RRperiod='.';$/;"	v	typeref:typename:char
Render	render-layer.h	/^  virtual void Render(SDL_Window* window, bool reset, float time_delta) {}$/;"	f	struct:IRenderLayer	typeref:typename:void
Render	render-shapes.cpp	/^void RenderShapes::Render(SDL_Window* window, bool reset, float time_delta) {$/;"	f	class:RenderShapes	typeref:typename:void
Render	render-sprites.cpp	/^void RenderSprites::Render(SDL_Window* window, bool reset, float time_delta) {$/;"	f	class:RenderSprites	typeref:typename:void
Render	render-surface.cpp	/^void RenderSurface::Render(SDL_Window* window, bool reset, float time_delta) {$/;"	f	class:RenderSurface	typeref:typename:void
Render	tetris.cpp	/^void Tetris::Render(SDL_Window* window, bool reset, float time_delta) {$/;"	f	class:Tetris	typeref:typename:void
Render	window.cpp	/^void Window::Render() {$/;"	f	class:Window	typeref:typename:void
RenderShapes	render-shapes.cpp	/^RenderShapes::RenderShapes(): self(new RenderShapesImpl) {}$/;"	f	class:RenderShapes
RenderShapes	render-shapes.h	/^class RenderShapes: public IRenderLayer {$/;"	c
RenderShapesImpl	render-shapes.cpp	/^RenderShapesImpl::RenderShapesImpl()$/;"	f	class:RenderShapesImpl
RenderShapesImpl	render-shapes.cpp	/^struct RenderShapesImpl {$/;"	s	file:
RenderSprites	render-sprites.cpp	/^RenderSprites::RenderSprites(): self(new RenderSpritesImpl) {}$/;"	f	class:RenderSprites
RenderSprites	render-sprites.h	/^class RenderSprites: public IRenderLayer {$/;"	c
RenderSpritesImpl	render-sprites.cpp	/^RenderSpritesImpl::RenderSpritesImpl()$/;"	f	class:RenderSpritesImpl
RenderSpritesImpl	render-sprites.cpp	/^struct RenderSpritesImpl {$/;"	s	file:
RenderSurface	render-surface.cpp	/^RenderSurface::RenderSurface(SDL_Surface* surface): self(new RenderSurfaceImpl(surface)) {}$/;"	f	class:RenderSurface
RenderSurface	render-surface.h	/^class RenderSurface: public IRenderLayer {$/;"	c
RenderSurfaceImpl	render-surface.cpp	/^RenderSurfaceImpl::RenderSurfaceImpl(SDL_Surface* surface_)$/;"	f	class:RenderSurfaceImpl
RenderSurfaceImpl	render-surface.cpp	/^struct RenderSurfaceImpl {$/;"	s	file:
Residue	stb/stb_vorbis.c	/^} Residue;$/;"	t	typeref:struct:__anon008e12ab0808	file:
Responsiveness	stb/.github/CONTRIBUTING.md	/^# Responsiveness$/;"	c
SAMPLES_TO_TEST	stb/tests/vorbseek/vorbseek.c	/^#define SAMPLES_TO_TEST /;"	d	file:
SAMPLE_unknown	stb/stb_vorbis.c	/^#define SAMPLE_unknown /;"	d	file:
SCALE	stb/tests/caveview/cave_main.c	/^#define SCALE /;"	d	file:
SCAN_header	stb/deprecated/stb_image.c	/^   SCAN_header$/;"	e	enum:__anon9409ffb90403	file:
SCAN_load	stb/deprecated/stb_image.c	/^   SCAN_load=0,$/;"	e	enum:__anon9409ffb90403	file:
SCAN_type	stb/deprecated/stb_image.c	/^   SCAN_type,$/;"	e	enum:__anon9409ffb90403	file:
SDL_main	stb/tests/caveview/cave_main.c	/^int SDL_main(int argc, char **argv)$/;"	f	typeref:typename:int
SHADER_UTILS_H	shader_utils.h	/^#define SHADER_UTILS_H$/;"	d
SHOW_OVERLAY	main.cpp	/^#define SHOW_OVERLAY /;"	d	file:
SHOW_SHAPES	main.cpp	/^#define SHOW_SHAPES /;"	d	file:
SHOW_SPRITES	main.cpp	/^#define SHOW_SPRITES /;"	d	file:
SIZE_X	stb/tests/oversample/main.c	/^#define SIZE_X /;"	d	file:
SIZE_Y	stb/tests/oversample/main.c	/^#define SIZE_Y /;"	d	file:
SKIP_TERRAIN	stb/tests/caveview/cave_mesher.c	/^#define SKIP_TERRAIN /;"	d	file:
SNPRINTF	stb/tests/test_sprintf.c	/^# define SNPRINTF /;"	d	file:
SOF	stb/deprecated/stb_image.c	/^#define SOF(/;"	d	file:
SOI	stb/deprecated/stb_image.c	/^#define SOI(/;"	d	file:
SOS	stb/deprecated/stb_image.c	/^#define SOS(/;"	d	file:
SPRINTF	stb/tests/test_sprintf.c	/^# define SPRINTF /;"	d	file:
SSIZE	stb/tests/stb.c	/^      #define SSIZE /;"	d	file:
STATE_abandoned	stb/tests/caveview/cave_render.c	/^   STATE_abandoned,$/;"	e	enum:__anonb6d309d70103	file:
STATE_invalid	stb/tests/caveview/cave_render.c	/^   STATE_invalid,$/;"	e	enum:__anonb6d309d70103	file:
STATE_needed	stb/tests/caveview/cave_render.c	/^   STATE_needed,$/;"	e	enum:__anonb6d309d70103	file:
STATE_requested	stb/tests/caveview/cave_render.c	/^   STATE_requested,$/;"	e	enum:__anonb6d309d70103	file:
STATE_valid	stb/tests/caveview/cave_render.c	/^   STATE_valid,$/;"	e	enum:__anonb6d309d70103	file:
STATIC_FRICTION	stb/tests/caveview/cave_main.c	/^#define STATIC_FRICTION /;"	d	file:
STBCC_CLUSTER_SIZE_X_LOG2	stb/stb_connected_components.h	/^   #define STBCC_CLUSTER_SIZE_X_LOG2 /;"	d
STBCC_CLUSTER_SIZE_Y_LOG2	stb/stb_connected_components.h	/^   #define STBCC_CLUSTER_SIZE_Y_LOG2 /;"	d
STBCC_GRID_COUNT_X_LOG2	stb/tests/grid_reachability.c	/^#define STBCC_GRID_COUNT_X_LOG2 /;"	d	file:
STBCC_GRID_COUNT_X_LOG2	stb/tests/test_cpp_compilation.cpp	/^#define STBCC_GRID_COUNT_X_LOG2 /;"	d	file:
STBCC_GRID_COUNT_Y_LOG2	stb/tests/grid_reachability.c	/^#define STBCC_GRID_COUNT_Y_LOG2 /;"	d	file:
STBCC_GRID_COUNT_Y_LOG2	stb/tests/test_cpp_compilation.cpp	/^#define STBCC_GRID_COUNT_Y_LOG2 /;"	d	file:
STBCC_NULL_UNIQUE_ID	stb/stb_connected_components.h	/^#define STBCC_NULL_UNIQUE_ID /;"	d
STBCC__CLUSTER_ADJACENCY_COUNT	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_ADJACENCY_COUNT /;"	d
STBCC__CLUSTER_COUNT_X	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_COUNT_X /;"	d
STBCC__CLUSTER_COUNT_X_LOG2	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_COUNT_X_LOG2 /;"	d
STBCC__CLUSTER_COUNT_Y	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_COUNT_Y /;"	d
STBCC__CLUSTER_COUNT_Y_LOG2	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_COUNT_Y_LOG2 /;"	d
STBCC__CLUSTER_SIZE_X	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_SIZE_X /;"	d
STBCC__CLUSTER_SIZE_Y	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_SIZE_Y /;"	d
STBCC__CLUSTER_X_FOR_COORD_X	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_X_FOR_COORD_X(/;"	d
STBCC__CLUSTER_Y_FOR_COORD_Y	stb/stb_connected_components.h	/^#define STBCC__CLUSTER_Y_FOR_COORD_Y(/;"	d
STBCC__GRID_COUNT_X	stb/stb_connected_components.h	/^#define STBCC__GRID_COUNT_X /;"	d
STBCC__GRID_COUNT_Y	stb/stb_connected_components.h	/^#define STBCC__GRID_COUNT_Y /;"	d
STBCC__MAP_BYTE	stb/stb_connected_components.h	/^#define STBCC__MAP_BYTE(/;"	d
STBCC__MAP_BYTE_MASK	stb/stb_connected_components.h	/^#define STBCC__MAP_BYTE_MASK(/;"	d
STBCC__MAP_OPEN	stb/stb_connected_components.h	/^#define STBCC__MAP_OPEN(/;"	d
STBCC__MAP_STRIDE	stb/stb_connected_components.h	/^#define STBCC__MAP_STRIDE /;"	d
STBCC__MAX_CLUMPS	stb/stb_connected_components.h	/^#define STBCC__MAX_CLUMPS /;"	d
STBCC__MAX_CLUMPS_PER_CLUSTER	stb/stb_connected_components.h	/^#define STBCC__MAX_CLUMPS_PER_CLUSTER /;"	d
STBCC__MAX_CLUMPS_PER_CLUSTER_LOG2	stb/stb_connected_components.h	/^#define STBCC__MAX_CLUMPS_PER_CLUSTER_LOG2 /;"	d
STBCC__MAX_EDGE_CLUMPS_PER_CLUSTER	stb/stb_connected_components.h	/^#define STBCC__MAX_EDGE_CLUMPS_PER_CLUSTER /;"	d
STBCC__MAX_EXITS_PER_CLUMP	stb/stb_connected_components.h	/^#define STBCC__MAX_EXITS_PER_CLUMP /;"	d
STBCC__MAX_EXITS_PER_CLUSTER	stb/stb_connected_components.h	/^#define STBCC__MAX_EXITS_PER_CLUSTER /;"	d
STBCC__NULL_CLUMPID	stb/stb_connected_components.h	/^#define STBCC__NULL_CLUMPID /;"	d
STBDDEF	stb/stb_dxt.h	/^#define STBDDEF /;"	d
STBDS_ADDRESSOF	stb/stb_ds.h	/^  #define STBDS_ADDRESSOF(/;"	d
STBDS_ADDRESSOF	stb/stb_ds.h	/^#define STBDS_ADDRESSOF(/;"	d
STBDS_ALIGN_FWD	stb/stb_ds.h	/^#define STBDS_ALIGN_FWD(/;"	d
STBDS_ARR_TO_HASH	stb/stb_ds.h	/^#define STBDS_ARR_TO_HASH(/;"	d
STBDS_ASSERT	stb/stb_ds.h	/^#define STBDS_ASSERT /;"	d
STBDS_ASSERT	stb/stb_ds.h	/^#define STBDS_ASSERT(/;"	d
STBDS_ASSERT	stb/tests/test_ds.c	/^#define STBDS_ASSERT /;"	d	file:
STBDS_ASSERT	stb/tests/test_ds_cpp.cpp	/^#define STBDS_ASSERT /;"	d	file:
STBDS_ASSERT_WAS_UNDEFINED	stb/stb_ds.h	/^#define STBDS_ASSERT_WAS_UNDEFINED$/;"	d
STBDS_BUCKET_LENGTH	stb/stb_ds.h	/^#define STBDS_BUCKET_LENGTH /;"	d
STBDS_BUCKET_MASK	stb/stb_ds.h	/^#define STBDS_BUCKET_MASK /;"	d
STBDS_BUCKET_SHIFT	stb/stb_ds.h	/^#define STBDS_BUCKET_SHIFT /;"	d
STBDS_CACHE_LINE_SIZE	stb/stb_ds.h	/^#define STBDS_CACHE_LINE_SIZE /;"	d
STBDS_FREE	stb/stb_ds.h	/^#define STBDS_FREE(/;"	d
STBDS_HASH_DELETED	stb/stb_ds.h	/^#define STBDS_HASH_DELETED /;"	d
STBDS_HASH_EMPTY	stb/stb_ds.h	/^#define STBDS_HASH_EMPTY /;"	d
STBDS_HASH_TO_ARR	stb/stb_ds.h	/^#define STBDS_HASH_TO_ARR(/;"	d
STBDS_HAS_LITERAL_ARRAY	stb/stb_ds.h	/^#define STBDS_HAS_LITERAL_ARRAY$/;"	d
STBDS_HAS_TYPEOF	stb/stb_ds.h	/^#define STBDS_HAS_TYPEOF$/;"	d
STBDS_HM_BINARY	stb/stb_ds.h	/^#define STBDS_HM_BINARY /;"	d
STBDS_HM_STRING	stb/stb_ds.h	/^#define STBDS_HM_STRING /;"	d
STBDS_INDEX_DELETED	stb/stb_ds.h	/^#define STBDS_INDEX_DELETED /;"	d
STBDS_INDEX_EMPTY	stb/stb_ds.h	/^#define STBDS_INDEX_EMPTY /;"	d
STBDS_INDEX_IN_USE	stb/stb_ds.h	/^#define STBDS_INDEX_IN_USE(/;"	d
STBDS_NOTUSED	stb/stb_ds.h	/^#define STBDS_NOTUSED(/;"	d
STBDS_OFFSETOF	stb/stb_ds.h	/^#define STBDS_OFFSETOF(/;"	d
STBDS_REALLOC	stb/stb_ds.h	/^#define STBDS_REALLOC(/;"	d
STBDS_ROTATE_LEFT	stb/stb_ds.h	/^#define STBDS_ROTATE_LEFT(/;"	d
STBDS_ROTATE_RIGHT	stb/stb_ds.h	/^#define STBDS_ROTATE_RIGHT(/;"	d
STBDS_SH_ARENA	stb/stb_ds.h	/^   STBDS_SH_ARENA$/;"	e	enum:__anona15bb9d20203
STBDS_SH_DEFAULT	stb/stb_ds.h	/^   STBDS_SH_DEFAULT,$/;"	e	enum:__anona15bb9d20203
STBDS_SH_NONE	stb/stb_ds.h	/^   STBDS_SH_NONE,$/;"	e	enum:__anona15bb9d20203
STBDS_SH_STRDUP	stb/stb_ds.h	/^   STBDS_SH_STRDUP,$/;"	e	enum:__anona15bb9d20203
STBDS_SIPHASH_2_4	stb/tests/test_siphash.c	/^#define STBDS_SIPHASH_2_4$/;"	d	file:
STBDS_SIPHASH_2_4_can_only_be_used_in_64_bit_builds	stb/stb_ds.h	/^typedef int STBDS_SIPHASH_2_4_can_only_be_used_in_64_bit_builds[sizeof(size_t) == 8 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (size_t)==8?1:-1]
STBDS_SIPHASH_C_ROUNDS	stb/stb_ds.h	/^#define STBDS_SIPHASH_C_ROUNDS /;"	d
STBDS_SIPHASH_D_ROUNDS	stb/stb_ds.h	/^#define STBDS_SIPHASH_D_ROUNDS /;"	d
STBDS_SIPROUND	stb/stb_ds.h	/^  #define STBDS_SIPROUND(/;"	d
STBDS_SIZE_T_BITS	stb/stb_ds.h	/^#define STBDS_SIZE_T_BITS /;"	d
STBDS_SMALL_BUCKET	stb/tests/test_ds.c	/^#define STBDS_SMALL_BUCKET$/;"	d	file:
STBDS_STATISTICS	stb/tests/test_ds.c	/^#define STBDS_STATISTICS$/;"	d	file:
STBDS_STATISTICS	stb/tests/test_ds_cpp.cpp	/^#define STBDS_STATISTICS$/;"	d	file:
STBDS_STATS	stb/stb_ds.h	/^#define STBDS_STATS(/;"	d
STBDS_STRING_ARENA_BLOCKSIZE_MAX	stb/stb_ds.h	/^#define STBDS_STRING_ARENA_BLOCKSIZE_MAX /;"	d
STBDS_STRING_ARENA_BLOCKSIZE_MIN	stb/stb_ds.h	/^#define STBDS_STRING_ARENA_BLOCKSIZE_MIN /;"	d
STBDS_TEST_SIPHASH_2_4	stb/tests/test_siphash.c	/^#define STBDS_TEST_SIPHASH_2_4$/;"	d	file:
STBDS_UNIT_TESTS	stb/tests/test_cpp_compilation.cpp	/^#define STBDS_UNIT_TESTS$/;"	d	file:
STBDS_UNIT_TESTS	stb/tests/test_ds.c	/^#define STBDS_UNIT_TESTS$/;"	d	file:
STBDS_UNIT_TESTS	stb/tests/test_ds_cpp.cpp	/^#define STBDS_UNIT_TESTS$/;"	d	file:
STBD_FABS	stb/stb_dxt.h	/^#define STBD_FABS(/;"	d
STBGL_ARBIFY	stb/tests/caveview/stb_glprog.h	/^#define STBGL_ARBIFY(/;"	d
STBGL_CLAMP_TO_BORDER	stb/tests/caveview/stb_gl.h	/^#define STBGL_CLAMP_TO_BORDER /;"	d
STBGL_CLAMP_TO_EDGE	stb/tests/caveview/stb_gl.h	/^#define STBGL_CLAMP_TO_EDGE /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT1	stb/tests/caveview/stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT1 /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT3	stb/tests/caveview/stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT3 /;"	d
STBGL_COMPRESSED_RGBA_S3TC_DXT5	stb/tests/caveview/stb_gl.h	/^#define STBGL_COMPRESSED_RGBA_S3TC_DXT5 /;"	d
STBGL_COMPRESSED_RGB_S3TC_DXT1	stb/tests/caveview/stb_gl.h	/^#define STBGL_COMPRESSED_RGB_S3TC_DXT1 /;"	d
STBGL_DEPTH_COMPONENT16	stb/tests/caveview/stb_gl.h	/^#define STBGL_DEPTH_COMPONENT16 /;"	d
STBGL_DEPTH_COMPONENT24	stb/tests/caveview/stb_gl.h	/^#define STBGL_DEPTH_COMPONENT24 /;"	d
STBGL_DEPTH_COMPONENT32	stb/tests/caveview/stb_gl.h	/^#define STBGL_DEPTH_COMPONENT32 /;"	d
STBGL_FRAGMENT_SHADER	stb/tests/caveview/stb_glprog.h	/^#define STBGL_FRAGMENT_SHADER /;"	d
STBGL_GEN_MIPMAPS	stb/tests/caveview/stb_gl.h	/^   STBGL_GEN_MIPMAPS,$/;"	e	enum:__anone270de390103
STBGL_MIPMAPS	stb/tests/caveview/stb_gl.h	/^   STBGL_MIPMAPS,$/;"	e	enum:__anone270de390103
STBGL_NO_DOWNLOAD	stb/tests/caveview/stb_gl.h	/^   STBGL_NO_DOWNLOAD,$/;"	e	enum:__anone270de390103
STBGL_UNDEFINED	stb/tests/caveview/stb_gl.h	/^   STBGL_UNDEFINED = 0x6000,$/;"	e	enum:__anone270de390103
STBGL_VERTEX_SHADER	stb/tests/caveview/stb_glprog.h	/^#define STBGL_VERTEX_SHADER /;"	d
STBGL_YCOCG	stb/tests/caveview/stb_gl.h	/^   STBGL_YCOCG,$/;"	e	enum:__anone270de390103
STBGL_YCOCGJ	stb/tests/caveview/stb_gl.h	/^   STBGL_YCOCGJ,$/;"	e	enum:__anone270de390103
STBGL__GET_FUNC	stb/tests/caveview/stb_gl.h	/^   #define STBGL__GET_FUNC(/;"	d
STBGL__GET_FUNC	stb/tests/caveview/stb_glprog.h	/^#define STBGL__GET_FUNC(/;"	d
STBHW_EXTERN	stb/stb_herringbone_wang_tile.h	/^#define STBHW_EXTERN /;"	d
STBIDEF	stb/stb_image.h	/^#define STBIDEF /;"	d
STBIDEF	stb/tests/test_image.c	/^#define STBIDEF /;"	d	file:
STBIRDEF	stb/stb_image_resize.h	/^#define STBIRDEF /;"	d
STBIRDEF	stb/tests/resample_test.cpp	/^#define STBIRDEF /;"	d	file:
STBIR_ALPHA_CHANNEL_NONE	stb/stb_image_resize.h	/^#define STBIR_ALPHA_CHANNEL_NONE /;"	d
STBIR_ALPHA_EPSILON	stb/stb_image_resize.h	/^#define STBIR_ALPHA_EPSILON /;"	d
STBIR_ASSERT	stb/stb_image_resize.h	/^#define STBIR_ASSERT(/;"	d
STBIR_ASSERT	stb/tests/resample_test.cpp	/^#define STBIR_ASSERT(/;"	d	file:
STBIR_COLORSPACE_LINEAR	stb/stb_image_resize.h	/^    STBIR_COLORSPACE_LINEAR,$/;"	e	enum:__anonb59f51af0303
STBIR_COLORSPACE_SRGB	stb/stb_image_resize.h	/^    STBIR_COLORSPACE_SRGB,$/;"	e	enum:__anonb59f51af0303
STBIR_DEFAULT_FILTER_DOWNSAMPLE	stb/stb_image_resize.h	/^#define STBIR_DEFAULT_FILTER_DOWNSAMPLE /;"	d
STBIR_DEFAULT_FILTER_UPSAMPLE	stb/stb_image_resize.h	/^#define STBIR_DEFAULT_FILTER_UPSAMPLE /;"	d
STBIR_EDGE_CLAMP	stb/stb_image_resize.h	/^    STBIR_EDGE_CLAMP   = 1,$/;"	e	enum:__anonb59f51af0103
STBIR_EDGE_REFLECT	stb/stb_image_resize.h	/^    STBIR_EDGE_REFLECT = 2,$/;"	e	enum:__anonb59f51af0103
STBIR_EDGE_WRAP	stb/stb_image_resize.h	/^    STBIR_EDGE_WRAP    = 3,$/;"	e	enum:__anonb59f51af0103
STBIR_EDGE_ZERO	stb/stb_image_resize.h	/^    STBIR_EDGE_ZERO    = 4,$/;"	e	enum:__anonb59f51af0103
STBIR_FILTER_BOX	stb/stb_image_resize.h	/^    STBIR_FILTER_BOX          = 1,  \/\/ A trapezoid w\/1-pixel wide ramps, same result as box f/;"	e	enum:__anonb59f51af0203
STBIR_FILTER_CATMULLROM	stb/stb_image_resize.h	/^    STBIR_FILTER_CATMULLROM   = 4,  \/\/ An interpolating cubic spline$/;"	e	enum:__anonb59f51af0203
STBIR_FILTER_CUBICBSPLINE	stb/stb_image_resize.h	/^    STBIR_FILTER_CUBICBSPLINE = 3,  \/\/ The cubic b-spline (aka Mitchell-Netrevalli with B=1,C=/;"	e	enum:__anonb59f51af0203
STBIR_FILTER_DEFAULT	stb/stb_image_resize.h	/^    STBIR_FILTER_DEFAULT      = 0,  \/\/ use same filter type that easy-to-use API chooses$/;"	e	enum:__anonb59f51af0203
STBIR_FILTER_MITCHELL	stb/stb_image_resize.h	/^    STBIR_FILTER_MITCHELL     = 5,  \/\/ Mitchell-Netrevalli filter with B=1\/3, C=1\/3$/;"	e	enum:__anonb59f51af0203
STBIR_FILTER_TRIANGLE	stb/stb_image_resize.h	/^    STBIR_FILTER_TRIANGLE     = 2,  \/\/ On upsampling, produces same results as bilinear textur/;"	e	enum:__anonb59f51af0203
STBIR_FLAG_ALPHA_PREMULTIPLIED	stb/stb_image_resize.h	/^#define STBIR_FLAG_ALPHA_PREMULTIPLIED /;"	d
STBIR_FLAG_ALPHA_USES_COLORSPACE	stb/stb_image_resize.h	/^#define STBIR_FLAG_ALPHA_USES_COLORSPACE /;"	d
STBIR_FREE	stb/stb_image_resize.h	/^#define STBIR_FREE(/;"	d
STBIR_FREE	stb/tests/resample_test.cpp	/^#define STBIR_FREE /;"	d	file:
STBIR_INCLUDE_STB_IMAGE_RESIZE_H	stb/stb_image_resize.h	/^#define STBIR_INCLUDE_STB_IMAGE_RESIZE_H$/;"	d
STBIR_MALLOC	stb/stb_image_resize.h	/^#define STBIR_MALLOC(/;"	d
STBIR_MALLOC	stb/tests/resample_test.cpp	/^#define STBIR_MALLOC /;"	d	file:
STBIR_MAX_CHANNELS	stb/stb_image_resize.h	/^#define STBIR_MAX_CHANNELS /;"	d
STBIR_MAX_COLORSPACES	stb/stb_image_resize.h	/^    STBIR_MAX_COLORSPACES,$/;"	e	enum:__anonb59f51af0303
STBIR_MAX_TYPES	stb/stb_image_resize.h	/^    STBIR_MAX_TYPES$/;"	e	enum:__anonb59f51af0403
STBIR_PROGRESS_REPORT	stb/stb_image_resize.h	/^#define STBIR_PROGRESS_REPORT(/;"	d
STBIR_PROGRESS_REPORT	stb/tests/resample_test.cpp	/^#define STBIR_PROGRESS_REPORT /;"	d	file:
STBIR_TYPE_FLOAT	stb/stb_image_resize.h	/^    STBIR_TYPE_FLOAT ,$/;"	e	enum:__anonb59f51af0403
STBIR_TYPE_UINT16	stb/stb_image_resize.h	/^    STBIR_TYPE_UINT16,$/;"	e	enum:__anonb59f51af0403
STBIR_TYPE_UINT32	stb/stb_image_resize.h	/^    STBIR_TYPE_UINT32,$/;"	e	enum:__anonb59f51af0403
STBIR_TYPE_UINT8	stb/stb_image_resize.h	/^    STBIR_TYPE_UINT8 ,$/;"	e	enum:__anonb59f51af0403
STBIR__ARRAY_SIZE	stb/stb_image_resize.h	/^#define STBIR__ARRAY_SIZE(/;"	d
STBIR__DECODE	stb/stb_image_resize.h	/^#define STBIR__DECODE(/;"	d
STBIR__ENCODE_LINEAR16	stb/stb_image_resize.h	/^    #define STBIR__ENCODE_LINEAR16(/;"	d
STBIR__ENCODE_LINEAR8	stb/stb_image_resize.h	/^    #define STBIR__ENCODE_LINEAR8(/;"	d
STBIR__NEXT_MEMPTR	stb/stb_image_resize.h	/^#define STBIR__NEXT_MEMPTR(/;"	d
STBIR__NOTUSED	stb/stb_image_resize.h	/^#define STBIR__NOTUSED(/;"	d
STBIR__ROUND_INT	stb/stb_image_resize.h	/^    #define STBIR__ROUND_INT(/;"	d
STBIR__ROUND_UINT	stb/stb_image_resize.h	/^    #define STBIR__ROUND_UINT(/;"	d
STBIR__UNUSED_PARAM	stb/stb_image_resize.h	/^#define STBIR__UNUSED_PARAM(/;"	d
STBIWDEF	stb/stb_image_write.h	/^#define STBIWDEF /;"	d
STBIWDEF	stb/tests/image_write_test.c	/^#define STBIWDEF /;"	d	file:
STBIWDEF	stb/tests/test_cpp_compilation.cpp	/^#define STBIWDEF /;"	d	file:
STBIWDEF	stb/tests/test_image_write.c	/^#define STBIWDEF /;"	d	file:
STBIW_ASSERT	stb/stb_image_write.h	/^#define STBIW_ASSERT(/;"	d
STBIW_EXTERN	stb/stb_image_write.h	/^#define STBIW_EXTERN /;"	d
STBIW_FREE	stb/stb_image_write.h	/^#define STBIW_FREE(/;"	d
STBIW_MALLOC	stb/stb_image_write.h	/^#define STBIW_MALLOC(/;"	d
STBIW_MEMMOVE	stb/stb_image_write.h	/^#define STBIW_MEMMOVE(/;"	d
STBIW_REALLOC	stb/stb_image_write.h	/^#define STBIW_REALLOC(/;"	d
STBIW_REALLOC_SIZED	stb/stb_image_write.h	/^#define STBIW_REALLOC_SIZED(/;"	d
STBIW_UCHAR	stb/stb_image_write.h	/^#define STBIW_UCHAR(/;"	d
STBI_ASSERT	stb/stb_image.h	/^#define STBI_ASSERT(/;"	d
STBI_EXTERN	stb/stb_image.h	/^#define STBI_EXTERN /;"	d
STBI_FREE	stb/stb_image.h	/^#define STBI_FREE(/;"	d
STBI_FREE	stb/tests/test_cpp_compilation.cpp	/^#define STBI_FREE /;"	d	file:
STBI_HAS_LROTL	stb/deprecated/stb_image.c	/^#define STBI_HAS_LROTL$/;"	d	file:
STBI_HAS_LROTL	stb/stb_image.h	/^#define STBI_HAS_LROTL$/;"	d
STBI_INCLUDE_STB_IMAGE_H	stb/deprecated/stb_image.c	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d	file:
STBI_INCLUDE_STB_IMAGE_H	stb/stb_image.h	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d
STBI_MALLOC	stb/stb_image.h	/^#define STBI_MALLOC(/;"	d
STBI_MALLOC	stb/tests/test_cpp_compilation.cpp	/^#define STBI_MALLOC /;"	d	file:
STBI_MAX_DIMENSIONS	stb/stb_image.h	/^#define STBI_MAX_DIMENSIONS /;"	d
STBI_NOTUSED	stb/deprecated/stb_image.c	/^#define STBI_NOTUSED(/;"	d	file:
STBI_NOTUSED	stb/stb_image.h	/^#define STBI_NOTUSED(/;"	d
STBI_NO_BMP	stb/stb_image.h	/^   #define STBI_NO_BMP$/;"	d
STBI_NO_GIF	stb/stb_image.h	/^   #define STBI_NO_GIF$/;"	d
STBI_NO_HDR	stb/stb_image.h	/^   #define STBI_NO_HDR$/;"	d
STBI_NO_JPEG	stb/stb_image.h	/^   #define STBI_NO_JPEG$/;"	d
STBI_NO_PIC	stb/stb_image.h	/^   #define STBI_NO_PIC$/;"	d
STBI_NO_PNG	stb/stb_image.h	/^   #define STBI_NO_PNG$/;"	d
STBI_NO_PNM	stb/stb_image.h	/^   #define STBI_NO_PNM$/;"	d
STBI_NO_PSD	stb/stb_image.h	/^   #define STBI_NO_PSD$/;"	d
STBI_NO_SIMD	stb/stb_image.h	/^#define STBI_NO_SIMD$/;"	d
STBI_NO_TGA	stb/stb_image.h	/^   #define STBI_NO_TGA$/;"	d
STBI_NO_ZLIB	stb/stb_image.h	/^#define STBI_NO_ZLIB$/;"	d
STBI_ORDER_BGR	stb/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anonc3e085de0403
STBI_ORDER_RGB	stb/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anonc3e085de0403
STBI_REALLOC	stb/stb_image.h	/^#define STBI_REALLOC(/;"	d
STBI_REALLOC	stb/tests/test_cpp_compilation.cpp	/^#define STBI_REALLOC /;"	d	file:
STBI_REALLOC_SIZED	stb/stb_image.h	/^#define STBI_REALLOC_SIZED(/;"	d
STBI_SIMD_ALIGN	stb/stb_image.h	/^#define STBI_SIMD_ALIGN(/;"	d
STBI_SSE2	stb/stb_image.h	/^#define STBI_SSE2$/;"	d
STBI_THREAD_LOCAL	stb/stb_image.h	/^        #define STBI_THREAD_LOCAL /;"	d
STBI_THREAD_LOCAL	stb/stb_image.h	/^      #define STBI_THREAD_LOCAL /;"	d
STBI_VERSION	stb/deprecated/stb_image.c	/^#define STBI_VERSION /;"	d	file:
STBI_VERSION	stb/stb_image.h	/^#define STBI_VERSION /;"	d
STBI_WINDOWS_UTF8	stb/tests/image_test.c	/^#define STBI_WINDOWS_UTF8$/;"	d	file:
STBI_WINDOWS_UTF8	stb/tests/stb_static.c	/^#define STBI_WINDOWS_UTF8$/;"	d	file:
STBI__BYTECAST	stb/stb_image.h	/^#define STBI__BYTECAST(/;"	d
STBI__CASE	stb/stb_image.h	/^         #define STBI__CASE(/;"	d
STBI__CASE	stb/stb_image.h	/^      #define STBI__CASE(/;"	d
STBI__COMBO	stb/stb_image.h	/^      #define STBI__COMBO(/;"	d
STBI__F_avg	stb/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anonc3e085de0f03
STBI__F_avg_first	stb/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anonc3e085de0f03
STBI__F_none	stb/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anonc3e085de0f03
STBI__F_paeth	stb/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anonc3e085de0f03
STBI__F_paeth_first	stb/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anonc3e085de0f03
STBI__F_sub	stb/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anonc3e085de0f03
STBI__F_up	stb/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anonc3e085de0f03
STBI__HDR_BUFLEN	stb/stb_image.h	/^#define STBI__HDR_BUFLEN /;"	d
STBI__IDCT_1D	stb/stb_image.h	/^#define STBI__IDCT_1D(/;"	d
STBI__MARKER_none	stb/stb_image.h	/^#define STBI__MARKER_none /;"	d
STBI__PNG_TYPE	stb/stb_image.h	/^#define STBI__PNG_TYPE(/;"	d
STBI__RESTART	stb/stb_image.h	/^#define STBI__RESTART(/;"	d
STBI__SCAN_header	stb/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anonc3e085de0603
STBI__SCAN_load	stb/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anonc3e085de0603
STBI__SCAN_type	stb/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anonc3e085de0603
STBI__X64_TARGET	stb/stb_image.h	/^#define STBI__X64_TARGET$/;"	d
STBI__X86_TARGET	stb/stb_image.h	/^#define STBI__X86_TARGET$/;"	d
STBI__ZFAST_BITS	stb/stb_image.h	/^#define STBI__ZFAST_BITS /;"	d
STBI__ZFAST_MASK	stb/stb_image.h	/^#define STBI__ZFAST_MASK /;"	d
STBI__ZNSYMS	stb/stb_image.h	/^#define STBI__ZNSYMS /;"	d
STBI_default	stb/deprecated/stb_image.c	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon9409ffb90103	file:
STBI_default	stb/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anonc3e085de0103
STBI_grey	stb/deprecated/stb_image.c	/^   STBI_grey       = 1,$/;"	e	enum:__anon9409ffb90103	file:
STBI_grey	stb/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anonc3e085de0103
STBI_grey_alpha	stb/deprecated/stb_image.c	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon9409ffb90103	file:
STBI_grey_alpha	stb/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anonc3e085de0103
STBI_rgb	stb/deprecated/stb_image.c	/^   STBI_rgb        = 3,$/;"	e	enum:__anon9409ffb90103	file:
STBI_rgb	stb/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anonc3e085de0103
STBI_rgb_alpha	stb/deprecated/stb_image.c	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon9409ffb90103	file:
STBI_rgb_alpha	stb/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anonc3e085de0103
STBRP_ASSERT	stb/stb_rect_pack.h	/^#define STBRP_ASSERT /;"	d
STBRP_DEF	stb/stb_rect_pack.h	/^#define STBRP_DEF /;"	d
STBRP_HEURISTIC_Skyline_BF_sortHeight	stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:__anon6e5b45070103
STBRP_HEURISTIC_Skyline_BL_sortHeight	stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,$/;"	e	enum:__anon6e5b45070103
STBRP_HEURISTIC_Skyline_default	stb/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_default=0,$/;"	e	enum:__anon6e5b45070103
STBRP_SORT	stb/stb_rect_pack.h	/^#define STBRP_SORT /;"	d
STBRP__CDECL	stb/stb_rect_pack.h	/^#define STBRP__CDECL /;"	d
STBRP__CDECL	stb/stb_rect_pack.h	/^#define STBRP__CDECL$/;"	d
STBRP__INIT_skyline	stb/stb_rect_pack.h	/^   STBRP__INIT_skyline = 1$/;"	e	enum:__anon6e5b45070203
STBRP__MAXVAL	stb/stb_rect_pack.h	/^#define STBRP__MAXVAL /;"	d
STBRP__NOTUSED	stb/stb_rect_pack.h	/^#define STBRP__NOTUSED(/;"	d
STBSP_SPRINTFCB	stb/stb_sprintf.h	/^typedef char *STBSP_SPRINTFCB(const char *buf, void *user, int len);$/;"	t	typeref:typename:char * ()(const char * buf,void * user,int len)
STBSP__ASAN	stb/stb_sprintf.h	/^    #define STBSP__ASAN /;"	d
STBSP__ASAN	stb/stb_sprintf.h	/^  #define STBSP__ASAN /;"	d
STBSP__ASAN	stb/stb_sprintf.h	/^#define STBSP__ASAN$/;"	d
STBSP__ATTRIBUTE_FORMAT	stb/stb_sprintf.h	/^   #define STBSP__ATTRIBUTE_FORMAT(/;"	d
STBSP__ATTRIBUTE_FORMAT	stb/stb_sprintf.h	/^#define STBSP__ATTRIBUTE_FORMAT(/;"	d
STBSP__COPYFP	stb/stb_sprintf.h	/^#define STBSP__COPYFP(/;"	d
STBSP__HALFWIDTH	stb/stb_sprintf.h	/^#define STBSP__HALFWIDTH /;"	d
STBSP__INTMAX	stb/stb_sprintf.h	/^#define STBSP__INTMAX /;"	d
STBSP__LEADINGPLUS	stb/stb_sprintf.h	/^#define STBSP__LEADINGPLUS /;"	d
STBSP__LEADINGSPACE	stb/stb_sprintf.h	/^#define STBSP__LEADINGSPACE /;"	d
STBSP__LEADINGZERO	stb/stb_sprintf.h	/^#define STBSP__LEADINGZERO /;"	d
STBSP__LEADING_0X	stb/stb_sprintf.h	/^#define STBSP__LEADING_0X /;"	d
STBSP__LEFTJUST	stb/stb_sprintf.h	/^#define STBSP__LEFTJUST /;"	d
STBSP__METRIC_1024	stb/stb_sprintf.h	/^#define STBSP__METRIC_1024 /;"	d
STBSP__METRIC_JEDEC	stb/stb_sprintf.h	/^#define STBSP__METRIC_JEDEC /;"	d
STBSP__METRIC_NOSPACE	stb/stb_sprintf.h	/^#define STBSP__METRIC_NOSPACE /;"	d
STBSP__METRIC_SUFFIX	stb/stb_sprintf.h	/^#define STBSP__METRIC_SUFFIX /;"	d
STBSP__NEGATIVE	stb/stb_sprintf.h	/^#define STBSP__NEGATIVE /;"	d
STBSP__NOTUSED	stb/stb_sprintf.h	/^#define STBSP__NOTUSED(/;"	d
STBSP__NUMSZ	stb/stb_sprintf.h	/^         #define STBSP__NUMSZ /;"	d
STBSP__PUBLICDEC	stb/stb_sprintf.h	/^#define STBSP__PUBLICDEC /;"	d
STBSP__PUBLICDEF	stb/stb_sprintf.h	/^#define STBSP__PUBLICDEF /;"	d
STBSP__SPECIAL	stb/stb_sprintf.h	/^#define STBSP__SPECIAL /;"	d
STBSP__TRIPLET_COMMA	stb/stb_sprintf.h	/^#define STBSP__TRIPLET_COMMA /;"	d
STBSP__UNALIGNED	stb/stb_sprintf.h	/^#define STBSP__UNALIGNED(/;"	d
STBTE_ALLOW_LINK	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_ALLOW_LINK(/;"	d	file:
STBTE_ASSERT	stb/stb_tilemap_editor.h	/^#define STBTE_ASSERT /;"	d
STBTE_COLOR_GRID	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_GRID /;"	d
STBTE_COLOR_SELECTION_OUTLINE1	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_SELECTION_OUTLINE1 /;"	d
STBTE_COLOR_SELECTION_OUTLINE2	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_SELECTION_OUTLINE2 /;"	d
STBTE_COLOR_TILEMAP_BACKGROUND	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_TILEMAP_BACKGROUND /;"	d
STBTE_COLOR_TILEMAP_BORDER	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_TILEMAP_BORDER /;"	d
STBTE_COLOR_TILEMAP_HIGHLIGHT	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_TILEMAP_HIGHLIGHT /;"	d
STBTE_COLOR_TILEPALETTE_BACKGROUND	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_TILEPALETTE_BACKGROUND /;"	d
STBTE_COLOR_TILEPALETTE_OUTLINE	stb/stb_tilemap_editor.h	/^#define STBTE_COLOR_TILEPALETTE_OUTLINE /;"	d
STBTE_DRAW_RECT	stb/tests/test_c_compilation.c	/^void STBTE_DRAW_RECT(int x0, int y0, int x1, int y1, unsigned int color)$/;"	f	typeref:typename:void
STBTE_DRAW_RECT	stb/tests/test_cpp_compilation.cpp	/^#define STBTE_DRAW_RECT(/;"	d	file:
STBTE_DRAW_RECT	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_DRAW_RECT(/;"	d	file:
STBTE_DRAW_TILE	stb/tests/test_c_compilation.c	/^void STBTE_DRAW_TILE(int x0, int y0, unsigned short id, int highlight, float *data)$/;"	f	typeref:typename:void
STBTE_DRAW_TILE	stb/tests/test_cpp_compilation.cpp	/^#define STBTE_DRAW_TILE(/;"	d	file:
STBTE_DRAW_TILE	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_DRAW_TILE(/;"	d	file:
STBTE_EMPTY	stb/stb_tilemap_editor.h	/^#define STBTE_EMPTY /;"	d
STBTE_FLOAT_CONTROL_GRANULARITY	stb/stb_tilemap_editor.h	/^#define STBTE_FLOAT_CONTROL_GRANULARITY /;"	d
STBTE_LINK_COLOR	stb/stb_tilemap_editor.h	/^#define STBTE_LINK_COLOR(/;"	d
STBTE_LINK_COLOR	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_LINK_COLOR(/;"	d	file:
STBTE_LINK_COLOR_DISALLOWED	stb/stb_tilemap_editor.h	/^#define STBTE_LINK_COLOR_DISALLOWED /;"	d
STBTE_LINK_COLOR_DRAWING	stb/stb_tilemap_editor.h	/^#define STBTE_LINK_COLOR_DRAWING /;"	d
STBTE_MAX_CATEGORIES	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_CATEGORIES /;"	d
STBTE_MAX_COPY	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_COPY /;"	d
STBTE_MAX_LAYERS	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_LAYERS /;"	d
STBTE_MAX_PROPERTIES	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_PROPERTIES /;"	d
STBTE_MAX_PROPERTIES	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_MAX_PROPERTIES /;"	d	file:
STBTE_MAX_TILEMAP_X	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_TILEMAP_X /;"	d
STBTE_MAX_TILEMAP_Y	stb/stb_tilemap_editor.h	/^#define STBTE_MAX_TILEMAP_Y /;"	d
STBTE_PROP_FLOAT_SCALE	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_FLOAT_SCALE(/;"	d
STBTE_PROP_FLOAT_SCALE	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_PROP_FLOAT_SCALE(/;"	d	file:
STBTE_PROP_MAX	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_MAX(/;"	d
STBTE_PROP_MAX	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_PROP_MAX(/;"	d	file:
STBTE_PROP_MIN	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_MIN(/;"	d
STBTE_PROP_MIN	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_PROP_MIN(/;"	d	file:
STBTE_PROP_NAME	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_NAME(/;"	d
STBTE_PROP_NAME	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_PROP_NAME(/;"	d	file:
STBTE_PROP_TYPE	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_TYPE(/;"	d
STBTE_PROP_TYPE	stb/tests/tilemap_editor_integration_example.c	/^#define STBTE_PROP_TYPE(/;"	d	file:
STBTE_PROP_bool	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_bool /;"	d
STBTE_PROP_disabled	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_disabled /;"	d
STBTE_PROP_float	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_float /;"	d
STBTE_PROP_int	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_int /;"	d
STBTE_PROP_none	stb/stb_tilemap_editor.h	/^#define STBTE_PROP_none /;"	d
STBTE_UNDO_BUFFER_BYTES	stb/stb_tilemap_editor.h	/^#define STBTE_UNDO_BUFFER_BYTES /;"	d
STBTE__BG	stb/stb_tilemap_editor.h	/^#define STBTE__BG(/;"	d
STBTE__BUTTON_HEIGHT	stb/stb_tilemap_editor.h	/^#define STBTE__BUTTON_HEIGHT /;"	d
STBTE__BUTTON_INTERNAL_SPACING	stb/stb_tilemap_editor.h	/^#define STBTE__BUTTON_INTERNAL_SPACING /;"	d
STBTE__FONT_HEIGHT	stb/stb_tilemap_editor.h	/^#define STBTE__FONT_HEIGHT /;"	d
STBTE__ID	stb/stb_tilemap_editor.h	/^#define STBTE__ID(/;"	d
STBTE__ID2	stb/stb_tilemap_editor.h	/^#define STBTE__ID2(/;"	d
STBTE__IDMAP	stb/stb_tilemap_editor.h	/^#define STBTE__IDMAP(/;"	d
STBTE__INACTIVE	stb/stb_tilemap_editor.h	/^#define STBTE__INACTIVE(/;"	d
STBTE__INDEX_FOR_ID	stb/stb_tilemap_editor.h	/^#define STBTE__INDEX_FOR_ID(/;"	d
STBTE__INDEX_FOR_STATE	stb/stb_tilemap_editor.h	/^#define STBTE__INDEX_FOR_STATE(/;"	d
STBTE__IS_ACTIVE	stb/stb_tilemap_editor.h	/^#define STBTE__IS_ACTIVE(/;"	d
STBTE__IS_HOT	stb/stb_tilemap_editor.h	/^#define STBTE__IS_HOT(/;"	d
STBTE__IS_MAP_ACTIVE	stb/stb_tilemap_editor.h	/^#define STBTE__IS_MAP_ACTIVE(/;"	d
STBTE__IS_MAP_HOT	stb/stb_tilemap_editor.h	/^#define STBTE__IS_MAP_HOT(/;"	d
STBTE__MAX_DELAYRECT	stb/stb_tilemap_editor.h	/^#define STBTE__MAX_DELAYRECT /;"	d
STBTE__NOTUSED	stb/stb_tilemap_editor.h	/^#define STBTE__NOTUSED(/;"	d
STBTE__NO_PROPS	stb/stb_tilemap_editor.h	/^#define STBTE__NO_PROPS$/;"	d
STBTE__NO_TILE	stb/stb_tilemap_editor.h	/^#define STBTE__NO_TILE /;"	d
STBTE__TEXTCOLOR	stb/stb_tilemap_editor.h	/^#define STBTE__TEXTCOLOR(/;"	d
STBTE__TOOLBAR_ICON_SIZE	stb/stb_tilemap_editor.h	/^#define STBTE__TOOLBAR_ICON_SIZE /;"	d
STBTE__TOOLBAR_PASTE_SIZE	stb/stb_tilemap_editor.h	/^#define STBTE__TOOLBAR_PASTE_SIZE /;"	d
STBTE__UNDO_BUFFER_COUNT	stb/stb_tilemap_editor.h	/^#define STBTE__UNDO_BUFFER_COUNT /;"	d
STBTE__base	stb/stb_tilemap_editor.h	/^   STBTE__base,$/;"	e	enum:__anonbd4d158d0303
STBTE__begin	stb/stb_tilemap_editor.h	/^   STBTE__begin,$/;"	e	enum:__anonbd4d158d1403
STBTE__categories	stb/stb_tilemap_editor.h	/^   STBTE__categories,                     \/\/ category selectors: param is category index$/;"	e	enum:__anonbd4d158d1603
STBTE__ccategory_button	stb/stb_tilemap_editor.h	/^   STBTE__ccategory_button,$/;"	e	enum:__anonbd4d158d0503
STBTE__cexpander	stb/stb_tilemap_editor.h	/^   STBTE__cexpander,$/;"	e	enum:__anonbd4d158d0503
STBTE__change	stb/stb_tilemap_editor.h	/^   STBTE__change,$/;"	e	enum:__anonbd4d158d1403
STBTE__clayer_button	stb/stb_tilemap_editor.h	/^   STBTE__clayer_button,$/;"	e	enum:__anonbd4d158d0503
STBTE__clayer_hide	stb/stb_tilemap_editor.h	/^   STBTE__clayer_hide,$/;"	e	enum:__anonbd4d158d0503
STBTE__clayer_lock	stb/stb_tilemap_editor.h	/^   STBTE__clayer_lock,$/;"	e	enum:__anonbd4d158d0503
STBTE__clayer_solo	stb/stb_tilemap_editor.h	/^   STBTE__clayer_solo,$/;"	e	enum:__anonbd4d158d0503
STBTE__cmapsize	stb/stb_tilemap_editor.h	/^   STBTE__cmapsize,$/;"	e	enum:__anonbd4d158d0503
STBTE__colorpick_id	stb/stb_tilemap_editor.h	/^   STBTE__colorpick_id,$/;"	e	enum:__anonbd4d158d1603
STBTE__cpanel	stb/stb_tilemap_editor.h	/^   STBTE__cpanel,$/;"	e	enum:__anonbd4d158d0503
STBTE__cpanel_sider	stb/stb_tilemap_editor.h	/^   STBTE__cpanel_sider,$/;"	e	enum:__anonbd4d158d0503
STBTE__cpanel_sizer	stb/stb_tilemap_editor.h	/^   STBTE__cpanel_sizer,$/;"	e	enum:__anonbd4d158d0503
STBTE__cscrollbar	stb/stb_tilemap_editor.h	/^   STBTE__cscrollbar,$/;"	e	enum:__anonbd4d158d0503
STBTE__ctoolbar	stb/stb_tilemap_editor.h	/^   STBTE__ctoolbar,$/;"	e	enum:__anonbd4d158d0503
STBTE__ctoolbar_button	stb/stb_tilemap_editor.h	/^   STBTE__ctoolbar_button,$/;"	e	enum:__anonbd4d158d0503
STBTE__disabled	stb/stb_tilemap_editor.h	/^   STBTE__disabled,$/;"	e	enum:__anonbd4d158d0403
STBTE__down	stb/stb_tilemap_editor.h	/^   STBTE__down,$/;"	e	enum:__anonbd4d158d0403
STBTE__end	stb/stb_tilemap_editor.h	/^   STBTE__end,$/;"	e	enum:__anonbd4d158d1403
STBTE__erase_all	stb/stb_tilemap_editor.h	/^   STBTE__erase_all = 2,$/;"	e	enum:__anonbd4d158d1703
STBTE__erase_any	stb/stb_tilemap_editor.h	/^   STBTE__erase_any = 1,$/;"	e	enum:__anonbd4d158d1703
STBTE__erase_brushonly	stb/stb_tilemap_editor.h	/^   STBTE__erase_brushonly = 0,$/;"	e	enum:__anonbd4d158d1703
STBTE__erase_none	stb/stb_tilemap_editor.h	/^   STBTE__erase_none = -1,$/;"	e	enum:__anonbd4d158d1703
STBTE__hide	stb/stb_tilemap_editor.h	/^   STBTE__solo, STBTE__hide, STBTE__lock, \/\/ layer controls: param is layer$/;"	e	enum:__anonbd4d158d1603
STBTE__idle	stb/stb_tilemap_editor.h	/^   STBTE__idle,$/;"	e	enum:__anonbd4d158d0403
STBTE__info	stb/stb_tilemap_editor.h	/^   STBTE__info,                           \/\/ info data$/;"	e	enum:__anonbd4d158d1603
STBTE__layer	stb/stb_tilemap_editor.h	/^   STBTE__layer,                          \/\/$/;"	e	enum:__anonbd4d158d1603
STBTE__leftdown	stb/stb_tilemap_editor.h	/^   STBTE__leftdown,$/;"	e	enum:__anonbd4d158d0b03
STBTE__leftup	stb/stb_tilemap_editor.h	/^   STBTE__leftup,$/;"	e	enum:__anonbd4d158d0b03
STBTE__lock	stb/stb_tilemap_editor.h	/^   STBTE__solo, STBTE__hide, STBTE__lock, \/\/ layer controls: param is layer$/;"	e	enum:__anonbd4d158d1603
STBTE__locked	stb/stb_tilemap_editor.h	/^   STBTE__locked,$/;"	e	enum:__anonbd4d158d1003
STBTE__map	stb/stb_tilemap_editor.h	/^   STBTE__map=1,$/;"	e	enum:__anonbd4d158d1603
STBTE__mousemove	stb/stb_tilemap_editor.h	/^   STBTE__mousemove,$/;"	e	enum:__anonbd4d158d0b03
STBTE__mousewheel	stb/stb_tilemap_editor.h	/^   STBTE__mousewheel,$/;"	e	enum:__anonbd4d158d0b03
STBTE__none	stb/stb_tilemap_editor.h	/^   STBTE__none,$/;"	e	enum:__anonbd4d158d1403
STBTE__num_color_aspects	stb/stb_tilemap_editor.h	/^   STBTE__num_color_aspects,$/;"	e	enum:__anonbd4d158d0303
STBTE__num_color_modes	stb/stb_tilemap_editor.h	/^   STBTE__num_color_modes,$/;"	e	enum:__anonbd4d158d0503
STBTE__num_color_states	stb/stb_tilemap_editor.h	/^   STBTE__num_color_states,$/;"	e	enum:__anonbd4d158d0403
STBTE__num_panel	stb/stb_tilemap_editor.h	/^   STBTE__num_panel,$/;"	e	enum:__anonbd4d158d0703
STBTE__num_tool	stb/stb_tilemap_editor.h	/^   STBTE__num_tool,$/;"	e	enum:__anonbd4d158d0903
STBTE__outline	stb/stb_tilemap_editor.h	/^   STBTE__outline,$/;"	e	enum:__anonbd4d158d0303
STBTE__over	stb/stb_tilemap_editor.h	/^   STBTE__over,$/;"	e	enum:__anonbd4d158d0403
STBTE__over_down	stb/stb_tilemap_editor.h	/^   STBTE__over_down,$/;"	e	enum:__anonbd4d158d0403
STBTE__paint	stb/stb_tilemap_editor.h	/^   STBTE__paint,$/;"	e	enum:__anonbd4d158d0b03
STBTE__palette	stb/stb_tilemap_editor.h	/^   STBTE__palette,                        \/\/ palette selectors: param is tile index$/;"	e	enum:__anonbd4d158d1603
STBTE__panel	stb/stb_tilemap_editor.h	/^   STBTE__panel,                          \/\/ panel background to hide map, and misc controls$/;"	e	enum:__anonbd4d158d1603
STBTE__panel_categories	stb/stb_tilemap_editor.h	/^   STBTE__panel_categories,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_colorpick	stb/stb_tilemap_editor.h	/^   STBTE__panel_colorpick,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_info	stb/stb_tilemap_editor.h	/^   STBTE__panel_info,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_layers	stb/stb_tilemap_editor.h	/^   STBTE__panel_layers,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_mover	stb/stb_tilemap_editor.h	/^   STBTE__panel_mover,                    \/\/ p1 is panel ID, p2 is destination side$/;"	e	enum:__anonbd4d158d1603
STBTE__panel_props	stb/stb_tilemap_editor.h	/^   STBTE__panel_props,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_sizer	stb/stb_tilemap_editor.h	/^   STBTE__panel_sizer,                    \/\/ param panel ID$/;"	e	enum:__anonbd4d158d1603
STBTE__panel_tiles	stb/stb_tilemap_editor.h	/^   STBTE__panel_tiles,$/;"	e	enum:__anonbd4d158d0703
STBTE__panel_toolbar	stb/stb_tilemap_editor.h	/^   STBTE__panel_toolbar,$/;"	e	enum:__anonbd4d158d0703
STBTE__prop_flag	stb/stb_tilemap_editor.h	/^   STBTE__prop_flag,$/;"	e	enum:__anonbd4d158d1603
STBTE__prop_float	stb/stb_tilemap_editor.h	/^   STBTE__prop_float,$/;"	e	enum:__anonbd4d158d1603
STBTE__prop_int	stb/stb_tilemap_editor.h	/^   STBTE__prop_int,$/;"	e	enum:__anonbd4d158d1603
STBTE__propmode_always	stb/stb_tilemap_editor.h	/^   STBTE__propmode_always,$/;"	e	enum:__anonbd4d158d0a03
STBTE__propmode_default	stb/stb_tilemap_editor.h	/^   STBTE__propmode_default,$/;"	e	enum:__anonbd4d158d0a03
STBTE__propmode_never	stb/stb_tilemap_editor.h	/^   STBTE__propmode_never,$/;"	e	enum:__anonbd4d158d0a03
STBTE__protected	stb/stb_tilemap_editor.h	/^   STBTE__protected,$/;"	e	enum:__anonbd4d158d1003
STBTE__redo_record	stb/stb_tilemap_editor.h	/^#define STBTE__redo_record /;"	d
STBTE__region	stb/stb_tilemap_editor.h	/^   STBTE__region,$/;"	e	enum:__anonbd4d158d1603
STBTE__rightdown	stb/stb_tilemap_editor.h	/^   STBTE__rightdown,$/;"	e	enum:__anonbd4d158d0b03
STBTE__rightup	stb/stb_tilemap_editor.h	/^   STBTE__rightup,$/;"	e	enum:__anonbd4d158d0b03
STBTE__scrollbar	stb/stb_tilemap_editor.h	/^   STBTE__scrollbar,                      \/\/ param is panel ID$/;"	e	enum:__anonbd4d158d1603
STBTE__scrollbar_id	stb/stb_tilemap_editor.h	/^   STBTE__scrollbar_id,$/;"	e	enum:__anonbd4d158d1603
STBTE__selected	stb/stb_tilemap_editor.h	/^   STBTE__selected,$/;"	e	enum:__anonbd4d158d0403
STBTE__selected_over	stb/stb_tilemap_editor.h	/^   STBTE__selected_over,$/;"	e	enum:__anonbd4d158d0403
STBTE__side_bottom	stb/stb_tilemap_editor.h	/^   STBTE__side_bottom,$/;"	e	enum:__anonbd4d158d0803
STBTE__side_left	stb/stb_tilemap_editor.h	/^   STBTE__side_left,$/;"	e	enum:__anonbd4d158d0803
STBTE__side_right	stb/stb_tilemap_editor.h	/^   STBTE__side_right,$/;"	e	enum:__anonbd4d158d0803
STBTE__side_top	stb/stb_tilemap_editor.h	/^   STBTE__side_top,$/;"	e	enum:__anonbd4d158d0803
STBTE__solo	stb/stb_tilemap_editor.h	/^   STBTE__solo, STBTE__hide, STBTE__lock, \/\/ layer controls: param is layer$/;"	e	enum:__anonbd4d158d1603
STBTE__text	stb/stb_tilemap_editor.h	/^   STBTE__text,$/;"	e	enum:__anonbd4d158d0303
STBTE__tick	stb/stb_tilemap_editor.h	/^   STBTE__tick,$/;"	e	enum:__anonbd4d158d0b03
STBTE__tool_brush	stb/stb_tilemap_editor.h	/^   STBTE__tool_brush,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_erase	stb/stb_tilemap_editor.h	/^   STBTE__tool_erase,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_eyedrop	stb/stb_tilemap_editor.h	/^   STBTE__tool_eyedrop,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_fill	stb/stb_tilemap_editor.h	/^   STBTE__tool_fill,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_link	stb/stb_tilemap_editor.h	/^   STBTE__tool_link,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_rect	stb/stb_tilemap_editor.h	/^   STBTE__tool_rect,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_redo	stb/stb_tilemap_editor.h	/^   STBTE__tool_redo,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_select	stb/stb_tilemap_editor.h	/^   STBTE__tool_select,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_showgrid	stb/stb_tilemap_editor.h	/^   STBTE__tool_showgrid,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_showlinks	stb/stb_tilemap_editor.h	/^   STBTE__tool_showlinks,$/;"	e	enum:__anonbd4d158d0903
STBTE__tool_undo	stb/stb_tilemap_editor.h	/^   STBTE__tool_undo,$/;"	e	enum:__anonbd4d158d0903
STBTE__toolbarA	stb/stb_tilemap_editor.h	/^   STBTE__toolbarA, STBTE__toolbarB,      \/\/ toolbar buttons: param is tool number$/;"	e	enum:__anonbd4d158d1603
STBTE__toolbarB	stb/stb_tilemap_editor.h	/^   STBTE__toolbarA, STBTE__toolbarB,      \/\/ toolbar buttons: param is tool number$/;"	e	enum:__anonbd4d158d1603
STBTE__undo_block	stb/stb_tilemap_editor.h	/^   STBTE__undo_block,$/;"	e	enum:__anonbd4d158d1103
STBTE__undo_junk	stb/stb_tilemap_editor.h	/^#define STBTE__undo_junk /;"	d
STBTE__undo_none	stb/stb_tilemap_editor.h	/^   STBTE__undo_none,$/;"	e	enum:__anonbd4d158d1103
STBTE__undo_record	stb/stb_tilemap_editor.h	/^   STBTE__undo_record,$/;"	e	enum:__anonbd4d158d1103
STBTE__undo_record	stb/stb_tilemap_editor.h	/^#define STBTE__undo_record /;"	d
STBTE__unlocked	stb/stb_tilemap_editor.h	/^   STBTE__unlocked,$/;"	e	enum:__anonbd4d158d1003
STBTE_act_copy	stb/stb_tilemap_editor.h	/^   STBTE_act_copy,$/;"	e	enum:stbte_action
STBTE_act_cut	stb/stb_tilemap_editor.h	/^   STBTE_act_cut,$/;"	e	enum:stbte_action
STBTE_act_paste	stb/stb_tilemap_editor.h	/^   STBTE_act_paste,$/;"	e	enum:stbte_action
STBTE_act_redo	stb/stb_tilemap_editor.h	/^   STBTE_act_redo,$/;"	e	enum:stbte_action
STBTE_act_toggle_grid	stb/stb_tilemap_editor.h	/^   STBTE_act_toggle_grid,$/;"	e	enum:stbte_action
STBTE_act_toggle_links	stb/stb_tilemap_editor.h	/^   STBTE_act_toggle_links,$/;"	e	enum:stbte_action
STBTE_act_undo	stb/stb_tilemap_editor.h	/^   STBTE_act_undo,$/;"	e	enum:stbte_action
STBTE_drawmode_deemphasize	stb/stb_tilemap_editor.h	/^   STBTE_drawmode_deemphasize = -1,$/;"	e	enum:__anonbd4d158d0103
STBTE_drawmode_emphasize	stb/stb_tilemap_editor.h	/^   STBTE_drawmode_emphasize   =  1,$/;"	e	enum:__anonbd4d158d0103
STBTE_drawmode_normal	stb/stb_tilemap_editor.h	/^   STBTE_drawmode_normal      =  0,$/;"	e	enum:__anonbd4d158d0103
STBTE_scroll_down	stb/stb_tilemap_editor.h	/^   STBTE_scroll_down,$/;"	e	enum:stbte_action
STBTE_scroll_left	stb/stb_tilemap_editor.h	/^   STBTE_scroll_left,$/;"	e	enum:stbte_action
STBTE_scroll_right	stb/stb_tilemap_editor.h	/^   STBTE_scroll_right,$/;"	e	enum:stbte_action
STBTE_scroll_up	stb/stb_tilemap_editor.h	/^   STBTE_scroll_up,$/;"	e	enum:stbte_action
STBTE_tool_brush	stb/stb_tilemap_editor.h	/^   STBTE_tool_brush,$/;"	e	enum:stbte_action
STBTE_tool_erase	stb/stb_tilemap_editor.h	/^   STBTE_tool_erase,$/;"	e	enum:stbte_action
STBTE_tool_eyedropper	stb/stb_tilemap_editor.h	/^   STBTE_tool_eyedropper,$/;"	e	enum:stbte_action
STBTE_tool_link	stb/stb_tilemap_editor.h	/^   STBTE_tool_link,$/;"	e	enum:stbte_action
STBTE_tool_rectangle	stb/stb_tilemap_editor.h	/^   STBTE_tool_rectangle,$/;"	e	enum:stbte_action
STBTE_tool_select	stb/stb_tilemap_editor.h	/^   STBTE_tool_select,$/;"	e	enum:stbte_action
STBTT_DEF	stb/stb_truetype.h	/^#define STBTT_DEF /;"	d
STBTT_FIX	stb/stb_truetype.h	/^#define STBTT_FIX /;"	d
STBTT_FIXMASK	stb/stb_truetype.h	/^#define STBTT_FIXMASK /;"	d
STBTT_FIXSHIFT	stb/stb_truetype.h	/^#define STBTT_FIXSHIFT /;"	d
STBTT_GPOS_TODO_assert	stb/stb_truetype.h	/^#define STBTT_GPOS_TODO_assert(/;"	d
STBTT_MACSTYLE_BOLD	stb/stb_truetype.h	/^#define STBTT_MACSTYLE_BOLD /;"	d
STBTT_MACSTYLE_DONTCARE	stb/stb_truetype.h	/^#define STBTT_MACSTYLE_DONTCARE /;"	d
STBTT_MACSTYLE_ITALIC	stb/stb_truetype.h	/^#define STBTT_MACSTYLE_ITALIC /;"	d
STBTT_MACSTYLE_NONE	stb/stb_truetype.h	/^#define STBTT_MACSTYLE_NONE /;"	d
STBTT_MACSTYLE_UNDERSCORE	stb/stb_truetype.h	/^#define STBTT_MACSTYLE_UNDERSCORE /;"	d
STBTT_MAC_EID_ARABIC	stb/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_CHINESE_TRAD	stb/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_GREEK	stb/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_HEBREW	stb/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_JAPANESE	stb/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_KOREAN	stb/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_ROMAN	stb/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_EID_RUSSIAN	stb/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon77ab60dd0c03
STBTT_MAC_LANG_ARABIC	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	stb/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_CHINESE_TRAD	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_DUTCH	stb/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_ENGLISH	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_FRENCH	stb/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_GERMAN	stb/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_HEBREW	stb/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_ITALIAN	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_JAPANESE	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_KOREAN	stb/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_RUSSIAN	stb/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_SPANISH	stb/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAC_LANG_SWEDISH	stb/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon77ab60dd0e03
STBTT_MAX_OVERSAMPLE	stb/stb_truetype.h	/^#define STBTT_MAX_OVERSAMPLE /;"	d
STBTT_MS_EID_SHIFTJIS	stb/stb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon77ab60dd0b03
STBTT_MS_EID_SYMBOL	stb/stb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon77ab60dd0b03
STBTT_MS_EID_UNICODE_BMP	stb/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon77ab60dd0b03
STBTT_MS_EID_UNICODE_FULL	stb/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon77ab60dd0b03
STBTT_MS_LANG_CHINESE	stb/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_DUTCH	stb/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_ENGLISH	stb/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_FRENCH	stb/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_GERMAN	stb/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_HEBREW	stb/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_ITALIAN	stb/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_JAPANESE	stb/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_KOREAN	stb/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_RUSSIAN	stb/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_SPANISH	stb/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon77ab60dd0d03
STBTT_MS_LANG_SWEDISH	stb/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon77ab60dd0d03
STBTT_PLATFORM_ID_ISO	stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon77ab60dd0903
STBTT_PLATFORM_ID_MAC	stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon77ab60dd0903
STBTT_PLATFORM_ID_MICROSOFT	stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon77ab60dd0903
STBTT_PLATFORM_ID_UNICODE	stb/stb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon77ab60dd0903
STBTT_POINT_SIZE	stb/stb_truetype.h	/^#define STBTT_POINT_SIZE(/;"	d
STBTT_RASTERIZER_VERSION	stb/stb_truetype.h	/^#define STBTT_RASTERIZER_VERSION /;"	d
STBTT_STATIC	stb/tests/stb_static.c	/^#define STBTT_STATIC$/;"	d	file:
STBTT_UNICODE_EID_ISO_10646	stb/stb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon77ab60dd0a03
STBTT_UNICODE_EID_UNICODE_1_0	stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon77ab60dd0a03
STBTT_UNICODE_EID_UNICODE_1_1	stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon77ab60dd0a03
STBTT_UNICODE_EID_UNICODE_2_0_BMP	stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon77ab60dd0a03
STBTT_UNICODE_EID_UNICODE_2_0_FULL	stb/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon77ab60dd0a03
STBTT__COMPARE	stb/stb_truetype.h	/^#define STBTT__COMPARE(/;"	d
STBTT__CSCTX_INIT	stb/stb_truetype.h	/^#define STBTT__CSCTX_INIT(/;"	d
STBTT__CSERR	stb/stb_truetype.h	/^#define STBTT__CSERR(/;"	d
STBTT__NOTUSED	stb/stb_truetype.h	/^#define STBTT__NOTUSED(/;"	d
STBTT__OVER_MASK	stb/stb_truetype.h	/^#define STBTT__OVER_MASK /;"	d
STBTT_acos	stb/stb_truetype.h	/^   #define STBTT_acos(/;"	d
STBTT_assert	stb/stb_truetype.h	/^   #define STBTT_assert(/;"	d
STBTT_cos	stb/stb_truetype.h	/^   #define STBTT_cos(/;"	d
STBTT_fabs	stb/stb_truetype.h	/^   #define STBTT_fabs(/;"	d
STBTT_fmod	stb/stb_truetype.h	/^   #define STBTT_fmod(/;"	d
STBTT_free	stb/stb_truetype.h	/^   #define STBTT_free(/;"	d
STBTT_iceil	stb/stb_truetype.h	/^   #define STBTT_iceil(/;"	d
STBTT_ifloor	stb/stb_truetype.h	/^   #define STBTT_ifloor(/;"	d
STBTT_malloc	stb/stb_truetype.h	/^   #define STBTT_malloc(/;"	d
STBTT_max	stb/stb_truetype.h	/^#define STBTT_max(/;"	d
STBTT_memcpy	stb/stb_truetype.h	/^   #define STBTT_memcpy /;"	d
STBTT_memset	stb/stb_truetype.h	/^   #define STBTT_memset /;"	d
STBTT_min	stb/stb_truetype.h	/^#define STBTT_min(/;"	d
STBTT_pow	stb/stb_truetype.h	/^   #define STBTT_pow(/;"	d
STBTT_sqrt	stb/stb_truetype.h	/^   #define STBTT_sqrt(/;"	d
STBTT_strlen	stb/stb_truetype.h	/^   #define STBTT_strlen(/;"	d
STBTT_vcubic	stb/stb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anon77ab60dd0603
STBTT_vcurve	stb/stb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anon77ab60dd0603
STBTT_vline	stb/stb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anon77ab60dd0603
STBTT_vmove	stb/stb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anon77ab60dd0603
STBVF_count	stb/stb_voxel_render.h	/^   STBVF_count,$/;"	e	enum:__anonc1feb0a80b03
STBVF_d	stb/stb_voxel_render.h	/^   STBVF_d,$/;"	e	enum:__anonc1feb0a80b03
STBVF_e	stb/stb_voxel_render.h	/^   STBVF_e,$/;"	e	enum:__anonc1feb0a80b03
STBVF_ed	stb/stb_voxel_render.h	/^   STBVF_ed,$/;"	e	enum:__anonc1feb0a80b03
STBVF_ed_wall	stb/stb_voxel_render.h	/^   STBVF_ed_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_eu	stb/stb_voxel_render.h	/^   STBVF_eu,$/;"	e	enum:__anonc1feb0a80b03
STBVF_eu_wall	stb/stb_voxel_render.h	/^   STBVF_eu_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_n	stb/stb_voxel_render.h	/^   STBVF_n,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nd	stb/stb_voxel_render.h	/^   STBVF_nd,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nd_wall	stb/stb_voxel_render.h	/^   STBVF_nd_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_ne_d	stb/stb_voxel_render.h	/^   STBVF_ne_d,$/;"	e	enum:__anonc1feb0a80b03
STBVF_ne_u	stb/stb_voxel_render.h	/^   STBVF_ne_u,$/;"	e	enum:__anonc1feb0a80b03
STBVF_ne_u_cross	stb/stb_voxel_render.h	/^   STBVF_ne_u_cross,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nu	stb/stb_voxel_render.h	/^   STBVF_nu,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nu_wall	stb/stb_voxel_render.h	/^   STBVF_nu_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nw_d	stb/stb_voxel_render.h	/^   STBVF_nw_d,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nw_u	stb/stb_voxel_render.h	/^   STBVF_nw_u,$/;"	e	enum:__anonc1feb0a80b03
STBVF_nw_u_cross	stb/stb_voxel_render.h	/^   STBVF_nw_u_cross,$/;"	e	enum:__anonc1feb0a80b03
STBVF_s	stb/stb_voxel_render.h	/^   STBVF_s,$/;"	e	enum:__anonc1feb0a80b03
STBVF_sd	stb/stb_voxel_render.h	/^   STBVF_sd,$/;"	e	enum:__anonc1feb0a80b03
STBVF_sd_wall	stb/stb_voxel_render.h	/^   STBVF_sd_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_se_d	stb/stb_voxel_render.h	/^   STBVF_se_d = STBVF_sd,$/;"	e	enum:__anonc1feb0a80b03
STBVF_se_u	stb/stb_voxel_render.h	/^   STBVF_se_u = STBVF_su,$/;"	e	enum:__anonc1feb0a80b03
STBVF_se_u_cross	stb/stb_voxel_render.h	/^   STBVF_se_u_cross,$/;"	e	enum:__anonc1feb0a80b03
STBVF_su	stb/stb_voxel_render.h	/^   STBVF_su,$/;"	e	enum:__anonc1feb0a80b03
STBVF_su_wall	stb/stb_voxel_render.h	/^   STBVF_su_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_sw_d	stb/stb_voxel_render.h	/^   STBVF_sw_d,$/;"	e	enum:__anonc1feb0a80b03
STBVF_sw_u	stb/stb_voxel_render.h	/^   STBVF_sw_u,$/;"	e	enum:__anonc1feb0a80b03
STBVF_sw_u_cross	stb/stb_voxel_render.h	/^   STBVF_sw_u_cross,$/;"	e	enum:__anonc1feb0a80b03
STBVF_u	stb/stb_voxel_render.h	/^   STBVF_u,$/;"	e	enum:__anonc1feb0a80b03
STBVF_w	stb/stb_voxel_render.h	/^   STBVF_w,$/;"	e	enum:__anonc1feb0a80b03
STBVF_wd	stb/stb_voxel_render.h	/^   STBVF_wd,$/;"	e	enum:__anonc1feb0a80b03
STBVF_wd_wall	stb/stb_voxel_render.h	/^   STBVF_wd_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVF_wu	stb/stb_voxel_render.h	/^   STBVF_wu,$/;"	e	enum:__anonc1feb0a80b03
STBVF_wu_wall	stb/stb_voxel_render.h	/^   STBVF_wu_wall,$/;"	e	enum:__anonc1feb0a80b03
STBVOX_BLOCKTYPE_EMPTY	stb/stb_voxel_render.h	/^#define STBVOX_BLOCKTYPE_EMPTY /;"	d
STBVOX_BLOCKTYPE_HOLE	stb/stb_voxel_render.h	/^#define STBVOX_BLOCKTYPE_HOLE /;"	d
STBVOX_COLOR_TEX1_ENABLE	stb/stb_voxel_render.h	/^#define STBVOX_COLOR_TEX1_ENABLE /;"	d
STBVOX_COLOR_TEX2_ENABLE	stb/stb_voxel_render.h	/^#define STBVOX_COLOR_TEX2_ENABLE /;"	d
STBVOX_CONFIG_DISABLE_TEX2	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_DISABLE_TEX2$/;"	d	file:
STBVOX_CONFIG_FOG_SMOOTHSTEP	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_FOG_SMOOTHSTEP$/;"	d	file:
STBVOX_CONFIG_MODE	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_MODE /;"	d	file:
STBVOX_CONFIG_MODE	stb/tests/test_c_compilation.c	/^#define STBVOX_CONFIG_MODE /;"	d	file:
STBVOX_CONFIG_MODE	stb/tests/test_cpp_compilation.cpp	/^#define STBVOX_CONFIG_MODE /;"	d	file:
STBVOX_CONFIG_OPENGL_MODELVIEW	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_OPENGL_MODELVIEW$/;"	d	file:
STBVOX_CONFIG_PRECISION_Z	stb/stb_voxel_render.h	/^#define STBVOX_CONFIG_PRECISION_Z /;"	d
STBVOX_CONFIG_PREFER_TEXBUFFER	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_PREFER_TEXBUFFER$/;"	d	file:
STBVOX_CONFIG_ROTATION_IN_LIGHTING	stb/tests/caveview/cave_mesher.c	/^#define STBVOX_CONFIG_ROTATION_IN_LIGHTING$/;"	d	file:
STBVOX_FACE_NONE	stb/stb_voxel_render.h	/^#define STBVOX_FACE_NONE /;"	d
STBVOX_FACE_count	stb/stb_voxel_render.h	/^   STBVOX_FACE_count,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_down	stb/stb_voxel_render.h	/^   STBVOX_FACE_down,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_east	stb/stb_voxel_render.h	/^   STBVOX_FACE_east,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_north	stb/stb_voxel_render.h	/^   STBVOX_FACE_north,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_south	stb/stb_voxel_render.h	/^   STBVOX_FACE_south,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_up	stb/stb_voxel_render.h	/^   STBVOX_FACE_up,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FACE_west	stb/stb_voxel_render.h	/^   STBVOX_FACE_west,$/;"	e	enum:__anonc1feb0a80403
STBVOX_FT_count	stb/stb_voxel_render.h	/^   STBVOX_FT_count$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_diag_012	stb/stb_voxel_render.h	/^   STBVOX_FT_diag_012,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_diag_013	stb/stb_voxel_render.h	/^   STBVOX_FT_diag_013,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_diag_023	stb/stb_voxel_render.h	/^   STBVOX_FT_diag_023,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_diag_123	stb/stb_voxel_render.h	/^   STBVOX_FT_diag_123,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_force	stb/stb_voxel_render.h	/^   STBVOX_FT_force   , \/\/ can't be covered up, used for internal faces, also hides nothing$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_lower	stb/stb_voxel_render.h	/^   STBVOX_FT_lower   ,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_none	stb/stb_voxel_render.h	/^   STBVOX_FT_none    ,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_partial	stb/stb_voxel_render.h	/^   STBVOX_FT_partial , \/\/ only covered by solid, never covers anything else$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_solid	stb/stb_voxel_render.h	/^   STBVOX_FT_solid   ,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_FT_upper	stb/stb_voxel_render.h	/^   STBVOX_FT_upper   ,$/;"	e	enum:__anonc1feb0a80e03
STBVOX_GEOM_ceil_slope_north_is_bottom	stb/stb_voxel_render.h	/^   STBVOX_GEOM_ceil_slope_north_is_bottom,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_ceil_slope_north_is_bottom_as_wall_UNIMPLEMENTED	stb/stb_voxel_render.h	/^   STBVOX_GEOM_ceil_slope_north_is_bottom_as_wall_UNIMPLEMENTED,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_ceil_vheight_03	stb/stb_voxel_render.h	/^   STBVOX_GEOM_ceil_vheight_03,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_ceil_vheight_12	stb/stb_voxel_render.h	/^   STBVOX_GEOM_ceil_vheight_12,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_count	stb/stb_voxel_render.h	/^   STBVOX_GEOM_count, \/\/ number of geom cases$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_crossed_pair	stb/stb_voxel_render.h	/^   STBVOX_GEOM_crossed_pair,    \/\/ corner-to-corner pairs, with normal vector bumped upwards$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_empty	stb/stb_voxel_render.h	/^   STBVOX_GEOM_empty,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_floor_slope_north_is_top	stb/stb_voxel_render.h	/^   STBVOX_GEOM_floor_slope_north_is_top,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_floor_slope_north_is_top_as_wall_UNIMPLEMENTED	stb/stb_voxel_render.h	/^   STBVOX_GEOM_floor_slope_north_is_top_as_wall_UNIMPLEMENTED,   \/\/ same as floor_slope above,/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_floor_vheight_03	stb/stb_voxel_render.h	/^   STBVOX_GEOM_floor_vheight_03 = 12,  \/\/ diagonal is SW-NE$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_floor_vheight_12	stb/stb_voxel_render.h	/^   STBVOX_GEOM_floor_vheight_12,       \/\/ diagonal is SE-NW$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_force	stb/stb_voxel_render.h	/^   STBVOX_GEOM_force,           \/\/ like GEOM_transp, but faces visible even if neighbor is sam/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_knockout	stb/stb_voxel_render.h	/^   STBVOX_GEOM_knockout,  \/\/ creates a hole in the mesh$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_slab_lower	stb/stb_voxel_render.h	/^   STBVOX_GEOM_slab_lower,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_slab_upper	stb/stb_voxel_render.h	/^   STBVOX_GEOM_slab_upper,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_solid	stb/stb_voxel_render.h	/^   STBVOX_GEOM_solid,$/;"	e	enum:__anonc1feb0a80303
STBVOX_GEOM_transp	stb/stb_voxel_render.h	/^   STBVOX_GEOM_transp,    \/\/ solid geometry, but transparent contents so neighbors generate no/;"	e	enum:__anonc1feb0a80303
STBVOX_GET_GEO	stb/stb_voxel_render.h	/^#define STBVOX_GET_GEO(/;"	d
STBVOX_GET_LIGHTING	stb/stb_voxel_render.h	/^            #define STBVOX_GET_LIGHTING(/;"	d
STBVOX_HEIGHTS	stb/stb_voxel_render.h	/^   #define STBVOX_HEIGHTS(/;"	d
STBVOX_ICONFIG_FACE1_1	stb/stb_voxel_render.h	/^   #define STBVOX_ICONFIG_FACE1_1$/;"	d
STBVOX_ICONFIG_FACE_ATTRIBUTE	stb/stb_voxel_render.h	/^#define STBVOX_ICONFIG_FACE_ATTRIBUTE$/;"	d
STBVOX_ICONFIG_GLSL	stb/stb_voxel_render.h	/^#define STBVOX_ICONFIG_GLSL$/;"	d
STBVOX_ICONFIG_OPENGL_3_1_COMPATIBILITY	stb/stb_voxel_render.h	/^#define STBVOX_ICONFIG_OPENGL_3_1_COMPATIBILITY$/;"	d
STBVOX_ICONFIG_UNTEXTURED	stb/stb_voxel_render.h	/^   #define STBVOX_ICONFIG_UNTEXTURED$/;"	d
STBVOX_ICONFIG_VERTEX_32	stb/stb_voxel_render.h	/^   #define STBVOX_ICONFIG_VERTEX_32$/;"	d
STBVOX_LIGHTING_ROUNDOFF	stb/stb_voxel_render.h	/^            #define STBVOX_LIGHTING_ROUNDOFF /;"	d
STBVOX_MAKE_COLOR	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_COLOR(/;"	d
STBVOX_MAKE_FACE_MASK	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_FACE_MASK(/;"	d
STBVOX_MAKE_GEOMETRY	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_GEOMETRY(/;"	d
STBVOX_MAKE_LIGHTING	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_LIGHTING(/;"	d
STBVOX_MAKE_LIGHTING_EXT	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_LIGHTING_EXT(/;"	d
STBVOX_MAKE_MATROT	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_MATROT(/;"	d
STBVOX_MAKE_PACKED_COMPACT	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_PACKED_COMPACT(/;"	d
STBVOX_MAKE_SIDE_TEXROT	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_SIDE_TEXROT(/;"	d
STBVOX_MAKE_TEX2_REPLACE	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEX2_REPLACE(/;"	d
STBVOX_MAKE_TEXLERP	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP(/;"	d
STBVOX_MAKE_TEXLERP1	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP1(/;"	d
STBVOX_MAKE_TEXLERP2	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP2(/;"	d
STBVOX_MAKE_TEXLERP_FACE3	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP_FACE3(/;"	d
STBVOX_MAKE_TEXLERP_SIMPLE	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP_SIMPLE(/;"	d
STBVOX_MAKE_TEXLERP_VERT3	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_TEXLERP_VERT3(/;"	d
STBVOX_MAKE_VHEIGHT	stb/stb_voxel_render.h	/^#define STBVOX_MAKE_VHEIGHT(/;"	d
STBVOX_MAX_GEOM	stb/stb_voxel_render.h	/^#define STBVOX_MAX_GEOM /;"	d
STBVOX_MAX_MESHES	stb/stb_voxel_render.h	/^#define STBVOX_MAX_MESHES /;"	d
STBVOX_MAX_MESH_SLOTS	stb/stb_voxel_render.h	/^#define STBVOX_MAX_MESH_SLOTS /;"	d
STBVOX_NOTUSED	stb/stb_voxel_render.h	/^   #define STBVOX_NOTUSED(/;"	d
STBVOX_NUM_ROTATION	stb/stb_voxel_render.h	/^#define STBVOX_NUM_ROTATION /;"	d
STBVOX_ROTATE	stb/stb_voxel_render.h	/^#define STBVOX_ROTATE(/;"	d
STBVOX_RSQRT2	stb/stb_voxel_render.h	/^#define STBVOX_RSQRT2 /;"	d
STBVOX_RSQRT3	stb/stb_voxel_render.h	/^#define STBVOX_RSQRT3 /;"	d
STBVOX_SHADER_VERSION	stb/stb_voxel_render.h	/^   #define STBVOX_SHADER_VERSION /;"	d
STBVOX_TEXBUF	stb/stb_voxel_render.h	/^#define STBVOX_TEXBUF /;"	d
STBVOX_TEXLERP3_0_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_0_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_1_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_1_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_2_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_2_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_3_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_3_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_4_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_4_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_5_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_5_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_6_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_6_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP3_7_8	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP3_7_8,$/;"	e	enum:__anonc1feb0a80903
STBVOX_TEXLERP_BASE_0	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_BASE_0,    \/\/ 0.0$/;"	e	enum:__anonc1feb0a80803
STBVOX_TEXLERP_BASE_1	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_BASE_1     \/\/ 1.0$/;"	e	enum:__anonc1feb0a80803
STBVOX_TEXLERP_BASE_2_7	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_BASE_2_7,  \/\/ 2\/7$/;"	e	enum:__anonc1feb0a80803
STBVOX_TEXLERP_BASE_5_7	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_BASE_5_7,  \/\/ 4\/7$/;"	e	enum:__anonc1feb0a80803
STBVOX_TEXLERP_FACE_0	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_FACE_0,$/;"	e	enum:__anonc1feb0a80703
STBVOX_TEXLERP_FACE_1	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_FACE_1,$/;"	e	enum:__anonc1feb0a80703
STBVOX_TEXLERP_FACE_half	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_FACE_half,$/;"	e	enum:__anonc1feb0a80703
STBVOX_TEXLERP_FACE_use_vert	stb/stb_voxel_render.h	/^   STBVOX_TEXLERP_FACE_use_vert,$/;"	e	enum:__anonc1feb0a80703
STBVOX_UNIFORM_TYPE_none	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_TYPE_none,$/;"	e	enum:__anonc1feb0a80203
STBVOX_UNIFORM_TYPE_sampler	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_TYPE_sampler,$/;"	e	enum:__anonc1feb0a80203
STBVOX_UNIFORM_TYPE_vec2	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_TYPE_vec2,$/;"	e	enum:__anonc1feb0a80203
STBVOX_UNIFORM_TYPE_vec3	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_TYPE_vec3,$/;"	e	enum:__anonc1feb0a80203
STBVOX_UNIFORM_TYPE_vec4	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_TYPE_vec4,$/;"	e	enum:__anonc1feb0a80203
STBVOX_UNIFORM_ambient	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_ambient,     \/\/  n      lighting & fog info, see above$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_camera_pos	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_camera_pos,  \/\/  Y      camera position in global voxel space (for lighting /;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_color_table	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_color_table, \/\/  Y      64 vec4 RGBA values; a default palette is provided; /;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_count	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_count,$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_face_data	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_face_data,   \/\/  n      the sampler with the face texture buffer$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_normals	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_normals,     \/\/  Y  Y   table of normals, internal-only$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_tex_array	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_tex_array,   \/\/  n      an array of two texture samplers containing the two /;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_texgen	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_texgen,      \/\/  Y  Y   table of texgen vectors, internal-only$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_texscale	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_texscale,    \/\/  Y      a table of texture properties, see above$/;"	e	enum:__anonc1feb0a80103
STBVOX_UNIFORM_transform	stb/stb_voxel_render.h	/^   STBVOX_UNIFORM_transform,   \/\/  n      the transform data from stbvox_get_transform$/;"	e	enum:__anonc1feb0a80103
STBVOX_USE_PACKED	stb/stb_voxel_render.h	/^      #define STBVOX_USE_PACKED(/;"	d
STBVOX_VERTEX_HEIGHT_0	stb/stb_voxel_render.h	/^   STBVOX_VERTEX_HEIGHT_0,$/;"	e	enum:__anonc1feb0a80603
STBVOX_VERTEX_HEIGHT_1	stb/stb_voxel_render.h	/^   STBVOX_VERTEX_HEIGHT_1,$/;"	e	enum:__anonc1feb0a80603
STBVOX_VERTEX_HEIGHT_half	stb/stb_voxel_render.h	/^   STBVOX_VERTEX_HEIGHT_half,$/;"	e	enum:__anonc1feb0a80603
STBVOX_VERTEX_HEIGHT_one_and_a_half	stb/stb_voxel_render.h	/^   STBVOX_VERTEX_HEIGHT_one_and_a_half,$/;"	e	enum:__anonc1feb0a80603
STBVXDEC	stb/stb_voxel_render.h	/^#define STBVXDEC /;"	d
STBV_CDECL	stb/stb_vorbis.c	/^#define STBV_CDECL /;"	d	file:
STBV_CDECL	stb/stb_vorbis.c	/^#define STBV_CDECL$/;"	d	file:
STBV_NOTUSED	stb/stb_vorbis.c	/^#define STBV_NOTUSED(/;"	d	file:
STBVorbisError	stb/stb_vorbis.c	/^enum STBVorbisError$/;"	g	file:
STBWGE__none	stb/tests/oversample/stb_wingraph.h	/^   STBWGE__none=0,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_activate	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_activate,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_char	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_char,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_create	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_create,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_create_postshow	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_create_postshow,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_deactivate	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_deactivate,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_destroy	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_destroy,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_draw	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_draw,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_keydown	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_keydown,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_keyup	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_keyup,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_leftdown	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_leftdown  , STBWGE_leftup  ,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_leftup	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_leftdown  , STBWGE_leftup  ,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_middledown	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_middledown, STBWGE_middleup,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_middleup	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_middledown, STBWGE_middleup,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_mousemove	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_mousemove ,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_mousewheel	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_mousewheel,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_rightdown	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_rightdown , STBWGE_rightup ,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_rightup	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_rightdown , STBWGE_rightup ,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_size	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_size,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_syskeydown	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_syskeydown,$/;"	e	enum:__anon9f50dc2a0203
STBWGE_syskeyup	stb/tests/oversample/stb_wingraph.h	/^   STBWGE_syskeyup,$/;"	e	enum:__anon9f50dc2a0203
STBWINGRAPH_do_not_show	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_do_not_show,$/;"	e	enum:__anon9f50dc2a0103
STBWINGRAPH_unprocessed	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_unprocessed = -(1 << 24),$/;"	e	enum:__anon9f50dc2a0103
STBWINGRAPH_update_exit	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_update_exit,$/;"	e	enum:__anon9f50dc2a0103
STBWINGRAPH_update_pause	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_update_pause,$/;"	e	enum:__anon9f50dc2a0103
STBWINGRAPH_winproc_exit	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_winproc_exit,$/;"	e	enum:__anon9f50dc2a0103
STBWINGRAPH_winproc_update	stb/tests/oversample/stb_wingraph.h	/^   STBWINGRAPH_winproc_update,$/;"	e	enum:__anon9f50dc2a0103
STB_	stb/deprecated/stb.h	/^#define STB_(/;"	d
STB_	stb/tests/prerelease/stb_lib.h	/^#define STB_(/;"	d
STB_ADLER32_SEED	stb/deprecated/stb.h	/^#define STB_ADLER32_SEED /;"	d
STB_ADLER32_SEED	stb/tests/prerelease/stb_lib.h	/^#define STB_ADLER32_SEED /;"	d
STB_BGIO_READ_ALL	stb/deprecated/stb.h	/^#define STB_BGIO_READ_ALL /;"	d
STB_BUCKET_SIZE	stb/deprecated/stb.h	/^#define STB_BUCKET_SIZE /;"	d
STB_BUFFER_SIZE	stb/stb_vorbis.c	/^   #define STB_BUFFER_SIZE /;"	d	file:
STB_COMPRESS_DXT_BLOCK	stb/stb_dxt.h	/^#define STB_COMPRESS_DXT_BLOCK$/;"	d
STB_CONNECTED_COMPONENTS_IMPLEMENTATION	stb/tests/grid_reachability.c	/^#define STB_CONNECTED_COMPONENTS_IMPLEMENTATION$/;"	d	file:
STB_CONNECTED_COMPONENTS_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_CONNECTED_COMPONENTS_IMPLEMENTATION$/;"	d	file:
STB_CRC32_SEED	stb/deprecated/stb.h	/^#define STB_CRC32_SEED /;"	d
STB_CRC32_SEED	stb/tests/prerelease/stb_lib.h	/^#define STB_CRC32_SEED /;"	d
STB_C_LEXER_DEFINITIONS	stb/stb_c_lexer.h	/^#define STB_C_LEXER_DEFINITIONS /;"	d
STB_C_LEXER_DEFINITIONS	stb/tests/c_lexer_test.c	/^#define STB_C_LEXER_DEFINITIONS /;"	d	file:
STB_C_LEXER_DEFINITIONS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEXER_DEFINITIONS /;"	d	file:
STB_C_LEXER_DEFINITIONS	stb/tests/test_c_lexer.c	/^#define STB_C_LEXER_DEFINITIONS /;"	d	file:
STB_C_LEXER_IMPLEMENTATION	stb/tests/c_lexer_test.c	/^#define STB_C_LEXER_IMPLEMENTATION$/;"	d	file:
STB_C_LEXER_IMPLEMENTATION	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEXER_IMPLEMENTATION$/;"	d	file:
STB_C_LEXER_IMPLEMENTATIOn	stb/tests/test_c_compilation.c	/^#define STB_C_LEXER_IMPLEMENTATIOn$/;"	d	file:
STB_C_LEXER_IMPLEMENTATIOn	stb/tests/test_cpp_compilation.cpp	/^#define STB_C_LEXER_IMPLEMENTATIOn$/;"	d	file:
STB_C_LEXER_SELF_TEST	stb/tests/c_lexer_test.c	/^#define STB_C_LEXER_SELF_TEST$/;"	d	file:
STB_C_LEXER_SELF_TEST	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEXER_SELF_TEST$/;"	d	file:
STB_C_LEX_0_IS_EOF	stb/stb_c_lexer.h	/^#define STB_C_LEX_0_IS_EOF /;"	d
STB_C_LEX_0_IS_EOF	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_0_IS_EOF /;"	d	file:
STB_C_LEX_0_IS_EOF	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_0_IS_EOF /;"	d	file:
STB_C_LEX_0_IS_EOF	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_0_IS_EOF /;"	d	file:
STB_C_LEX_C99_HEX_FLOATS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C99_HEX_FLOATS /;"	d
STB_C_LEX_C99_HEX_FLOATS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C99_HEX_FLOATS /;"	d	file:
STB_C_LEX_C99_HEX_FLOATS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C99_HEX_FLOATS /;"	d	file:
STB_C_LEX_C99_HEX_FLOATS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C99_HEX_FLOATS /;"	d	file:
STB_C_LEX_CPP_COMMENTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_CPP_COMMENTS /;"	d
STB_C_LEX_CPP_COMMENTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_CPP_COMMENTS /;"	d	file:
STB_C_LEX_CPP_COMMENTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_CPP_COMMENTS /;"	d	file:
STB_C_LEX_CPP_COMMENTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_CPP_COMMENTS /;"	d	file:
STB_C_LEX_C_ARITHEQ	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_ARITHEQ /;"	d
STB_C_LEX_C_ARITHEQ	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_ARITHEQ /;"	d	file:
STB_C_LEX_C_ARITHEQ	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_ARITHEQ /;"	d	file:
STB_C_LEX_C_ARITHEQ	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_ARITHEQ /;"	d	file:
STB_C_LEX_C_ARROW	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_ARROW /;"	d
STB_C_LEX_C_ARROW	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_ARROW /;"	d	file:
STB_C_LEX_C_ARROW	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_ARROW /;"	d	file:
STB_C_LEX_C_ARROW	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_ARROW /;"	d	file:
STB_C_LEX_C_BITWISEEQ	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_BITWISEEQ /;"	d
STB_C_LEX_C_BITWISEEQ	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_BITWISEEQ /;"	d	file:
STB_C_LEX_C_BITWISEEQ	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_BITWISEEQ /;"	d	file:
STB_C_LEX_C_BITWISEEQ	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_BITWISEEQ /;"	d	file:
STB_C_LEX_C_CHARS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_CHARS /;"	d
STB_C_LEX_C_CHARS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_CHARS /;"	d	file:
STB_C_LEX_C_CHARS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_CHARS /;"	d	file:
STB_C_LEX_C_CHARS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_CHARS /;"	d	file:
STB_C_LEX_C_COMMENTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_COMMENTS /;"	d
STB_C_LEX_C_COMMENTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_COMMENTS /;"	d	file:
STB_C_LEX_C_COMMENTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_COMMENTS /;"	d	file:
STB_C_LEX_C_COMMENTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_COMMENTS /;"	d	file:
STB_C_LEX_C_COMPARISONS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_COMPARISONS /;"	d
STB_C_LEX_C_COMPARISONS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_COMPARISONS /;"	d	file:
STB_C_LEX_C_COMPARISONS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_COMPARISONS /;"	d	file:
STB_C_LEX_C_COMPARISONS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_COMPARISONS /;"	d	file:
STB_C_LEX_C_DECIMAL_FLOATS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_DECIMAL_FLOATS /;"	d
STB_C_LEX_C_DECIMAL_FLOATS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_DECIMAL_FLOATS /;"	d	file:
STB_C_LEX_C_DECIMAL_FLOATS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_DECIMAL_FLOATS /;"	d	file:
STB_C_LEX_C_DECIMAL_FLOATS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_DECIMAL_FLOATS /;"	d	file:
STB_C_LEX_C_DECIMAL_INTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_DECIMAL_INTS /;"	d
STB_C_LEX_C_DECIMAL_INTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_DECIMAL_INTS /;"	d	file:
STB_C_LEX_C_DECIMAL_INTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_DECIMAL_INTS /;"	d	file:
STB_C_LEX_C_DECIMAL_INTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_DECIMAL_INTS /;"	d	file:
STB_C_LEX_C_DQ_STRINGS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_DQ_STRINGS /;"	d
STB_C_LEX_C_DQ_STRINGS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_DQ_STRINGS /;"	d	file:
STB_C_LEX_C_DQ_STRINGS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_DQ_STRINGS /;"	d	file:
STB_C_LEX_C_DQ_STRINGS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_DQ_STRINGS /;"	d	file:
STB_C_LEX_C_HEX_INTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_HEX_INTS /;"	d
STB_C_LEX_C_HEX_INTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_HEX_INTS /;"	d	file:
STB_C_LEX_C_HEX_INTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_HEX_INTS /;"	d	file:
STB_C_LEX_C_HEX_INTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_HEX_INTS /;"	d	file:
STB_C_LEX_C_IDENTIFIERS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_IDENTIFIERS /;"	d
STB_C_LEX_C_IDENTIFIERS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_IDENTIFIERS /;"	d	file:
STB_C_LEX_C_IDENTIFIERS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_IDENTIFIERS /;"	d	file:
STB_C_LEX_C_IDENTIFIERS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_IDENTIFIERS /;"	d	file:
STB_C_LEX_C_INCREMENTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_INCREMENTS /;"	d
STB_C_LEX_C_INCREMENTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_INCREMENTS /;"	d	file:
STB_C_LEX_C_INCREMENTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_INCREMENTS /;"	d	file:
STB_C_LEX_C_INCREMENTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_INCREMENTS /;"	d	file:
STB_C_LEX_C_LOGICAL	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_LOGICAL /;"	d
STB_C_LEX_C_LOGICAL	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_LOGICAL /;"	d	file:
STB_C_LEX_C_LOGICAL	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_LOGICAL /;"	d	file:
STB_C_LEX_C_LOGICAL	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_LOGICAL /;"	d	file:
STB_C_LEX_C_OCTAL_INTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_OCTAL_INTS /;"	d
STB_C_LEX_C_OCTAL_INTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_OCTAL_INTS /;"	d	file:
STB_C_LEX_C_OCTAL_INTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_OCTAL_INTS /;"	d	file:
STB_C_LEX_C_OCTAL_INTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_OCTAL_INTS /;"	d	file:
STB_C_LEX_C_SHIFTS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_SHIFTS /;"	d
STB_C_LEX_C_SHIFTS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_SHIFTS /;"	d	file:
STB_C_LEX_C_SHIFTS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_SHIFTS /;"	d	file:
STB_C_LEX_C_SHIFTS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_SHIFTS /;"	d	file:
STB_C_LEX_C_SQ_STRINGS	stb/stb_c_lexer.h	/^#define STB_C_LEX_C_SQ_STRINGS /;"	d
STB_C_LEX_C_SQ_STRINGS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_C_SQ_STRINGS /;"	d	file:
STB_C_LEX_C_SQ_STRINGS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_C_SQ_STRINGS /;"	d	file:
STB_C_LEX_C_SQ_STRINGS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_C_SQ_STRINGS /;"	d	file:
STB_C_LEX_DECIMAL_SUFFIXES	stb/stb_c_lexer.h	/^#define STB_C_LEX_DECIMAL_SUFFIXES /;"	d
STB_C_LEX_DECIMAL_SUFFIXES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_DECIMAL_SUFFIXES /;"	d	file:
STB_C_LEX_DECIMAL_SUFFIXES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_DECIMAL_SUFFIXES /;"	d	file:
STB_C_LEX_DECIMAL_SUFFIXES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_DECIMAL_SUFFIXES /;"	d	file:
STB_C_LEX_DEFINE_ALL_TOKEN_NAMES	stb/stb_c_lexer.h	/^#define STB_C_LEX_DEFINE_ALL_TOKEN_NAMES /;"	d
STB_C_LEX_DEFINE_ALL_TOKEN_NAMES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_DEFINE_ALL_TOKEN_NAMES /;"	d	file:
STB_C_LEX_DEFINE_ALL_TOKEN_NAMES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_DEFINE_ALL_TOKEN_NAMES /;"	d	file:
STB_C_LEX_DEFINE_ALL_TOKEN_NAMES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_DEFINE_ALL_TOKEN_NAMES /;"	d	file:
STB_C_LEX_DISCARD_PREPROCESSOR	stb/stb_c_lexer.h	/^#define STB_C_LEX_DISCARD_PREPROCESSOR /;"	d
STB_C_LEX_DISCARD_PREPROCESSOR	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_DISCARD_PREPROCESSOR /;"	d	file:
STB_C_LEX_DISCARD_PREPROCESSOR	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_DISCARD_PREPROCESSOR /;"	d	file:
STB_C_LEX_DISCARD_PREPROCESSOR	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_DISCARD_PREPROCESSOR /;"	d	file:
STB_C_LEX_DOLLAR_IDENTIFIER	stb/stb_c_lexer.h	/^#define STB_C_LEX_DOLLAR_IDENTIFIER /;"	d
STB_C_LEX_DOLLAR_IDENTIFIER	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_DOLLAR_IDENTIFIER /;"	d	file:
STB_C_LEX_DOLLAR_IDENTIFIER	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_DOLLAR_IDENTIFIER /;"	d	file:
STB_C_LEX_DOLLAR_IDENTIFIER	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_DOLLAR_IDENTIFIER /;"	d	file:
STB_C_LEX_EQUAL_ARROW	stb/stb_c_lexer.h	/^#define STB_C_LEX_EQUAL_ARROW /;"	d
STB_C_LEX_EQUAL_ARROW	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_EQUAL_ARROW /;"	d	file:
STB_C_LEX_EQUAL_ARROW	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_EQUAL_ARROW /;"	d	file:
STB_C_LEX_EQUAL_ARROW	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_EQUAL_ARROW /;"	d	file:
STB_C_LEX_FLOAT_NO_DECIMAL	stb/stb_c_lexer.h	/^#define STB_C_LEX_FLOAT_NO_DECIMAL /;"	d
STB_C_LEX_FLOAT_NO_DECIMAL	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_FLOAT_NO_DECIMAL /;"	d	file:
STB_C_LEX_FLOAT_NO_DECIMAL	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_FLOAT_NO_DECIMAL /;"	d	file:
STB_C_LEX_FLOAT_NO_DECIMAL	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_FLOAT_NO_DECIMAL /;"	d	file:
STB_C_LEX_FLOAT_SUFFIXES	stb/stb_c_lexer.h	/^#define STB_C_LEX_FLOAT_SUFFIXES /;"	d
STB_C_LEX_FLOAT_SUFFIXES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_FLOAT_SUFFIXES /;"	d	file:
STB_C_LEX_FLOAT_SUFFIXES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_FLOAT_SUFFIXES /;"	d	file:
STB_C_LEX_FLOAT_SUFFIXES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_FLOAT_SUFFIXES /;"	d	file:
STB_C_LEX_HEX_SUFFIXES	stb/stb_c_lexer.h	/^#define STB_C_LEX_HEX_SUFFIXES /;"	d
STB_C_LEX_HEX_SUFFIXES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_HEX_SUFFIXES /;"	d	file:
STB_C_LEX_HEX_SUFFIXES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_HEX_SUFFIXES /;"	d	file:
STB_C_LEX_HEX_SUFFIXES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_HEX_SUFFIXES /;"	d	file:
STB_C_LEX_INTEGERS_AS_DOUBLES	stb/stb_c_lexer.h	/^#define STB_C_LEX_INTEGERS_AS_DOUBLES /;"	d
STB_C_LEX_INTEGERS_AS_DOUBLES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_INTEGERS_AS_DOUBLES /;"	d	file:
STB_C_LEX_INTEGERS_AS_DOUBLES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_INTEGERS_AS_DOUBLES /;"	d	file:
STB_C_LEX_INTEGERS_AS_DOUBLES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_INTEGERS_AS_DOUBLES /;"	d	file:
STB_C_LEX_MULTILINE_DSTRINGS	stb/stb_c_lexer.h	/^#define STB_C_LEX_MULTILINE_DSTRINGS /;"	d
STB_C_LEX_MULTILINE_DSTRINGS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_MULTILINE_DSTRINGS /;"	d	file:
STB_C_LEX_MULTILINE_DSTRINGS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_MULTILINE_DSTRINGS /;"	d	file:
STB_C_LEX_MULTILINE_DSTRINGS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_MULTILINE_DSTRINGS /;"	d	file:
STB_C_LEX_MULTILINE_SSTRINGS	stb/stb_c_lexer.h	/^#define STB_C_LEX_MULTILINE_SSTRINGS /;"	d
STB_C_LEX_MULTILINE_SSTRINGS	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_MULTILINE_SSTRINGS /;"	d	file:
STB_C_LEX_MULTILINE_SSTRINGS	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_MULTILINE_SSTRINGS /;"	d	file:
STB_C_LEX_MULTILINE_SSTRINGS	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_MULTILINE_SSTRINGS /;"	d	file:
STB_C_LEX_OCTAL_SUFFIXES	stb/stb_c_lexer.h	/^#define STB_C_LEX_OCTAL_SUFFIXES /;"	d
STB_C_LEX_OCTAL_SUFFIXES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_OCTAL_SUFFIXES /;"	d	file:
STB_C_LEX_OCTAL_SUFFIXES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_OCTAL_SUFFIXES /;"	d	file:
STB_C_LEX_OCTAL_SUFFIXES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_OCTAL_SUFFIXES /;"	d	file:
STB_C_LEX_PARSE_SUFFIXES	stb/stb_c_lexer.h	/^#define STB_C_LEX_PARSE_SUFFIXES /;"	d
STB_C_LEX_PARSE_SUFFIXES	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_PARSE_SUFFIXES /;"	d	file:
STB_C_LEX_PARSE_SUFFIXES	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_PARSE_SUFFIXES /;"	d	file:
STB_C_LEX_PARSE_SUFFIXES	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_PARSE_SUFFIXES /;"	d	file:
STB_C_LEX_USE_STDLIB	stb/stb_c_lexer.h	/^#define STB_C_LEX_USE_STDLIB /;"	d
STB_C_LEX_USE_STDLIB	stb/tests/c_lexer_test.c	/^#define STB_C_LEX_USE_STDLIB /;"	d	file:
STB_C_LEX_USE_STDLIB	stb/tests/stb_c_lexer_fuzzer.cpp	/^#define STB_C_LEX_USE_STDLIB /;"	d	file:
STB_C_LEX_USE_STDLIB	stb/tests/test_c_lexer.c	/^#define STB_C_LEX_USE_STDLIB /;"	d	file:
STB_D	stb/deprecated/stb.h	/^#define STB_D(/;"	d
STB_DEBUG	stb/deprecated/stb.h	/^      #define STB_DEBUG$/;"	d
STB_DEBUG	stb/tests/prerelease/stb_lib.h	/^      #define STB_DEBUG$/;"	d
STB_DEFINE	stb/deprecated/stb.h	/^   #define STB_DEFINE$/;"	d
STB_DEFINE	stb/tests/caveview/cave_main.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/image_test.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/oversample/stb_wingraph.h	/^      #define STB_DEFINE$/;"	d
STB_DEFINE	stb/tests/pg_test/pg_test.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/sdf/sdf_test.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/stb.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/stb_cpp.cpp	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/test_ds.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tests/test_ds_cpp.cpp	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tools/build_matrix.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tools/easy_font_maker.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tools/make_readme.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tools/trailing_whitespace.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEFINE	stb/tools/unicode.c	/^#define STB_DEFINE$/;"	d	file:
STB_DEL	stb/deprecated/stb.h	/^#define STB_DEL /;"	d
STB_DIVIDE_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_DIVIDE_IMPLEMENTATION$/;"	d	file:
STB_DIVIDE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_DIVIDE_IMPLEMENTATION$/;"	d	file:
STB_DS_IMPLEMENTATION	stb/deprecated/stretch_test.c	/^#define STB_DS_IMPLEMENTATION$/;"	d	file:
STB_DS_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_DS_IMPLEMENTATION$/;"	d	file:
STB_DS_IMPLEMENTATION	stb/tests/test_ds.c	/^#define STB_DS_IMPLEMENTATION$/;"	d	file:
STB_DS_IMPLEMENTATION	stb/tests/test_ds_cpp.cpp	/^#define STB_DS_IMPLEMENTATION$/;"	d	file:
STB_DS_IMPLEMENTATION	stb/tests/test_siphash.c	/^#define STB_DS_IMPLEMENTATION$/;"	d	file:
STB_DXT_DITHER	stb/stb_dxt.h	/^#define STB_DXT_DITHER /;"	d
STB_DXT_HIGHQUAL	stb/stb_dxt.h	/^#define STB_DXT_HIGHQUAL /;"	d
STB_DXT_IMPLEMENATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_DXT_IMPLEMENATION$/;"	d	file:
STB_DXT_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_DXT_IMPLEMENTATION$/;"	d	file:
STB_DXT_NORMAL	stb/stb_dxt.h	/^#define STB_DXT_NORMAL /;"	d
STB_EASY_FONT_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_EASY_FONT_IMPLEMENTATION$/;"	d	file:
STB_EDEL	stb/deprecated/stb.h	/^#define STB_EDEL /;"	d
STB_EDEL	stb/tests/prerelease/stb_lib.h	/^#define STB_EDEL /;"	d
STB_EMPTY	stb/deprecated/stb.h	/^#define STB_EMPTY /;"	d
STB_EMPTY	stb/tests/prerelease/stb_lib.h	/^#define STB_EMPTY /;"	d
STB_EXT	stb/deprecated/stb.h	/^   STB_EXT  = 4,$/;"	e	enum:stb_splitpath_flag
STB_EXT	stb/tests/prerelease/stb_lib.h	/^   STB_EXT  = 4,$/;"	e	enum:stb_splitpath_flag
STB_EXTERN	stb/deprecated/stb.h	/^   #define STB_EXTERN /;"	d
STB_EXTERN	stb/tests/oversample/stb_wingraph.h	/^#define STB_EXTERN /;"	d
STB_EXTERN	stb/tests/oversample/stb_wingraph.h	/^#define STB_EXTERN$/;"	d
STB_EXTERN	stb/tests/prerelease/stb_lib.h	/^   #define STB_EXTERN /;"	d
STB_EXT_NO_PERIOD	stb/deprecated/stb.h	/^   STB_EXT_NO_PERIOD = 8,$/;"	e	enum:stb_splitpath_flag
STB_EXT_NO_PERIOD	stb/tests/prerelease/stb_lib.h	/^   STB_EXT_NO_PERIOD = 8,$/;"	e	enum:stb_splitpath_flag
STB_F	stb/deprecated/stb.h	/^#define STB_F(/;"	d
STB_FALSE	stb/deprecated/stb.h	/^  #define STB_FALSE /;"	d
STB_FASTMALLOC	stb/deprecated/stb.h	/^   #define STB_FASTMALLOC$/;"	d
STB_FILE	stb/deprecated/stb.h	/^   STB_FILE = 2,$/;"	e	enum:stb_splitpath_flag
STB_FILE	stb/tests/prerelease/stb_lib.h	/^   STB_FILE = 2,$/;"	e	enum:stb_splitpath_flag
STB_FILE_EXT	stb/deprecated/stb.h	/^   STB_FILE_EXT  = STB_FILE + STB_EXT,$/;"	e	enum:stb_splitpath_flag
STB_FILE_EXT	stb/tests/prerelease/stb_lib.h	/^   STB_FILE_EXT  = STB_FILE + STB_EXT,$/;"	e	enum:stb_splitpath_flag
STB_GL	stb/tests/caveview/stb_gl.h	/^#define STB_GL$/;"	d
STB_GLEXT_DECLARE	stb/tests/caveview/cave_mesher.c	/^#define STB_GLEXT_DECLARE /;"	d	file:
STB_GLEXT_DECLARE	stb/tests/caveview/cave_render.c	/^#define STB_GLEXT_DECLARE /;"	d	file:
STB_GLEXT_DEFINE	stb/tests/caveview/cave_main.c	/^#define STB_GLEXT_DEFINE /;"	d	file:
STB_GLEXT_DEFINE	stb/tests/caveview/stb_gl.h	/^#define STB_GLEXT_DEFINE /;"	d
STB_GLEXT_SKIP_DURING_RECURSION	stb/tests/caveview/stb_gl.h	/^   #define  STB_GLEXT_SKIP_DURING_RECURSION$/;"	d
STB_GLPROG_ARB	stb/tests/caveview/stb_glprog.h	/^#define STB_GLPROG_ARB /;"	d
STB_GLPROG_ARB_DEFINE_EXTENSIONS	stb/tests/caveview/cave_main.c	/^#define STB_GLPROG_ARB_DEFINE_EXTENSIONS$/;"	d	file:
STB_GLPROG_DECLARE	stb/tests/caveview/stb_glprog.h	/^#define STB_GLPROG_DECLARE /;"	d
STB_GLPROG_EXTENSIONS	stb/tests/caveview/stb_glprog.h	/^#define STB_GLPROG_EXTENSIONS /;"	d
STB_GLPROG_FUNC	stb/tests/caveview/stb_glprog.h	/^   #define STB_GLPROG_FUNC(/;"	d
STB_GLPROG_FUNC	stb/tests/caveview/stb_glprog.h	/^#define STB_GLPROG_FUNC(/;"	d
STB_GLPROG_IMPLEMENTATION	stb/tests/caveview/cave_main.c	/^#define STB_GLPROG_IMPLEMENTATION$/;"	d	file:
STB_GL_IMPLEMENTATION	stb/tests/caveview/cave_main.c	/^#define STB_GL_IMPLEMENTATION$/;"	d	file:
STB_HAS_REGISTRY	stb/deprecated/stb.h	/^#define STB_HAS_REGISTRY$/;"	d
STB_HBWANG_ASSERT	stb/stb_herringbone_wang_tile.h	/^#define STB_HBWANG_ASSERT(/;"	d
STB_HBWANG_MAX_X	stb/stb_herringbone_wang_tile.h	/^#define STB_HBWANG_MAX_X /;"	d
STB_HBWANG_MAX_X	stb/tests/herringbone_map.c	/^#define STB_HBWANG_MAX_X /;"	d	file:
STB_HBWANG_MAX_Y	stb/stb_herringbone_wang_tile.h	/^#define STB_HBWANG_MAX_Y /;"	d
STB_HBWANG_MAX_Y	stb/tests/herringbone_map.c	/^#define STB_HBWANG_MAX_Y /;"	d	file:
STB_HBWANG_RAND	stb/stb_herringbone_wang_tile.h	/^#define STB_HBWANG_RAND(/;"	d
STB_HERRINGBONE_WANG_TILE_IMEPLEMENTATIOn	stb/tests/test_c_compilation.c	/^#define STB_HERRINGBONE_WANG_TILE_IMEPLEMENTATIOn$/;"	d	file:
STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION	stb/tests/herringbone_generator.c	/^#define STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION$/;"	d	file:
STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION	stb/tests/herringbone_map.c	/^#define STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION$/;"	d	file:
STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_HERRINGBONE_WANG_TILE_IMPLEMENTATION$/;"	d	file:
STB_HEXWAVE_DEF	stb/stb_hexwave.h	/^#define STB_HEXWAVE_DEF /;"	d
STB_HEXWAVE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_HEXWAVE_IMPLEMENTATION$/;"	d	file:
STB_HEXWAVE_MAX_BLEP_LENGTH	stb/stb_hexwave.h	/^#define STB_HEXWAVE_MAX_BLEP_LENGTH /;"	d
STB_I	stb/deprecated/stb.h	/^#define STB_I(/;"	d
STB_IDEL	stb/deprecated/stb.h	/^#define STB_IDEL /;"	d
STB_IDEL	stb/tests/prerelease/stb_lib.h	/^#define STB_IDEL /;"	d
STB_IEMPTY	stb/deprecated/stb.h	/^#define STB_IEMPTY /;"	d
STB_IEMPTY	stb/tests/prerelease/stb_lib.h	/^#define STB_IEMPTY /;"	d
STB_IMAGE_IMPLEMENTATION	stb/tests/caveview/cave_main.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/herringbone_map.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/image_test.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/pg_test/pg_test.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/resample_test.cpp	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/stb_static.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/stbi_read_fuzzer.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tests/test_image.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	stb/tools/easy_font_maker.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_RESIZE_IMPLEMENTATION	stb/tests/resample_test.cpp	/^#define STB_IMAGE_RESIZE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_RESIZE_IMPLEMENTATION	stb/tests/resample_test_c.c	/^#define STB_IMAGE_RESIZE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_RESIZE_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_IMAGE_RESIZE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_RESIZE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_IMAGE_RESIZE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_RESIZE_STATIC	stb/tests/resample_test.cpp	/^#define STB_IMAGE_RESIZE_STATIC$/;"	d	file:
STB_IMAGE_RESIZE_STATIC	stb/tests/resample_test_c.c	/^#define STB_IMAGE_RESIZE_STATIC$/;"	d	file:
STB_IMAGE_STATIC	stb/tests/stb_static.c	/^#define STB_IMAGE_STATIC$/;"	d	file:
STB_IMAGE_STATIC	stb/tests/test_image.c	/^#define STB_IMAGE_STATIC$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/herringbone_generator.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/herringbone_map.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/image_test.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/image_write_test.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/pg_test/pg_test.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/resample_test.cpp	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/sdf/sdf_test.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/stb_static.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	stb/tests/test_image_write.c	/^#define STB_IMAGE_WRITE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_WRITE_STATIC	stb/tests/image_write_test.c	/^#define STB_IMAGE_WRITE_STATIC$/;"	d	file:
STB_IMAGE_WRITE_STATIC	stb/tests/stb_static.c	/^#define STB_IMAGE_WRITE_STATIC$/;"	d	file:
STB_IMAGE_WRITE_STATIC	stb/tests/test_cpp_compilation.cpp	/^#define STB_IMAGE_WRITE_STATIC$/;"	d	file:
STB_IMAGE_WRITE_STATIC	stb/tests/test_image_write.c	/^#define STB_IMAGE_WRITE_STATIC$/;"	d	file:
STB_IMM_INT64	stb/deprecated/stb.h	/^  #define STB_IMM_INT64(/;"	d
STB_IMM_UINT64	stb/deprecated/stb.h	/^  #define STB_IMM_UINT64(/;"	d
STB_IMM_UINT64	stb/tests/prerelease/stb_lib.h	/^  #define STB_IMM_UINT64(/;"	d
STB_INCLUDE_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_INCLUDE_IMPLEMENTATION$/;"	d	file:
STB_INCLUDE_STB_DXT_H	stb/stb_dxt.h	/^#define STB_INCLUDE_STB_DXT_H$/;"	d
STB_INCLUDE_STB_HEXWAVE_H	stb/stb_hexwave.h	/^#define STB_INCLUDE_STB_HEXWAVE_H$/;"	d
STB_INCLUDE_STB_INCLUDE_H	stb/stb_include.h	/^#define STB_INCLUDE_STB_INCLUDE_H$/;"	d
STB_INCLUDE_STB_LIB_H	stb/tests/prerelease/stb_lib.h	/^#define STB_INCLUDE_STB_LIB_H$/;"	d
STB_INCLUDE_STB_RECT_PACK_H	stb/stb_rect_pack.h	/^#define STB_INCLUDE_STB_RECT_PACK_H$/;"	d
STB_LEAKCHECK_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_LEAKCHECK_IMPLEMENTATION$/;"	d	file:
STB_LEAKCHECK_OUTPUT_PIPE	stb/stb_leakcheck.h	/^#define STB_LEAKCHECK_OUTPUT_PIPE /;"	d
STB_LIB_IMPLEMENTATION	stb/tests/stblib_test.c	/^#define STB_LIB_IMPLEMENTATION$/;"	d	file:
STB_MALLOC_HISTORY_COUNT	stb/deprecated/stb.h	/^#define STB_MALLOC_HISTORY_COUNT /;"	d
STB_MALLOC_WRAPPER	stb/deprecated/stb.h	/^   #define STB_MALLOC_WRAPPER$/;"	d
STB_MALLOC_WRAPPER_DEBUG	stb/deprecated/stb.h	/^   #define STB_MALLOC_WRAPPER_DEBUG$/;"	d
STB_MALLOC_WRAPPER_DEBUG	stb/tests/stb.c	/^#define STB_MALLOC_WRAPPER_DEBUG$/;"	d	file:
STB_MUTEX_NATIVE	stb/deprecated/stb.h	/^#define STB_MUTEX_NATIVE$/;"	d
STB_MUTEX_NULL	stb/deprecated/stb.h	/^#define STB_MUTEX_NULL /;"	d
STB_NO_REGISTRY	stb/tests/test_ds.c	/^#define STB_NO_REGISTRY$/;"	d	file:
STB_NO_REGISTRY	stb/tests/test_ds_cpp.cpp	/^#define STB_NO_REGISTRY$/;"	d	file:
STB_NPTR	stb/tests/stb.c	/^#define STB_NPTR$/;"	d	file:
STB_NPTR	stb/tests/stb_cpp.cpp	/^#define STB_NPTR$/;"	d	file:
STB_ONLY	stb/tests/stb_cpp.cpp	/^#define STB_ONLY$/;"	d	file:
STB_PATH	stb/deprecated/stb.h	/^   STB_PATH = 1,$/;"	e	enum:stb_splitpath_flag
STB_PATH	stb/tests/prerelease/stb_lib.h	/^   STB_PATH = 1,$/;"	e	enum:stb_splitpath_flag
STB_PATH_FILE	stb/deprecated/stb.h	/^   STB_PATH_FILE = STB_PATH + STB_FILE,$/;"	e	enum:stb_splitpath_flag
STB_PATH_FILE	stb/tests/prerelease/stb_lib.h	/^   STB_PATH_FILE = STB_PATH + STB_FILE,$/;"	e	enum:stb_splitpath_flag
STB_PERLIN_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_PERLIN_IMPLEMENTATION$/;"	d	file:
STB_PERLIN_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_PERLIN_IMPLEMENTATION$/;"	d	file:
STB_PG_IMPLEMENTATION	stb/tests/pg_test/pg_test.c	/^#define STB_PG_IMPLEMENTATION$/;"	d	file:
STB_PTR64	stb/deprecated/stb.h	/^  #define STB_PTR64$/;"	d
STB_RECT_PACK_IMPLEMENTATION	atlas.cpp	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	stb/tests/oversample/main.c	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_VERSION	stb/stb_rect_pack.h	/^#define STB_RECT_PACK_VERSION /;"	d
STB_S	stb/deprecated/stb.h	/^#define STB_S(/;"	d
STB_SDEL	stb/deprecated/stb.h	/^#define STB_SDEL /;"	d
STB_SDEL	stb/tests/prerelease/stb_lib.h	/^#define STB_SDEL /;"	d
STB_SEMAPHORE_NULL	stb/deprecated/stb.h	/^#define STB_SEMAPHORE_NULL /;"	d
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^#define STB_SPRINTF_DECORATE(/;"	d
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF int STB_SPRINTF_DECORATE( vsnprintf )( char * buf, int count, char const * fmt,/;"	f	typeref:typename:STBSP__PUBLICDEF int
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF int STB_SPRINTF_DECORATE(snprintf)(char *buf, int count, char const *fmt, ...)$/;"	f	typeref:typename:STBSP__PUBLICDEF int
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF int STB_SPRINTF_DECORATE(sprintf)(char *buf, char const *fmt, ...)$/;"	f	typeref:typename:STBSP__PUBLICDEF int
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF int STB_SPRINTF_DECORATE(vsprintf)(char *buf, char const *fmt, va_list va)$/;"	f	typeref:typename:STBSP__PUBLICDEF int
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF int STB_SPRINTF_DECORATE(vsprintfcb)(STBSP_SPRINTFCB *callback, void *user, cha/;"	f	typeref:typename:STBSP__PUBLICDEF int
STB_SPRINTF_DECORATE	stb/stb_sprintf.h	/^STBSP__PUBLICDEF void STB_SPRINTF_DECORATE(set_separators)(char pcomma, char pperiod)$/;"	f	typeref:typename:STBSP__PUBLICDEF void
STB_SPRINTF_H_INCLUDE	stb/stb_sprintf.h	/^#define STB_SPRINTF_H_INCLUDE$/;"	d
STB_SPRINTF_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_SPRINTF_IMPLEMENTATION$/;"	d	file:
STB_SPRINTF_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_SPRINTF_IMPLEMENTATION$/;"	d	file:
STB_SPRINTF_MIN	stb/stb_sprintf.h	/^#define STB_SPRINTF_MIN /;"	d
STB_SPRINTF_MSVC_MODE	stb/stb_sprintf.h	/^#define STB_SPRINTF_MSVC_MODE$/;"	d
STB_STRETCHY_BUFFER_H_INCLUDED	stb/deprecated/stretchy_buffer.h	/^#define STB_STRETCHY_BUFFER_H_INCLUDED$/;"	d
STB_SYNC_NULL	stb/deprecated/stb.h	/^#define STB_SYNC_NULL /;"	d
STB_TEXTEDIT_CHARTYPE	stb/stb_textedit.h	/^#define STB_TEXTEDIT_CHARTYPE /;"	d
STB_TEXTEDIT_CHARTYPE	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_CHARTYPE /;"	d	file:
STB_TEXTEDIT_CHARTYPE	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_CHARTYPE /;"	d	file:
STB_TEXTEDIT_DELETECHARS	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_DELETECHARS /;"	d	file:
STB_TEXTEDIT_DELETECHARS	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_DELETECHARS /;"	d	file:
STB_TEXTEDIT_GETCHAR	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_GETCHAR(/;"	d	file:
STB_TEXTEDIT_GETCHAR	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_GETCHAR(/;"	d	file:
STB_TEXTEDIT_GETWIDTH	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_GETWIDTH(/;"	d	file:
STB_TEXTEDIT_GETWIDTH	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_GETWIDTH(/;"	d	file:
STB_TEXTEDIT_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_IMPLEMENTATION$/;"	d	file:
STB_TEXTEDIT_IMPLEMENTATION	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_IMPLEMENTATION$/;"	d	file:
STB_TEXTEDIT_INSERTCHARS	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_INSERTCHARS /;"	d	file:
STB_TEXTEDIT_INSERTCHARS	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_INSERTCHARS /;"	d	file:
STB_TEXTEDIT_IS_SPACE	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_IS_SPACE(/;"	d	file:
STB_TEXTEDIT_IS_SPACE	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_IS_SPACE(/;"	d	file:
STB_TEXTEDIT_KEYTOTEXT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_KEYTOTEXT(/;"	d	file:
STB_TEXTEDIT_KEYTOTEXT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_KEYTOTEXT(/;"	d	file:
STB_TEXTEDIT_KEYTYPE	stb/stb_textedit.h	/^#define STB_TEXTEDIT_KEYTYPE /;"	d
STB_TEXTEDIT_K_BACKSPACE	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_BACKSPACE /;"	d	file:
STB_TEXTEDIT_K_BACKSPACE	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_BACKSPACE /;"	d	file:
STB_TEXTEDIT_K_CONTROL	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_CONTROL /;"	d	file:
STB_TEXTEDIT_K_CONTROL	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_CONTROL /;"	d	file:
STB_TEXTEDIT_K_DELETE	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_DELETE /;"	d	file:
STB_TEXTEDIT_K_DELETE	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_DELETE /;"	d	file:
STB_TEXTEDIT_K_DOWN	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_DOWN /;"	d	file:
STB_TEXTEDIT_K_DOWN	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_DOWN /;"	d	file:
STB_TEXTEDIT_K_INSERT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_INSERT /;"	d	file:
STB_TEXTEDIT_K_INSERT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_INSERT /;"	d	file:
STB_TEXTEDIT_K_LEFT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_LEFT /;"	d	file:
STB_TEXTEDIT_K_LEFT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_LEFT /;"	d	file:
STB_TEXTEDIT_K_LINEEND	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_LINEEND /;"	d	file:
STB_TEXTEDIT_K_LINEEND	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_LINEEND /;"	d	file:
STB_TEXTEDIT_K_LINESTART	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_LINESTART /;"	d	file:
STB_TEXTEDIT_K_LINESTART	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_LINESTART /;"	d	file:
STB_TEXTEDIT_K_PGDOWN	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_PGDOWN /;"	d	file:
STB_TEXTEDIT_K_PGDOWN	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_PGDOWN /;"	d	file:
STB_TEXTEDIT_K_PGUP	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_PGUP /;"	d	file:
STB_TEXTEDIT_K_PGUP	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_PGUP /;"	d	file:
STB_TEXTEDIT_K_REDO	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_REDO /;"	d	file:
STB_TEXTEDIT_K_REDO	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_REDO /;"	d	file:
STB_TEXTEDIT_K_RIGHT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_RIGHT /;"	d	file:
STB_TEXTEDIT_K_RIGHT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_RIGHT /;"	d	file:
STB_TEXTEDIT_K_SHIFT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_SHIFT /;"	d	file:
STB_TEXTEDIT_K_SHIFT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_SHIFT /;"	d	file:
STB_TEXTEDIT_K_TEXTEND	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_TEXTEND /;"	d	file:
STB_TEXTEDIT_K_TEXTEND	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_TEXTEND /;"	d	file:
STB_TEXTEDIT_K_TEXTSTART	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_TEXTSTART /;"	d	file:
STB_TEXTEDIT_K_TEXTSTART	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_TEXTSTART /;"	d	file:
STB_TEXTEDIT_K_UNDO	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_UNDO /;"	d	file:
STB_TEXTEDIT_K_UNDO	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_UNDO /;"	d	file:
STB_TEXTEDIT_K_UP	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_UP /;"	d	file:
STB_TEXTEDIT_K_UP	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_UP /;"	d	file:
STB_TEXTEDIT_K_WORDLEFT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_WORDLEFT /;"	d	file:
STB_TEXTEDIT_K_WORDLEFT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_WORDLEFT /;"	d	file:
STB_TEXTEDIT_K_WORDRIGHT	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_K_WORDRIGHT /;"	d	file:
STB_TEXTEDIT_K_WORDRIGHT	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_K_WORDRIGHT /;"	d	file:
STB_TEXTEDIT_LAYOUTROW	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_LAYOUTROW /;"	d	file:
STB_TEXTEDIT_LAYOUTROW	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_LAYOUTROW /;"	d	file:
STB_TEXTEDIT_MOVEWORDLEFT	stb/stb_textedit.h	/^#define STB_TEXTEDIT_MOVEWORDLEFT /;"	d
STB_TEXTEDIT_MOVEWORDRIGHT	stb/stb_textedit.h	/^#define STB_TEXTEDIT_MOVEWORDRIGHT /;"	d
STB_TEXTEDIT_NEWLINE	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_NEWLINE /;"	d	file:
STB_TEXTEDIT_NEWLINE	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_NEWLINE /;"	d	file:
STB_TEXTEDIT_POSITIONTYPE	stb/stb_textedit.h	/^#define STB_TEXTEDIT_POSITIONTYPE /;"	d
STB_TEXTEDIT_STRING	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_STRING /;"	d	file:
STB_TEXTEDIT_STRING	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_STRING /;"	d	file:
STB_TEXTEDIT_STRINGLEN	stb/tests/test_cpp_compilation.cpp	/^#define STB_TEXTEDIT_STRINGLEN(/;"	d	file:
STB_TEXTEDIT_STRINGLEN	stb/tests/textedit_sample.c	/^#define STB_TEXTEDIT_STRINGLEN(/;"	d	file:
STB_TEXTEDIT_UNDOCHARCOUNT	stb/stb_textedit.h	/^#define STB_TEXTEDIT_UNDOCHARCOUNT /;"	d
STB_TEXTEDIT_UNDOSTATECOUNT	stb/stb_textedit.h	/^#define STB_TEXTEDIT_UNDOSTATECOUNT /;"	d
STB_TEXTEDIT_memmove	stb/stb_textedit.h	/^#define STB_TEXTEDIT_memmove /;"	d
STB_TEXT_HAS_SELECTION	stb/stb_textedit.h	/^#define STB_TEXT_HAS_SELECTION(/;"	d
STB_THREADQUEUE_DYNAMIC	stb/deprecated/stb.h	/^#define STB_THREADQUEUE_DYNAMIC /;"	d
STB_THREADQ_DYNAMIC	stb/deprecated/stb.h	/^#define STB_THREADQ_DYNAMIC /;"	d
STB_THREADS	stb/deprecated/stb.h	/^   #define STB_THREADS$/;"	d
STB_THREAD_NULL	stb/deprecated/stb.h	/^#define STB_THREAD_NULL /;"	d
STB_TILEMAP_EDITOR_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_TILEMAP_EDITOR_IMPLEMENTATION$/;"	d	file:
STB_TILEMAP_EDITOR_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_TILEMAP_EDITOR_IMPLEMENTATION$/;"	d	file:
STB_TILEMAP_EDITOR_IMPLEMENTATION	stb/tests/tilemap_editor_integration_example.c	/^#define STB_TILEMAP_EDITOR_IMPLEMENTATION$/;"	d	file:
STB_TILEMAP_INCLUDE_STB_TILEMAP_EDITOR_H	stb/stb_tilemap_editor.h	/^#define STB_TILEMAP_INCLUDE_STB_TILEMAP_EDITOR_H$/;"	d
STB_TRUE	stb/deprecated/stb.h	/^  #define STB_TRUE /;"	d
STB_TRUETYPE_IMPLEMENTATION	glwrappers.cpp	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/deprecated/stretch_test.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/oversample/main.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/sdf/sdf_test.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/stb_static.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/test_truetype.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	stb/tests/truetype_test_win32.c	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TexteditState	stb/stb_textedit.h	/^} STB_TexteditState;$/;"	t	typeref:struct:__anonb04bb6e60308
STB_UI	stb/deprecated/stb.h	/^#define STB_UI(/;"	d
STB_VERSION	stb/deprecated/stb.h	/^#define STB_VERSION /;"	d
STB_VORBIS_ENDIAN	stb/stb_vorbis.c	/^     #define STB_VORBIS_ENDIAN /;"	d	file:
STB_VORBIS_FAST_HUFFMAN_LENGTH	stb/stb_vorbis.c	/^#define STB_VORBIS_FAST_HUFFMAN_LENGTH /;"	d	file:
STB_VORBIS_FAST_HUFFMAN_SHORT	stb/stb_vorbis.c	/^#define STB_VORBIS_FAST_HUFFMAN_SHORT$/;"	d	file:
STB_VORBIS_HEADER_ONLY	stb/tests/test_vorbis.c	/^#define STB_VORBIS_HEADER_ONLY$/;"	d	file:
STB_VORBIS_HEADER_ONLY	stb/tests/vorbseek/vorbseek.c	/^#define STB_VORBIS_HEADER_ONLY$/;"	d	file:
STB_VORBIS_INCLUDE_STB_VORBIS_H	stb/stb_vorbis.c	/^#define STB_VORBIS_INCLUDE_STB_VORBIS_H$/;"	d	file:
STB_VORBIS_MAX_CHANNELS	stb/stb_vorbis.c	/^#define STB_VORBIS_MAX_CHANNELS /;"	d	file:
STB_VORBIS_NO_INTEGER_CONVERSION	stb/stb_vorbis.c	/^   #define STB_VORBIS_NO_INTEGER_CONVERSION$/;"	d	file:
STB_VORBIS_NO_STDIO	stb/stb_vorbis.c	/^   #define STB_VORBIS_NO_STDIO /;"	d	file:
STB_VORBIS_NO_STDIO	stb/stb_vorbis.c	/^   #define STB_VORBIS_NO_STDIO$/;"	d	file:
STB_VORBIS_NO_STDIO	stb/stb_vorbis.c	/^#define STB_VORBIS_NO_STDIO /;"	d	file:
STB_VORBIS_PUSHDATA_CRC_COUNT	stb/stb_vorbis.c	/^#define STB_VORBIS_PUSHDATA_CRC_COUNT /;"	d	file:
STB_VOXEL_RENDER_IMPLEMENTATION	stb/tests/caveview/cave_mesher.c	/^#define STB_VOXEL_RENDER_IMPLEMENTATION$/;"	d	file:
STB_VOXEL_RENDER_IMPLEMENTATION	stb/tests/test_c_compilation.c	/^#define STB_VOXEL_RENDER_IMPLEMENTATION$/;"	d	file:
STB_VOXEL_RENDER_IMPLEMENTATION	stb/tests/test_cpp_compilation.cpp	/^#define STB_VOXEL_RENDER_IMPLEMENTATION$/;"	d	file:
STB_WINGRAPH_DISABLE_DEFINE_AT_END	stb/tests/oversample/stb_wingraph.h	/^      #define STB_WINGRAPH_DISABLE_DEFINE_AT_END$/;"	d
STB_WINMAIN	stb/tests/oversample/main.c	/^#define STB_WINMAIN$/;"	d	file:
STB__	stb/deprecated/stb.h	/^#define STB__(/;"	d
STB__	stb/tests/prerelease/stb_lib.h	/^#define STB__(/;"	d
STB__ARGS	stb/deprecated/stb.h	/^  #define STB__ARGS /;"	d
STB__ARGS	stb/deprecated/stb.h	/^  #define STB__ARGS$/;"	d
STB__BIAS	stb/deprecated/stb.h	/^      #define STB__BIAS /;"	d
STB__CHUNKS	stb/deprecated/stb.h	/^#define STB__CHUNKS /;"	d
STB__CLEX_use_stdlib	stb/stb_c_lexer.h	/^#define STB__CLEX_use_stdlib$/;"	d
STB__CTYPE_double	stb/deprecated/stb.h	/^   STB__CTYPE_double,$/;"	e	enum:__anonfe33527c2703
STB__CTYPE_float	stb/deprecated/stb.h	/^   STB__CTYPE_float,$/;"	e	enum:__anonfe33527c2703
STB__CTYPE_int	stb/deprecated/stb.h	/^   STB__CTYPE_int,$/;"	e	enum:__anonfe33527c2703
STB__CTYPE_string	stb/deprecated/stb.h	/^   STB__CTYPE_string,$/;"	e	enum:__anonfe33527c2703
STB__CTYPE_uint	stb/deprecated/stb.h	/^   STB__CTYPE_uint,$/;"	e	enum:__anonfe33527c2703
STB__DEBUG	stb/deprecated/stb.h	/^   #define STB__DEBUG(/;"	d
STB__DECODE	stb/deprecated/stb.h	/^#define STB__DECODE(/;"	d
STB__DFA_END	stb/deprecated/stb.h	/^#define STB__DFA_END /;"	d
STB__DFA_GOAL	stb/deprecated/stb.h	/^#define STB__DFA_GOAL /;"	d
STB__DFA_MGOAL	stb/deprecated/stb.h	/^#define STB__DFA_MGOAL /;"	d
STB__DFA_UNDEF	stb/deprecated/stb.h	/^#define STB__DFA_UNDEF /;"	d
STB__DFA_VALID	stb/deprecated/stb.h	/^#define STB__DFA_VALID /;"	d
STB__DW	stb/deprecated/stb.h	/^   #define STB__DW /;"	d
STB__DW	stb/deprecated/stb.h	/^#define STB__DW /;"	d
STB__ENCODE	stb/deprecated/stb.h	/^#define STB__ENCODE(/;"	d
STB__FIXSIZE	stb/deprecated/stb.h	/^      #define STB__FIXSIZE(/;"	d
STB__HAS_WGLPROC	stb/tests/caveview/stb_gl.h	/^#define STB__HAS_WGLPROC$/;"	d
STB__HKEY_CURRENT_USER	stb/deprecated/stb.h	/^#define STB__HKEY_CURRENT_USER /;"	d
STB__HKEY_LOCAL_MACHINE	stb/deprecated/stb.h	/^#define STB__HKEY_LOCAL_MACHINE /;"	d
STB__IMPORT	stb/deprecated/stb.h	/^   #define STB__IMPORT /;"	d
STB__IMPORT	stb/deprecated/stb.h	/^#define STB__IMPORT /;"	d
STB__INCLUDE_STB_H	stb/deprecated/stb.h	/^#define STB__INCLUDE_STB_H$/;"	d
STB__LOWER_MASK	stb/deprecated/stb.h	/^#define STB__LOWER_MASK /;"	d
STB__LOWER_MASK	stb/tests/prerelease/stb_lib.h	/^#define STB__LOWER_MASK /;"	d
STB__MAGIC	stb/deprecated/stb.h	/^#define STB__MAGIC(/;"	d
STB__MAGIC	stb/tests/prerelease/stb_lib.h	/^#define STB__MAGIC(/;"	d
STB__MATRIX_A	stb/deprecated/stb.h	/^#define STB__MATRIX_A /;"	d
STB__MATRIX_A	stb/tests/prerelease/stb_lib.h	/^#define STB__MATRIX_A /;"	d
STB__MAX_DISK_COMMAND	stb/deprecated/stb.h	/^#define STB__MAX_DISK_COMMAND /;"	d
STB__MAX_SIZE_CLASSES	stb/deprecated/stb.h	/^#define STB__MAX_SIZE_CLASSES /;"	d
STB__MAX_SMALL_SIZE	stb/deprecated/stb.h	/^#define STB__MAX_SMALL_SIZE /;"	d
STB__MT_IA	stb/deprecated/stb.h	/^#define STB__MT_IA /;"	d
STB__MT_IA	stb/tests/prerelease/stb_lib.h	/^#define STB__MT_IA /;"	d
STB__MT_IB	stb/deprecated/stb.h	/^#define STB__MT_IB /;"	d
STB__MT_IB	stb/tests/prerelease/stb_lib.h	/^#define STB__MT_IB /;"	d
STB__MT_LEN	stb/deprecated/stb.h	/^#define STB__MT_LEN /;"	d
STB__MT_LEN	stb/tests/prerelease/stb_lib.h	/^#define STB__MT_LEN /;"	d
STB__NFA_STOP_GOAL	stb/deprecated/stb.h	/^#define STB__NFA_STOP_GOAL /;"	d
STB__NPTR_NODE_LOG2	stb/deprecated/stb.h	/^#define STB__NPTR_NODE_LOG2 /;"	d
STB__NPTR_NODE_MASK	stb/deprecated/stb.h	/^#define STB__NPTR_NODE_MASK /;"	d
STB__NPTR_NODE_NUM	stb/deprecated/stb.h	/^#define STB__NPTR_NODE_NUM /;"	d
STB__NPTR_NODE_OFFSET	stb/deprecated/stb.h	/^#define STB__NPTR_NODE_OFFSET(/;"	d
STB__NPTR_NODE_SHIFT	stb/deprecated/stb.h	/^#define STB__NPTR_NODE_SHIFT /;"	d
STB__NPTR_ROOT_LOG2	stb/deprecated/stb.h	/^#define STB__NPTR_ROOT_LOG2 /;"	d
STB__NPTR_ROOT_NUM	stb/deprecated/stb.h	/^#define STB__NPTR_ROOT_NUM /;"	d
STB__NPTR_ROOT_SHIFT	stb/deprecated/stb.h	/^#define STB__NPTR_ROOT_SHIFT /;"	d
STB__PAD	stb/deprecated/stb.h	/^      #define STB__PAD /;"	d
STB__PARAMS	stb/deprecated/stb.h	/^  #define STB__PARAMS /;"	d
STB__PARAMS	stb/deprecated/stb.h	/^  #define STB__PARAMS$/;"	d
STB__PARENT	stb/deprecated/stb.h	/^#define STB__PARENT /;"	d
STB__RECORD_FILE	stb/deprecated/stb.h	/^   #define STB__RECORD_FILE(/;"	d
STB__REG_BINARY	stb/deprecated/stb.h	/^#define STB__REG_BINARY /;"	d
STB__REG_DWORD	stb/deprecated/stb.h	/^#define STB__REG_DWORD /;"	d
STB__REG_KEY_ALL_ACCESS	stb/deprecated/stb.h	/^#define STB__REG_KEY_ALL_ACCESS /;"	d
STB__REG_KEY_READ	stb/deprecated/stb.h	/^#define STB__REG_KEY_READ /;"	d
STB__REG_OPTION_NON_VOLATILE	stb/deprecated/stb.h	/^#define STB__REG_OPTION_NON_VOLATILE /;"	d
STB__REG_SZ	stb/deprecated/stb.h	/^#define STB__REG_SZ /;"	d
STB__SCRAMBLE	stb/deprecated/stb.h	/^   #define STB__SCRAMBLE(/;"	d
STB__SHA1	stb/deprecated/stb.h	/^   #define STB__SHA1(/;"	d
STB__SHA1	stb/tests/prerelease/stb_lib.h	/^   #define STB__SHA1(/;"	d
STB__SIG	stb/deprecated/stb.h	/^      #define STB__SIG /;"	d
STB__TRY	stb/deprecated/stb.h	/^      #define STB__TRY(/;"	d
STB__TWIST	stb/deprecated/stb.h	/^#define STB__TWIST(/;"	d
STB__TWIST	stb/tests/prerelease/stb_lib.h	/^#define STB__TWIST(/;"	d
STB__UPPER_MASK	stb/deprecated/stb.h	/^#define STB__UPPER_MASK /;"	d
STB__UPPER_MASK	stb/tests/prerelease/stb_lib.h	/^#define STB__UPPER_MASK /;"	d
STB__WINDOWS_PAGE	stb/deprecated/stb.h	/^   #define STB__WINDOWS_PAGE /;"	d
STB__alloc	stb/deprecated/stb.h	/^   STB__alloc      = STB__CHUNKS,$/;"	e	enum:__anonfe33527c0903
STB__chunk_raw	stb/deprecated/stb.h	/^   STB__chunk_raw  = 4,$/;"	e	enum:__anonfe33527c0903
STB__chunked	stb/deprecated/stb.h	/^   STB__chunked    = STB__PARENT,$/;"	e	enum:__anonfe33527c0903
STB__clex_decimal_floats	stb/stb_c_lexer.h	/^#define STB__clex_decimal_floats$/;"	d
STB__clex_decimal_ints	stb/stb_c_lexer.h	/^#define STB__clex_decimal_ints$/;"	d
STB__clex_discard_preprocessor	stb/stb_c_lexer.h	/^#define STB__clex_discard_preprocessor$/;"	d
STB__clex_hex_floats	stb/stb_c_lexer.h	/^#define STB__clex_hex_floats$/;"	d
STB__clex_hex_ints	stb/stb_c_lexer.h	/^#define STB__clex_hex_ints$/;"	d
STB__clex_int_as_double	stb/stb_c_lexer.h	/^#define STB__clex_int_as_double$/;"	d
STB__clex_octal_ints	stb/stb_c_lexer.h	/^#define STB__clex_octal_ints$/;"	d
STB__clex_parse_suffixes	stb/stb_c_lexer.h	/^#define STB__clex_parse_suffixes$/;"	d
STB__equal_ptrpair	stb/deprecated/stb.h	/^#define STB__equal_ptrpair(/;"	d
STB__level	stb/deprecated/stb.h	/^#define STB__level(/;"	d
STB__nochildren	stb/deprecated/stb.h	/^   STB__nochildren = 0,$/;"	e	enum:__anonfe33527c0903
STB__nogcc	stb/deprecated/stb.h	/^#define STB__nogcc(/;"	d
STB__nogcc	stb/tests/prerelease/stb_lib.h	/^#define STB__nogcc(/;"	d
STB__ptr	stb/deprecated/stb.h	/^      #define STB__ptr(/;"	d
STB__skip	stb/deprecated/stb.h	/^#define STB__skip(/;"	d
STB__skip	stb/tests/prerelease/stb_lib.h	/^#define STB__skip(/;"	d
STB__use	stb/deprecated/stb.h	/^#define STB__use(/;"	d
STB__use	stb/tests/prerelease/stb_lib.h	/^#define STB__use(/;"	d
STB_equal	stb/deprecated/stb.h	/^#define STB_equal(/;"	d
STB_equal	stb/tests/prerelease/stb_lib.h	/^#define STB_equal(/;"	d
STB_nocopy	stb/deprecated/stb.h	/^#define STB_nocopy(/;"	d
STB_nocopy	stb/tests/prerelease/stb_lib.h	/^#define STB_nocopy(/;"	d
STB_nodelete	stb/deprecated/stb.h	/^#define STB_nodelete(/;"	d
STB_nodelete	stb/tests/prerelease/stb_lib.h	/^#define STB_nodelete(/;"	d
STB_nofields	stb/deprecated/stb.h	/^#define STB_nofields$/;"	d
STB_nofields	stb/tests/prerelease/stb_lib.h	/^#define STB_nofields /;"	d
STB_nonullvalue	stb/deprecated/stb.h	/^#define STB_nonullvalue(/;"	d
STB_nonullvalue	stb/tests/prerelease/stb_lib.h	/^#define STB_nonullvalue(/;"	d
STB_noprefix	stb/deprecated/stb.h	/^#define STB_noprefix$/;"	d
STB_noprefix	stb/tests/prerelease/stb_lib.h	/^#define STB_noprefix$/;"	d
STB_nosafe	stb/deprecated/stb.h	/^#define STB_nosafe(/;"	d
STB_nosafe	stb/tests/prerelease/stb_lib.h	/^#define STB_nosafe(/;"	d
STB_nullvalue	stb/deprecated/stb.h	/^#define STB_nullvalue(/;"	d
STB_nullvalue	stb/tests/prerelease/stb_lib.h	/^#define STB_nullvalue(/;"	d
STB_probe_binary_largest	stb/deprecated/stb.h	/^   STB_probe_binary_largest,$/;"	e	enum:__anonfe33527c0503
STB_probe_binary_smallest	stb/deprecated/stb.h	/^   STB_probe_binary_smallest,$/;"	e	enum:__anonfe33527c0503
STB_probe_open_largest	stb/deprecated/stb.h	/^   STB_probe_open_largest,$/;"	e	enum:__anonfe33527c0503
STB_probe_open_smallest	stb/deprecated/stb.h	/^   STB_probe_open_smallest,$/;"	e	enum:__anonfe33527c0503
STB_ps_array	stb/deprecated/stb.h	/^   STB_ps_array  = 2,$/;"	e	enum:__anonfe33527c1703
STB_ps_bucket	stb/deprecated/stb.h	/^   STB_ps_bucket = 1,$/;"	e	enum:__anonfe33527c1703
STB_ps_direct	stb/deprecated/stb.h	/^   STB_ps_direct = 0,$/;"	e	enum:__anonfe33527c1703
STB_ps_hash	stb/deprecated/stb.h	/^   STB_ps_hash   = 3,$/;"	e	enum:__anonfe33527c1703
STB_safecompare	stb/deprecated/stb.h	/^#define STB_safecompare(/;"	d
STB_safecompare	stb/tests/prerelease/stb_lib.h	/^#define STB_safecompare(/;"	d
STRICT	stb/tests/caveview/win32/SDL_windows_main.c	/^#define STRICT$/;"	d	file:
STR_1	stb/tests/stb.c	/^#define STR_1 /;"	d	file:
STR_2	stb/tests/stb.c	/^#define STR_2 /;"	d	file:
STR_3	stb/tests/stb.c	/^#define STR_3 /;"	d	file:
STR_x	stb/tests/stb.c	/^#define STR_x /;"	d	file:
STR_xy	stb/tests/stb.c	/^#define STR_xy /;"	d	file:
STR_xyyxy	stb/tests/stb.c	/^#define STR_xyyxy /;"	d	file:
STR_y	stb/tests/stb.c	/^#define STR_y /;"	d	file:
SUPERCHUNK_X	stb/tests/caveview/cave_mesher.c	/^#define SUPERCHUNK_X /;"	d	file:
SUPERCHUNK_Y	stb/tests/caveview/cave_mesher.c	/^#define SUPERCHUNK_Y /;"	d	file:
SetShapes	render-shapes.cpp	/^void RenderShapes::SetShapes(const std::vector<Shape>& shapes) {$/;"	f	class:RenderShapes	typeref:typename:void
SetSprites	render-sprites.cpp	/^void RenderSprites::SetSprites(const std::vector<Sprite>& sprites) {$/;"	f	class:RenderSprites	typeref:typename:void
ShaderProgram	glwrappers.cpp	/^ShaderProgram::ShaderProgram(const char* vertex_shader, const char* fragment_shader) {$/;"	f	class:ShaderProgram
ShaderProgram	glwrappers.h	/^struct ShaderProgram: nocopy {$/;"	s
Shape	render-shapes.h	/^struct Shape {$/;"	s
ShowError	stb/tests/caveview/win32/SDL_windows_main.c	/^ShowError(const char *title, const char *message)$/;"	f	typeref:typename:void	file:
Some of these libraries seem redundant to existing open source libraries. Are they better somehow?	stb/README.md	/^#### Some of these libraries seem redundant to existing open source libraries. Are they better s/;"	t	section:stb""FAQ
Some of these libraries seem redundant to existing open source libraries. Are they better somehow?	stb/tools/README.footer.md	/^#### Some of these libraries seem redundant to existing open source libraries. Are they better s/;"	t	section:FAQ
Specific libraries	stb/.github/CONTRIBUTING.md	/^# Specific libraries$/;"	c
Sprite	render-sprites.h	/^struct Sprite {$/;"	s
SpriteLocation	atlas.h	/^struct SpriteLocation {$/;"	s
StbFindState	stb/stb_textedit.h	/^} StbFindState;$/;"	t	typeref:struct:__anonb04bb6e60508
StbTexteditRow	stb/stb_textedit.h	/^} StbTexteditRow;$/;"	t	typeref:struct:__anonb04bb6e60408
StbUndoRecord	stb/stb_textedit.h	/^} StbUndoRecord;$/;"	t	typeref:struct:__anonb04bb6e60108
StbUndoState	stb/stb_textedit.h	/^} StbUndoState;$/;"	t	typeref:struct:__anonb04bb6e60208
TAG_Byte	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anonb02522120403	file:
TAG_Byte_Array	stb/tests/caveview/cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anonb02522120403	file:
TAG_Compound	stb/tests/caveview/cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anonb02522120403	file:
TAG_Double	stb/tests/caveview/cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anonb02522120403	file:
TAG_End	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anonb02522120403	file:
TAG_Float	stb/tests/caveview/cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anonb02522120403	file:
TAG_Int	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anonb02522120403	file:
TAG_Int_Array	stb/tests/caveview/cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anonb02522120403	file:
TAG_List	stb/tests/caveview/cave_parse.c	/^       TAG_List=9, TAG_Compound=10, TAG_Int_Array=11 };$/;"	e	enum:__anonb02522120403	file:
TAG_Long	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anonb02522120403	file:
TAG_Short	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	e	enum:__anonb02522120403	file:
TAG_String	stb/tests/caveview/cave_parse.c	/^       TAG_Float=5, TAG_Double=6, TAG_Byte_Array=7, TAG_String=8,$/;"	e	enum:__anonb02522120403	file:
TETRIS	main.cpp	/^#define TETRIS /;"	d	file:
TETRIS_H	tetris.h	/^#define TETRIS_H$/;"	d
TEX_SIZE	stb/tests/caveview/cave_render.c	/^#define TEX_SIZE /;"	d	file:
TICKRATE	stb/tests/caveview/cave_main.c	/^#define TICKRATE /;"	d	file:
TICKS_PER_SECOND	stb/tests/caveview/cave_main.c	/^#define TICKS_PER_SECOND /;"	d	file:
TRUE	stb/deprecated/stb.h	/^     #define TRUE /;"	d
TRUE	stb/stb_vorbis.c	/^#define TRUE /;"	d	file:
Tetris	tetris.cpp	/^Tetris::Tetris() : self(new TetrisImpl()) {$/;"	f	class:Tetris
Tetris	tetris.h	/^class Tetris: public IRenderLayer {$/;"	c
TetrisImpl	tetris.cpp	/^struct TetrisImpl {$/;"	s	file:
Texture	glwrappers.cpp	/^Texture::Texture(SDL_Surface* surface) {$/;"	f	class:Texture
Texture	glwrappers.h	/^struct Texture: nocopy {$/;"	s
Triangle	render-shapes.h	/^struct Triangle {$/;"	s
True	stb/deprecated/stb.h	/^   #define True /;"	d
UMAX32	stb/tests/resample_test.cpp	/^#define UMAX32 /;"	d	file:
UNAME	Makefile	/^UNAME = $(shell uname -s)$/;"	m
UNICODE	stb/tests/caveview/win32/SDL_windows_main.c	/^#define UNICODE /;"	d	file:
USE_MEMORY	stb/stb_vorbis.c	/^   #define USE_MEMORY(/;"	d	file:
USE_STB	stb/tests/test_sprintf.c	/^#define USE_STB /;"	d	file:
UVAL_DONT_CARE_DEFAULT	stb/tools/unicode.c	/^#define UVAL_DONT_CARE_DEFAULT /;"	d	file:
UnEscapeQuotes	stb/tests/caveview/win32/SDL_windows_main.c	/^UnEscapeQuotes(char *arg)$/;"	f	typeref:typename:void	file:
VORBIS__no_error	stb/stb_vorbis.c	/^   VORBIS__no_error,$/;"	e	enum:STBVorbisError	file:
VORBIS_bad_packet_type	stb/stb_vorbis.c	/^   VORBIS_bad_packet_type,$/;"	e	enum:STBVorbisError	file:
VORBIS_cant_find_last_page	stb/stb_vorbis.c	/^   VORBIS_cant_find_last_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_continued_packet_flag_invalid	stb/stb_vorbis.c	/^   VORBIS_continued_packet_flag_invalid,$/;"	e	enum:STBVorbisError	file:
VORBIS_feature_not_supported	stb/stb_vorbis.c	/^   VORBIS_feature_not_supported,        \/\/ uses floor 0$/;"	e	enum:STBVorbisError	file:
VORBIS_file_open_failure	stb/stb_vorbis.c	/^   VORBIS_file_open_failure,            \/\/ fopen() failed$/;"	e	enum:STBVorbisError	file:
VORBIS_incorrect_stream_serial_number	stb/stb_vorbis.c	/^   VORBIS_incorrect_stream_serial_number,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_api_mixing	stb/stb_vorbis.c	/^   VORBIS_invalid_api_mixing,           \/\/ can't mix API modes$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_first_page	stb/stb_vorbis.c	/^   VORBIS_invalid_first_page,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_setup	stb/stb_vorbis.c	/^   VORBIS_invalid_setup=20,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream	stb/stb_vorbis.c	/^   VORBIS_invalid_stream,$/;"	e	enum:STBVorbisError	file:
VORBIS_invalid_stream_structure_version	stb/stb_vorbis.c	/^   VORBIS_invalid_stream_structure_version,$/;"	e	enum:STBVorbisError	file:
VORBIS_missing_capture_pattern	stb/stb_vorbis.c	/^   VORBIS_missing_capture_pattern=30,$/;"	e	enum:STBVorbisError	file:
VORBIS_need_more_data	stb/stb_vorbis.c	/^   VORBIS_need_more_data=1,             \/\/ not a real error$/;"	e	enum:STBVorbisError	file:
VORBIS_ogg_skeleton_not_supported	stb/stb_vorbis.c	/^   VORBIS_ogg_skeleton_not_supported$/;"	e	enum:STBVorbisError	file:
VORBIS_outofmem	stb/stb_vorbis.c	/^   VORBIS_outofmem,                     \/\/ not enough memory$/;"	e	enum:STBVorbisError	file:
VORBIS_packet_comment	stb/stb_vorbis.c	/^   VORBIS_packet_comment = 3,$/;"	e	enum:__anon008e12ab0f03	file:
VORBIS_packet_id	stb/stb_vorbis.c	/^   VORBIS_packet_id = 1,$/;"	e	enum:__anon008e12ab0f03	file:
VORBIS_packet_setup	stb/stb_vorbis.c	/^   VORBIS_packet_setup = 5$/;"	e	enum:__anon008e12ab0f03	file:
VORBIS_seek_failed	stb/stb_vorbis.c	/^   VORBIS_seek_failed,$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_invalid	stb/stb_vorbis.c	/^   VORBIS_seek_invalid,                 \/\/ seek past EOF$/;"	e	enum:STBVorbisError	file:
VORBIS_seek_without_length	stb/stb_vorbis.c	/^   VORBIS_seek_without_length,          \/\/ can't seek in unknown-length file$/;"	e	enum:STBVorbisError	file:
VORBIS_too_many_channels	stb/stb_vorbis.c	/^   VORBIS_too_many_channels,            \/\/ STB_VORBIS_MAX_CHANNELS is too small$/;"	e	enum:STBVorbisError	file:
VORBIS_unexpected_eof	stb/stb_vorbis.c	/^   VORBIS_unexpected_eof=10,            \/\/ file is truncated?$/;"	e	enum:STBVorbisError	file:
VertexBuffer	glwrappers.cpp	/^VertexBuffer::VertexBuffer() {$/;"	f	class:VertexBuffer
VertexBuffer	glwrappers.h	/^struct VertexBuffer: nocopy {$/;"	s
WIN32_LEAN_AND_MEAN	stb/tests/caveview/glext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	stb/tests/caveview/win32/SDL_windows_main.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	stb/tests/stb_cpp.cpp	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	stb/tests/test_ds.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	stb/tests/test_ds_cpp.cpp	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_MEAN_AND_LEAN	stb/tests/stb_cpp.cpp	/^#define WIN32_MEAN_AND_LEAN$/;"	d	file:
WIN32_MEAN_AND_LEAN	stb/tests/truetype_test_win32.c	/^#define WIN32_MEAN_AND_LEAN$/;"	d	file:
WINDOW_H	window.h	/^#define WINDOW_H$/;"	d
WINGDIAPI	stb/tests/caveview/stb_gl.h	/^#define WINGDIAPI /;"	d
WINGDIAPI	stb/tests/oversample/main.c	/^#define WINGDIAPI /;"	d	file:
WIN_StringToUTF8	stb/tests/caveview/win32/SDL_windows_main.c	/^#define WIN_StringToUTF8(/;"	d	file:
WIN_UTF8ToString	stb/tests/caveview/win32/SDL_windows_main.c	/^#define WIN_UTF8ToString(/;"	d	file:
WSTATE_idle	stb/tests/caveview/cave_render.c	/^   WSTATE_idle,$/;"	e	enum:__anonb6d309d70403	file:
WSTATE_mesh_ready	stb/tests/caveview/cave_render.c	/^   WSTATE_mesh_ready,$/;"	e	enum:__anonb6d309d70403	file:
WSTATE_requested	stb/tests/caveview/cave_render.c	/^   WSTATE_requested,$/;"	e	enum:__anonb6d309d70403	file:
WSTATE_running	stb/tests/caveview/cave_render.c	/^   WSTATE_running,$/;"	e	enum:__anonb6d309d70403	file:
WWWDIR	Makefile	/^WWWDIR = www$/;"	m
What about gamma?	stb/tests/oversample/README.md	/^## What about gamma?$/;"	s	chapter:Font character oversampling for rendering from atlas textures
What text oversampling is	stb/tests/oversample/README.md	/^## What text oversampling is$/;"	s	chapter:Font character oversampling for rendering from atlas textures
What's the deal with SSE support in GCC-based compilers?	stb/README.md	/^#### What's the deal with SSE support in GCC-based compilers?$/;"	t	section:stb""FAQ
What's the deal with SSE support in GCC-based compilers?	stb/tools/README.footer.md	/^#### What's the deal with SSE support in GCC-based compilers?$/;"	t	section:FAQ
What's the license?	stb/README.md	/^#### What's the license?$/;"	t	section:stb""FAQ
What's the license?	stb/tools/README.footer.md	/^#### What's the license?$/;"	t	section:FAQ
Why "stb"? Is this something to do with Set-Top Boxes?	stb/README.md	/^#### Why "stb"? Is this something to do with Set-Top Boxes?$/;"	t	section:stb""FAQ
Why "stb"? Is this something to do with Set-Top Boxes?	stb/tools/README.footer.md	/^#### Why "stb"? Is this something to do with Set-Top Boxes?$/;"	t	section:FAQ
Why C?	stb/README.md	/^#### Why C?$/;"	t	section:stb""FAQ
Why C?	stb/tools/README.footer.md	/^#### Why C?$/;"	t	section:FAQ
Why do you list "lines of code"? It's a terrible metric.	stb/README.md	/^#### Why do you list "lines of code"? It's a terrible metric.$/;"	t	section:stb""FAQ
Why do you list "lines of code"? It's a terrible metric.	stb/tools/README.footer.md	/^#### Why do you list "lines of code"? It's a terrible metric.$/;"	t	section:FAQ
Why isn't building the mesh data faster?	stb/tests/caveview/README.md	/^### Why isn't building the mesh data faster?$/;"	S	chapter:FAQ
Why not C99? stdint.h, declare-anywhere, etc.	stb/README.md	/^#### Why not C99? stdint.h, declare-anywhere, etc.$/;"	t	section:stb""FAQ
Why not C99? stdint.h, declare-anywhere, etc.	stb/tools/README.footer.md	/^#### Why not C99? stdint.h, declare-anywhere, etc.$/;"	t	section:FAQ
Why public domain?	stb/README.md	/^#### Why public domain?$/;"	t	section:stb""FAQ
Why public domain?	stb/tools/README.footer.md	/^#### Why public domain?$/;"	t	section:FAQ
Why single-file headers?	stb/README.md	/^#### Why single-file headers?$/;"	t	section:stb""FAQ
Why single-file headers?	stb/tools/README.footer.md	/^#### Why single-file headers?$/;"	t	section:FAQ
Width	font.cpp	/^int Font::Width(const char* text) const {$/;"	f	class:Font	typeref:typename:int
Will you add more image types to stb_image.h?	stb/README.md	/^#### Will you add more image types to stb_image.h?$/;"	t	section:stb""FAQ
Will you add more image types to stb_image.h?	stb/tools/README.footer.md	/^#### Will you add more image types to stb_image.h?$/;"	t	section:FAQ
WinMain	stb/tests/caveview/win32/SDL_windows_main.c	/^WinMain(HINSTANCE hInst, HINSTANCE hPrev, LPSTR szCmdLine, int sw)$/;"	f	typeref:typename:int WINAPI
WinMain	stb/tests/oversample/stb_wingraph.h	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)$/;"	f	typeref:typename:int WINAPI
WinMain	stb/tests/truetype_test_win32.c	/^int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)$/;"	f	typeref:typename:int WINAPI
WinProc	stb/tests/truetype_test_win32.c	/^static int WINAPI WinProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:int WINAPI	file:
Window	window.cpp	/^Window::Window(int width_, int height_)$/;"	f	class:Window
Window	window.h	/^class Window {$/;"	c
WindowImpl	window.cpp	/^WindowImpl::WindowImpl(SDL_Window* window_, SDL_Renderer* renderer_)$/;"	f	class:WindowImpl
WindowImpl	window.cpp	/^struct WindowImpl {$/;"	s	file:
X_LIMIT	stb/tools/easy_font_maker.c	/^#define X_LIMIT /;"	d	file:
Xlist	stb/stb_vorbis.c	/^   uint16 Xlist[31*8+2]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint16[]	file:
Y	stb/stb_c_lexer.h	/^#define Y(/;"	d
YCbCr_to_RGB_kernel	stb/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc/;"	m	struct:__anonc3e085de0808	typeref:typename:void (*)(stbi_uc * out,const stbi_uc * y,const stbi_uc * pcb,const stbi_uc * pcr,int count,int step)
YCbCr_to_RGB_row	stb/deprecated/stb_image.c	/^static void YCbCr_to_RGB_row(stbi__uint8 *out, const stbi__uint8 *y, const stbi__uint8 *pcb, con/;"	f	typeref:typename:void	file:
YTYPE	stb/stb_vorbis.c	/^typedef int YTYPE;$/;"	t	typeref:typename:int	file:
YTYPE	stb/stb_vorbis.c	/^typedef int16 YTYPE;$/;"	t	typeref:typename:int16	file:
ZFAST_BITS	stb/deprecated/stb_image.c	/^#define ZFAST_BITS /;"	d	file:
ZFAST_MASK	stb/deprecated/stb_image.c	/^#define ZFAST_MASK /;"	d	file:
_CRT_NONSTDC_NO_DEPRECATE	stb/deprecated/stb.h	/^   #define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_NONSTDC_NO_DEPRECATE	stb/stb_image_write.h	/^   #define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_NONSTDC_NO_DEPRECATE	stb/tests/prerelease/stb_lib.h	/^   #define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_NONSTDC_NO_DEPRECATE	stb/tests/test_ds.c	/^#define _CRT_NONSTDC_NO_DEPRECATE$/;"	d	file:
_CRT_NON_CONFORMING_SWPRINTFS	stb/deprecated/stb.h	/^   #define _CRT_NON_CONFORMING_SWPRINTFS$/;"	d
_CRT_NON_CONFORMING_SWPRINTFS	stb/tests/prerelease/stb_lib.h	/^   #define _CRT_NON_CONFORMING_SWPRINTFS$/;"	d
_CRT_NON_CONFORMING_SWPRINTFS	stb/tests/test_ds.c	/^#define _CRT_NON_CONFORMING_SWPRINTFS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/deprecated/stb.h	/^   #define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/deprecated/stb_image.c	/^#define _CRT_SECURE_NO_WARNINGS /;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/stb_c_lexer.h	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/stb_ds.h	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/stb_image_write.h	/^   #define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/stb_tilemap_editor.h	/^  #define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/tests/prerelease/stb_lib.h	/^   #define _CRT_SECURE_NO_WARNINGS$/;"	d
_CRT_SECURE_NO_WARNINGS	stb/tests/resample_test.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/tests/stb.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/tests/test_ds.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/tests/test_truetype.c	/^  #define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	stb/tests/truetype_test_win32.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_MKDIRS	Makefile	/^_MKDIRS := $(shell mkdir -p $(BINDIR) $(WWWDIR) $(BUILDDIR))$/;"	m
_WIN32_WINNT	stb/tests/caveview/cave_main.c	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	stb/tests/caveview/win32/SDL_windows_main.c	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	stb/tests/oversample/stb_wingraph.h	/^   #define _WIN32_WINNT /;"	d
__STB_INCLUDE_STB_TRUETYPE_H__	stb/stb_truetype.h	/^#define __STB_INCLUDE_STB_TRUETYPE_H__$/;"	d
__anon008e12ab0108	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0208	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0308	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0408	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0508	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0608	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab070a	stb/stb_vorbis.c	/^{$/;"	u	file:
__anon008e12ab0808	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0908	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0a08	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0b08	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0c08	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0d08	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0e08	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab0f03	stb/stb_vorbis.c	/^{$/;"	g	file:
__anon008e12ab1008	stb/stb_vorbis.c	/^{$/;"	s	file:
__anon008e12ab110a	stb/stb_vorbis.c	/^   typedef union {$/;"	u	file:
__anon257c0e9b0103	stb/tests/caveview/cave_mesher.c	/^{$/;"	g	file:
__anon257c0e9b0208	stb/tests/caveview/cave_mesher.c	/^{$/;"	s	file:
__anon412b11070108	stb/stb_herringbone_wang_tile.h	/^{$/;"	s
__anon412b11070208	stb/stb_herringbone_wang_tile.h	/^{$/;"	s
__anon673bf3e30108	stb/stb_easy_font.h	/^{$/;"	s
__anon6cf133e80108	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	s	function:churn	file:
__anon6cf133e80208	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	s	function:churn_stats	file:
__anon6cf133e80308	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	s	function:build	file:
__anon6cf133e80408	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	s	function:build_stb	file:
__anon6cf133e80508	stb/tests/test_ds_cpp.cpp	/^  struct { unsigned int key,value; } *map=NULL;$/;"	s	function:churn_skip	file:
__anon6cf133e80608	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[8]; } str32;$/;"	s	file:
__anon6cf133e80708	stb/tests/test_ds_cpp.cpp	/^  struct { str32 key; int value; } *map=NULL;$/;"	s	function:churn32	file:
__anon6cf133e80808	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[32]; } str256;$/;"	s	file:
__anon6cf133e80908	stb/tests/test_ds_cpp.cpp	/^  struct { str256 key; int value; } *map=NULL;$/;"	s	function:churn256	file:
__anon6cf133e80a08	stb/tests/test_ds_cpp.cpp	/^  struct { size_t key,value; } *map=NULL;$/;"	s	function:churn8	file:
__anon6e5b45070103	stb/stb_rect_pack.h	/^{$/;"	g
__anon6e5b45070203	stb/stb_rect_pack.h	/^{$/;"	g
__anon6e5b45070308	stb/stb_rect_pack.h	/^{$/;"	s
__anon773b6f930108	stb/stb_hexwave.h	/^{$/;"	s
__anon773b6f930208	stb/stb_hexwave.h	/^{$/;"	s
__anon773b6f930308	stb/stb_hexwave.h	/^{$/;"	s
__anon77ab60dd0108	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0208	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0308	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0408	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0508	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0603	stb/stb_truetype.h	/^   enum {$/;"	g
__anon77ab60dd0708	stb/stb_truetype.h	/^   {$/;"	s
__anon77ab60dd0808	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd0903	stb/stb_truetype.h	/^enum { \/\/ platformID$/;"	g
__anon77ab60dd0a03	stb/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_UNICODE$/;"	g
__anon77ab60dd0b03	stb/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MICROSOFT$/;"	g
__anon77ab60dd0c03	stb/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes$/;"	g
__anon77ab60dd0d03	stb/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...$/;"	g
__anon77ab60dd0e03	stb/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MAC$/;"	g
__anon77ab60dd0f08	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd1008	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd1108	stb/stb_truetype.h	/^{$/;"	s
__anon77ab60dd1208	stb/stb_truetype.h	/^{$/;"	s
__anon7e6d9c060108	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:churn	file:
__anon7e6d9c060208	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:churn_stats	file:
__anon7e6d9c060308	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:build	file:
__anon7e6d9c060408	stb/tests/test_ds.c	/^  struct { int key,value; } *hash[50000];$/;"	s	function:multisearch	file:
__anon7e6d9c060508	stb/tests/test_ds.c	/^  struct { unsigned int key,value; } *map=NULL;$/;"	s	function:churn_skip	file:
__anon7e6d9c060608	stb/tests/test_ds.c	/^typedef struct { int n[8]; } str32;$/;"	s	file:
__anon7e6d9c060708	stb/tests/test_ds.c	/^  struct { str32 key; int value; } *map=NULL;$/;"	s	function:churn32	file:
__anon7e6d9c060808	stb/tests/test_ds.c	/^typedef struct { int n[32]; } str256;$/;"	s	file:
__anon7e6d9c060908	stb/tests/test_ds.c	/^  struct { str256 key; int value; } *map=NULL;$/;"	s	function:churn256	file:
__anon7e6d9c060a08	stb/tests/test_ds.c	/^  struct { size_t key,value; } *map=NULL;$/;"	s	function:churn8	file:
__anon7e6d9c060b08	stb/tests/test_ds.c	/^  struct { int key,value; } *map[50000];$/;"	s	function:multichurn4	file:
__anon7e6d9c060c08	stb/tests/test_ds.c	/^struct {$/;"	s	file:
__anon7e6d9c060d08	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:measure_build4	file:
__anon7e6d9c060e08	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:measure_average_lookup4	file:
__anon7e6d9c060f08	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:measure_worst_lookup4_a	file:
__anon7e6d9c061008	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:measure_worst_lookup4_b	file:
__anon7e6d9c061108	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	s	function:measure_uncached_lookup4	file:
__anon8ac3718c0111	render-surface.cpp	/^namespace {$/;"	n	file:
__anon9409ffb90103	stb/deprecated/stb_image.c	/^{$/;"	g	file:
__anon9409ffb90208	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90308	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90403	stb/deprecated/stb_image.c	/^{$/;"	g	file:
__anon9409ffb90508	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90608	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90708	stb/deprecated/stb_image.c	/^   {$/;"	s	struct:__anon9409ffb90608	file:
__anon9409ffb90808	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90908	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90a08	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90b08	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90c08	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon9409ffb90d03	stb/deprecated/stb_image.c	/^enum {$/;"	g	file:
__anon9409ffb90e08	stb/deprecated/stb_image.c	/^{$/;"	s	file:
__anon97bba3320108	stb/tools/build_matrix.c	/^{$/;"	s	file:
__anon97bba3320208	stb/tools/build_matrix.c	/^{$/;"	s	file:
__anon97bba3320303	stb/tools/build_matrix.c	/^enum { NONE, IN_COMPILERS, IN_ARGS, IN_PROJECTS, IN_LINK };$/;"	g	file:
__anon9cbc07790108	stb/tests/stb.c	/^typedef struct { unsigned short x,y,z; } struct1;$/;"	s	file:
__anon9cbc07790208	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	s	file:
__anon9cbc07790308	stb/tests/stb.c	/^{$/;"	s	file:
__anon9df40e5c0108	stb/tests/textedit_sample.c	/^{$/;"	s	file:
__anon9f50dc2a0103	stb/tests/oversample/stb_wingraph.h	/^{$/;"	g
__anon9f50dc2a0203	stb/tests/oversample/stb_wingraph.h	/^{$/;"	g
__anon9f50dc2a0308	stb/tests/oversample/stb_wingraph.h	/^{$/;"	s
__anon9f50dc2a0408	stb/tests/oversample/stb_wingraph.h	/^{$/;"	s
__anona15bb9d20108	stb/stb_ds.h	/^{$/;"	s
__anona15bb9d20203	stb/stb_ds.h	/^{$/;"	g
__anona15bb9d20308	stb/stb_ds.h	/^{$/;"	s
__anona15bb9d20408	stb/stb_ds.h	/^{$/;"	s
__anona15bb9d20508	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	s
__anona15bb9d20608	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	s
__anona458f2750108	stb/tools/unicode.c	/^{$/;"	s	file:
__anona458f2750208	stb/tools/unicode.c	/^{$/;"	s	file:
__anona458f2750308	stb/tools/unicode.c	/^{$/;"	s	file:
__anona458f2750408	stb/tools/unicode.c	/^{$/;"	s	file:
__anona458f2750508	stb/tools/unicode.c	/^{$/;"	s	file:
__anona458f2750608	stb/tools/unicode.c	/^{$/;"	s	file:
__anonb02522120108	stb/tests/caveview/cave_parse.c	/^{$/;"	s	file:
__anonb02522120208	stb/tests/caveview/cave_parse.c	/^{$/;"	s	file:
__anonb02522120308	stb/tests/caveview/cave_parse.c	/^{$/;"	s	file:
__anonb02522120403	stb/tests/caveview/cave_parse.c	/^enum { TAG_End=0, TAG_Byte=1, TAG_Short=2, TAG_Int=3, TAG_Long=4,$/;"	g	file:
__anonb02522120508	stb/tests/caveview/cave_parse.c	/^{$/;"	s	file:
__anonb02522170108	stb/tests/caveview/cave_parse.h	/^{$/;"	s
__anonb02522170208	stb/tests/caveview/cave_parse.h	/^{$/;"	s
__anonb02522170308	stb/tests/caveview/cave_parse.h	/^{$/;"	s
__anonb04bb6e60108	stb/stb_textedit.h	/^{$/;"	s
__anonb04bb6e60208	stb/stb_textedit.h	/^{$/;"	s
__anonb04bb6e60308	stb/stb_textedit.h	/^{$/;"	s
__anonb04bb6e60408	stb/stb_textedit.h	/^{$/;"	s
__anonb04bb6e60508	stb/stb_textedit.h	/^{$/;"	s
__anonb1ccf5010108	stb/stb_sprintf.h	/^{$/;"	s
__anonb2174fab0108	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[4]; } stb__4;$/;"	s
__anonb2174fab0208	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[8]; } stb__8;$/;"	s
__anonb2174fab0308	stb/tests/prerelease/stb_lib.h	/^{$/;"	s
__anonb59f51af0103	stb/stb_image_resize.h	/^{$/;"	g
__anonb59f51af0203	stb/stb_image_resize.h	/^{$/;"	g
__anonb59f51af0303	stb/stb_image_resize.h	/^{$/;"	g
__anonb59f51af0403	stb/stb_image_resize.h	/^{$/;"	g
__anonb59f51af0508	stb/stb_image_resize.h	/^{$/;"	s
__anonb59f51af0608	stb/stb_image_resize.h	/^{$/;"	s
__anonb59f51af0708	stb/stb_image_resize.h	/^{$/;"	s
__anonb59f51af080a	stb/stb_image_resize.h	/^{$/;"	u
__anonb6d309d70103	stb/tests/caveview/cave_render.c	/^{$/;"	g	file:
__anonb6d309d70208	stb/tests/caveview/cave_render.c	/^{$/;"	s	file:
__anonb6d309d70308	stb/tests/caveview/cave_render.c	/^{$/;"	s	file:
__anonb6d309d70403	stb/tests/caveview/cave_render.c	/^{$/;"	g	file:
__anonb6d309d70508	stb/tests/caveview/cave_render.c	/^{$/;"	s	file:
__anonbb4db7480108	stb/stb_image_write.h	/^{$/;"	s
__anonbd4d158d0103	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0208	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d0303	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0403	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0503	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0608	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d0703	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0803	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0903	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0a03	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0b03	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d0c08	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d0d08	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d0e08	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d0f08	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d1003	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d1103	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d120a	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	u	function:stbte__extract_float
__anonbd4d158d130a	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	u	function:stbte__extract_short
__anonbd4d158d1403	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d1508	stb/stb_tilemap_editor.h	/^{$/;"	s
__anonbd4d158d1603	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonbd4d158d1703	stb/stb_tilemap_editor.h	/^{$/;"	g
__anonc0c3bd380108	stb/tests/sdf/sdf_test.c	/^{$/;"	s	file:
__anonc1feb0a80103	stb/stb_voxel_render.h	/^{                              \/\/  ------------------------------------------------$/;"	g
__anonc1feb0a80203	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80303	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80403	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80508	stb/stb_voxel_render.h	/^{$/;"	s
__anonc1feb0a80603	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80703	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80803	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80903	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80a08	stb/stb_voxel_render.h	/^   {$/;"	s
__anonc1feb0a80b03	stb/stb_voxel_render.h	/^{$/;"	g
__anonc1feb0a80c08	stb/stb_voxel_render.h	/^{$/;"	s
__anonc1feb0a80d08	stb/stb_voxel_render.h	/^{$/;"	s
__anonc1feb0a80e03	stb/stb_voxel_render.h	/^{$/;"	g
__anonc22370580108	stb/tests/caveview/caveview.h	/^{$/;"	s
__anonc3e085de0103	stb/stb_image.h	/^{$/;"	g
__anonc3e085de0208	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0308	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0403	stb/stb_image.h	/^{$/;"	g
__anonc3e085de0508	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0603	stb/stb_image.h	/^{$/;"	g
__anonc3e085de0708	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0808	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0908	stb/stb_image.h	/^   {$/;"	s	struct:__anonc3e085de0808
__anonc3e085de0a08	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0b08	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0c08	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0d08	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0e08	stb/stb_image.h	/^{$/;"	s
__anonc3e085de0f03	stb/stb_image.h	/^enum {$/;"	g
__anonc3e085de1008	stb/stb_image.h	/^{$/;"	s
__anonc3e085de1108	stb/stb_image.h	/^{$/;"	s
__anonc3e085de1208	stb/stb_image.h	/^{$/;"	s
__anonc3e085de1308	stb/stb_image.h	/^{$/;"	s
__anonc58d97050108	stb/tools/easy_font_maker.c	/^{$/;"	s	file:
__anonc58d97050208	stb/tools/easy_font_maker.c	/^{$/;"	s	file:
__anonc6c173d30108	stb/stb_connected_components.h	/^{$/;"	s
__anonc6c173d3020a	stb/stb_connected_components.h	/^{$/;"	u
__anonc6c173d30308	stb/stb_connected_components.h	/^   struct {$/;"	s	union:__anonc6c173d3020a
__anonc6c173d30408	stb/stb_connected_components.h	/^{$/;"	s
__anonc6c173d30508	stb/stb_connected_components.h	/^{$/;"	s
__anonc6c173d30608	stb/stb_connected_components.h	/^{$/;"	s
__anonc6c173d30708	stb/stb_connected_components.h	/^{$/;"	s
__anonc6c173d30808	stb/stb_connected_components.h	/^{$/;"	s
__anond138acff0108	stb/stb_include.h	/^{$/;"	s
__anond2ba22070111	render-shapes.cpp	/^namespace {$/;"	n	file:
__anond2ba22070211	render-shapes.cpp	/^namespace {$/;"	n	file:
__anondb2f75c60108	stb/tests/grid_reachability.c	/^{$/;"	s	file:
__anone270de390103	stb/tests/caveview/stb_gl.h	/^{$/;"	g
__anone321a15d0108	stb/stb_c_lexer.h	/^{$/;"	s
__anone321a15d0208	stb/stb_c_lexer.h	/^{$/;"	s
__anone321a15d0303	stb/stb_c_lexer.h	/^{$/;"	g
__anonf78e452d0111	render-sprites.cpp	/^namespace {$/;"	n	file:
__anonf78e452d0211	render-sprites.cpp	/^namespace {$/;"	n	file:
__anonfcac0af00108	stb/tests/test_cpp_compilation.cpp	/^{$/;"	s	file:
__anonfe33527c010a	stb/deprecated/stb.h	/^{$/;"	u
__anonfe33527c0208	stb/deprecated/stb.h	/^typedef struct { char d[4]; } stb__4;$/;"	s
__anonfe33527c0308	stb/deprecated/stb.h	/^typedef struct { char d[8]; } stb__8;$/;"	s
__anonfe33527c0408	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0503	stb/deprecated/stb.h	/^{$/;"	g
__anonfe33527c0608	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0708	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0808	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0903	stb/deprecated/stb.h	/^{$/;"	g
__anonfe33527c0a08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0b08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0c08	stb/deprecated/stb.h	/^typedef struct {$/;"	s
__anonfe33527c0d08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0e08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c0f08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1003	stb/deprecated/stb.h	/^{$/;"	g
__anonfe33527c1108	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1208	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1308	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1408	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1508	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1608	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1703	stb/deprecated/stb.h	/^{$/;"	g
__anonfe33527c1808	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1908	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1a08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1b08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1c08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1d08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1e08	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c1f0a	stb/deprecated/stb.h	/^   union {$/;"	u	struct:stbfile
__anonfe33527c2008	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2108	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2208	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2308	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2408	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2508	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2608	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c2703	stb/deprecated/stb.h	/^{$/;"	g
__anonfe33527c2808	stb/deprecated/stb.h	/^{$/;"	s
__anonfe33527c290a	stb/deprecated/stb.h	/^   union {$/;"	u	struct:__anonfe33527c2808
__anonfe33527c2a08	stb/deprecated/stb.h	/^{$/;"	s
__forceinline	stb/stb_vorbis.c	/^      #define __forceinline /;"	d	file:
__forceinline	stb/stb_vorbis.c	/^      #define __forceinline$/;"	d	file:
__forceinline	stb/stb_vorbis.c	/^   #define __forceinline$/;"	d	file:
__glext_h_	stb/tests/caveview/glext.h	/^#define __glext_h_ /;"	d
a	render-shapes.h	/^  float r, g, b, a;$/;"	m	struct:Shape	typeref:typename:float
a	stb/deprecated/stb.h	/^   void *a;$/;"	m	struct:__anonfe33527c0d08	typeref:typename:void *
a	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
a	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	m	struct:__anon9cbc07790208	typeref:typename:double	file:
acc	stb/stb_vorbis.c	/^   uint32 acc;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
accum	stb/tests/oversample/stb_wingraph.h	/^   int   color, alpha, depth, stencil, accum;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
accum_x	stb/stb_tilemap_editor.h	/^   int accum_x, accum_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
accum_y	stb/stb_tilemap_editor.h	/^   int accum_x, accum_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
active	stb/deprecated/stb.h	/^   stb_uint8 active; \/\/ is this in the active list$/;"	m	struct:__anonfe33527c1d08	typeref:typename:stb_uint8
active	stb/stb_tilemap_editor.h	/^   int active;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:int
active	stb/tests/oversample/stb_wingraph.h	/^   int   active;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
active_control_clear	stb/tests/caveview/cave_main.c	/^void active_control_clear(int key)$/;"	f	typeref:typename:void
active_control_set	stb/tests/caveview/cave_main.c	/^void active_control_set(int key)$/;"	f	typeref:typename:void
active_event	stb/stb_tilemap_editor.h	/^   int tool, active_event;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
active_head	stb/stb_rect_pack.h	/^   stbrp_node *active_head;$/;"	m	struct:stbrp_context	typeref:typename:stbrp_node *
active_id	stb/stb_tilemap_editor.h	/^   int active_id, hot_id, next_hot_id;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
add	stb/deprecated/stb.h	/^   stb_mutex add, remove;$/;"	m	struct:stb__threadqueue	typeref:typename:stb_mutex
add_entry	stb/stb_vorbis.c	/^static void add_entry(Codebook *c, uint32 huff_code, int symbol, int count, int len, uint32 *val/;"	f	typeref:typename:void	file:
add_seg	stb/tools/easy_font_maker.c	/^void add_seg(int x, int y, int len, int horizontal)$/;"	f	typeref:typename:void
addend	stb/deprecated/stb.h	/^   stb_uint32  addend;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint32
adjacency_storage	stb/stb_connected_components.h	/^   stbcc__relative_clumpid adjacency_storage[STBCC__CLUSTER_ADJACENCY_COUNT]; \/\/ 256 bytes$/;"	m	struct:__anonc6c173d30508	typeref:typename:stbcc__relative_clumpid[]
adjacent_clump_list_index	stb/stb_connected_components.h	/^   unsigned char adjacent_clump_list_index;   \/\/ 1$/;"	m	struct:__anonc6c173d30408	typeref:typename:unsigned char
advance	stb/stb_easy_font.h	/^    unsigned char advance;$/;"	m	struct:stb_easy_font_info_struct	typeref:typename:unsigned char
advance	stb/stb_truetype.h	/^   int advance;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
advance	stb/tests/sdf/sdf_test.c	/^   float advance;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:float	file:
advance	stb/tools/easy_font_maker.c	/^   unsigned char advance:5;$/;"	m	struct:__anonc58d97050108	typeref:typename:unsigned char:5	file:
alert_msg	stb/stb_tilemap_editor.h	/^   const char *alert_msg;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:const char *
alert_timer	stb/stb_tilemap_editor.h	/^   float alert_timer;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:float
align	stb/stb_rect_pack.h	/^   int align;$/;"	m	struct:stbrp_context	typeref:typename:int
aligned	stb/tools/unicode.c	/^   uint8 aligned;$/;"	m	struct:__anona458f2750508	typeref:typename:uint8	file:
all	Makefile	/^all: $(BINDIR)\/main$/;"	t
all	stb/tests/Makefile	/^all:$/;"	t
all_a	stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonc3e085de1008	typeref:typename:unsigned int
alloc	stb/deprecated/stb.h	/^   int                alloc;$/;"	m	struct:stb__chunk	typeref:typename:int
alloc	stb/stb_vorbis.c	/^   stb_vorbis_alloc alloc;$/;"	m	struct:stb_vorbis	typeref:typename:stb_vorbis_alloc	file:
alloc_buffer	stb/stb_vorbis.c	/^   char *alloc_buffer;$/;"	m	struct:__anon008e12ab0108	typeref:typename:char *	file:
alloc_buffer_length_in_bytes	stb/stb_vorbis.c	/^   int   alloc_buffer_length_in_bytes;$/;"	m	struct:__anon008e12ab0108	typeref:typename:int	file:
alloc_num	stb/tests/stb.c	/^int alloc_num, alloc_size;$/;"	v	typeref:typename:int
alloc_size	stb/tests/stb.c	/^int alloc_num, alloc_size;$/;"	v	typeref:typename:int
alloca	stb/stb_vorbis.c	/^   #define alloca /;"	d	file:
allocations	stb/deprecated/stb.h	/^   short              allocations; \/\/ # outstanding allocations for sizeclass$/;"	m	struct:stb__span	typeref:typename:short
allow_link	stb/tests/tilemap_editor_integration_example.c	/^static int allow_link(short *src, short *dest)$/;"	f	typeref:typename:int	file:
alpha	stb/tests/oversample/stb_wingraph.h	/^   int   color, alpha, depth, stencil, accum;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
alpha_channel	stb/stb_image_resize.h	/^    int alpha_channel;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
alt	stb/tests/oversample/stb_wingraph.h	/^   int shift, ctrl, alt;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
amplitude_bits	stb/stb_vorbis.c	/^   uint8 amplitude_bits;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint8	file:
amplitude_offset	stb/stb_vorbis.c	/^   uint8 amplitude_offset;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint8	file:
angle	stb/stb_vorbis.c	/^   uint8 angle;$/;"	m	struct:__anon008e12ab0908	typeref:typename:uint8	file:
any_offset	stb/deprecated/stb.h	/^   int any_offset;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
app	stb/tests/truetype_test_win32.c	/^HINSTANCE app;$/;"	v	typeref:typename:HINSTANCE
app14_color_transform	stb/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
args	stb/tests/stb.c	/^char *args[8];$/;"	v	typeref:typename:char * [8]
args	stb/tools/build_matrix.c	/^   char *args;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
args_raw	stb/tests/stb.c	/^char *args_raw[] = { "foo", "-dxrf", "bar", "-ts" };$/;"	v	typeref:typename:char * []
arraddn	stb/stb_ds.h	/^#define arraddn /;"	d
arraddnindex	stb/stb_ds.h	/^#define arraddnindex /;"	d
arraddnptr	stb/stb_ds.h	/^#define arraddnptr /;"	d
array_length	stb/stb_voxel_render.h	/^   int array_length;            \/\/ length of the uniform array$/;"	m	struct:stbvox_uniform_info	typeref:typename:int
array_of_unicode_codepoints	stb/stb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode co/;"	m	struct:__anon77ab60dd0508	typeref:typename:int *
array_size	stb/deprecated/stb.h	/^   int head, tail, array_size, growable;$/;"	m	struct:stb__threadqueue	typeref:typename:int
array_size_required	stb/stb_vorbis.c	/^#define array_size_required(/;"	d	file:
arrcap	stb/stb_ds.h	/^#define arrcap /;"	d
arrdel	stb/stb_ds.h	/^#define arrdel /;"	d
arrdeln	stb/stb_ds.h	/^#define arrdeln /;"	d
arrdelswap	stb/stb_ds.h	/^#define arrdelswap /;"	d
arrfree	stb/stb_ds.h	/^#define arrfree /;"	d
arrins	stb/stb_ds.h	/^#define arrins /;"	d
arrinsn	stb/stb_ds.h	/^#define arrinsn /;"	d
arrlast	stb/stb_ds.h	/^#define arrlast /;"	d
arrlen	stb/stb_ds.h	/^#define arrlen /;"	d
arrlenu	stb/stb_ds.h	/^#define arrlenu /;"	d
arrpop	stb/stb_ds.h	/^#define arrpop /;"	d
arrpush	stb/stb_ds.h	/^#define arrpush /;"	d
arrput	stb/stb_ds.h	/^#define arrput /;"	d
arrsetcap	stb/stb_ds.h	/^#define arrsetcap /;"	d
arrsetlen	stb/stb_ds.h	/^#define arrsetlen /;"	d
at_eof	stb/deprecated/stb_image.c	/^stbi_inline static int at_eof(stbi *s)$/;"	f	typeref:typename:stbi_inline int	file:
atlas	atlas.cpp	/^  SDL_Surface* atlas;$/;"	m	struct:AtlasImpl	typeref:typename:SDL_Surface *	file:
atlas	render-sprites.cpp	/^  Atlas atlas;$/;"	m	struct:RenderSpritesImpl	typeref:typename:Atlas	file:
b	render-shapes.h	/^  float r, g, b, a;$/;"	m	struct:Shape	typeref:typename:float
b	stb/deprecated/stb.h	/^   unsigned short b;$/;"	m	struct:__anonfe33527c0c08	typeref:typename:unsigned short
b	stb/deprecated/stb.h	/^   void *b;$/;"	m	struct:__anonfe33527c0d08	typeref:typename:void *
b	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	m	struct:__anona15bb9d20508	typeref:typename:int
b	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	m	struct:__anona15bb9d20608	typeref:typename:int
b	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
b	stb/stb_voxel_render.h	/^   unsigned char r,g,b;$/;"	m	struct:__anonc1feb0a80508	typeref:typename:unsigned char
b_mask	stb/deprecated/stb.h	/^   stb_uint    b_mask;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint
background	stb/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc *
background_tile	stb/stb_tilemap_editor.h	/^    short background_tile;$/;"	m	struct:stbte_tilemap	typeref:typename:short
backpatch	stb/deprecated/stb.h	/^   void (*backpatch)(struct stbfile *, unsigned int tell, void *block, unsigned int len);$/;"	m	struct:stbfile	typeref:typename:void (*)(struct stbfile *,unsigned int tell,void * block,unsigned int len)
bark_map_size	stb/stb_vorbis.c	/^   uint16 bark_map_size;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint16	file:
baseline	font.cpp	/^  int baseline;$/;"	m	struct:FontImpl	typeref:typename:int	file:
baseline_y_delta	stb/stb_textedit.h	/^   float baseline_y_delta;  \/\/ position of baseline relative to previous row's baseline$/;"	m	struct:__anonb04bb6e60408	typeref:typename:float
batchfile	stb/tools/build_matrix.c	/^   char *batchfile;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
begin	stb/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint32	file:
begin	stb/tests/test_ds.c	/^void begin(void)$/;"	f	typeref:typename:void
begin	stb/tests/test_ds_cpp.cpp	/^void begin(void)$/;"	f	typeref:typename:void
bgindex	stb/deprecated/stb_image.c	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
bgindex	stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
bit_reverse	stb/deprecated/stb_image.c	/^stbi_inline static int bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int	file:
bit_reverse	stb/stb_vorbis.c	/^   uint16 *bit_reverse[2];$/;"	m	struct:stb_vorbis	typeref:typename:uint16 * [2]	file:
bit_reverse	stb/stb_vorbis.c	/^static unsigned int bit_reverse(unsigned int n)$/;"	f	typeref:typename:unsigned int	file:
bitcount	stb/deprecated/stb_image.c	/^static int bitcount(unsigned int a)$/;"	f	typeref:typename:int	file:
bitmap	stb/tests/sdf/sdf_test.c	/^unsigned char bitmap[BITMAP_H][BITMAP_W][3];$/;"	v	typeref:typename:unsigned char[][][3]
bitrev	stb/stb_vorbis.c	/^  int   *bitrev;$/;"	m	struct:__anon008e12ab1008	typeref:typename:int *	file:
bitreverse16	stb/deprecated/stb_image.c	/^stbi_inline static int bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int	file:
bits_per_channel	stb/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anonc3e085de0508	typeref:typename:int
black_on_white	stb/tests/oversample/main.c	/^int black_on_white;$/;"	v	typeref:typename:int
blamp	stb/stb_hexwave.h	/^   float *blamp;$/;"	m	struct:__anon773b6f930208	typeref:typename:float *
blend_pixel	stb/tests/sdf/sdf_test.c	/^void blend_pixel(int x, int y, int color, float alpha)$/;"	f	typeref:typename:void
blep	stb/stb_hexwave.h	/^   float *blep;$/;"	m	struct:__anon773b6f930208	typeref:typename:float *
block	stb/stb_ds.h	/^  unsigned char block;$/;"	m	struct:stbds_string_arena	typeref:typename:unsigned char
block	stb/stb_voxel_render.h	/^   unsigned char block:2;$/;"	m	struct:__anonc1feb0a80c08	typeref:typename:unsigned char:2
block	stb/tests/caveview/cave_parse.h	/^   unsigned char block;$/;"	m	struct:__anonb02522170108	typeref:typename:unsigned char
block_color	stb/stb_voxel_render.h	/^   unsigned char *block_color;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_color_face	stb/stb_voxel_render.h	/^   unsigned char (*block_color_face)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
block_geometry	stb/stb_voxel_render.h	/^   unsigned char *block_geometry;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_selector	stb/stb_voxel_render.h	/^   unsigned char *block_selector;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_side_texrot	stb/stb_voxel_render.h	/^   unsigned char *block_side_texrot;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_tex1	stb/stb_voxel_render.h	/^   unsigned char *block_tex1;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_tex1_face	stb/stb_voxel_render.h	/^   unsigned char (*block_tex1_face)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
block_tex2	stb/stb_voxel_render.h	/^   unsigned char *block_tex2;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_tex2_face	stb/stb_voxel_render.h	/^   unsigned char (*block_tex2_face)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
block_texlerp	stb/stb_voxel_render.h	/^   unsigned char *block_texlerp;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
block_texlerp_face	stb/stb_voxel_render.h	/^   unsigned char (*block_texlerp_face)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
block_vheight	stb/stb_voxel_render.h	/^   unsigned char *block_vheight;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
blockdata	stb/tests/caveview/cave_parse.h	/^   unsigned char *blockdata[NUM_SEGMENTS];$/;"	m	struct:__anonb02522170308	typeref:typename:unsigned char * []
blockflag	stb/stb_vorbis.c	/^   uint8 blockflag;$/;"	m	struct:__anon008e12ab0b08	typeref:typename:uint8	file:
blocksize	stb/stb_vorbis.c	/^   int blocksize[2];$/;"	m	struct:stb_vorbis	typeref:typename:int[2]	file:
blocksize_0	stb/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
blocksize_1	stb/stb_vorbis.c	/^   int blocksize_0, blocksize_1;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
blocktype	stb/stb_voxel_render.h	/^   stbvox_block_type *blocktype;$/;"	m	struct:stbvox_input_description	typeref:typename:stbvox_block_type *
bmask	stb/deprecated/stb_image.c	/^static stbi__uint32 bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,6553/;"	v	typeref:typename:stbi__uint32[17]	file:
bmp_load	stb/deprecated/stb_image.c	/^static stbi_uc *bmp_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
bmp_test	stb/deprecated/stb_image.c	/^static int bmp_test(stbi *s)$/;"	f	typeref:typename:int	file:
book_list	stb/stb_vorbis.c	/^   uint8 book_list[16]; \/\/ varies$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint8[16]	file:
bottom_y	stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon77ab60dd1108	typeref:typename:int
bounds	stb/stb_truetype.h	/^   int bounds;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:int
bounds	stb/tests/caveview/cave_render.c	/^   float bounds[2][3];$/;"	m	struct:__anonb6d309d70208	typeref:typename:float[2][3]	file:
bounds	stb/tests/caveview/caveview.h	/^   float bounds[2][3];$/;"	m	struct:__anonc22370580108	typeref:typename:float[2][3]
bpp	stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonc3e085de1008	typeref:typename:int
brush_state	stb/stb_tilemap_editor.h	/^   int brush_state; \/\/ used to decide which kind of erasing$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
bst_test	stb/tests/stb.c	/^void bst_test(void)$/;"	f	typeref:typename:stb_bst (Btest,btest_,BT2,bt2,v,int,a-b)void
buf	stb/deprecated/rrsprintf.h	/^  char * buf;$/;"	m	struct:RRCCS	typeref:typename:char *
buf	stb/stb_sprintf.h	/^   char *buf;$/;"	m	struct:stbsp__context	typeref:typename:char *
buf_used	stb/stb_image_write.h	/^   int buf_used;$/;"	m	struct:__anonbb4db7480108	typeref:typename:int
buffer	stb/deprecated/stb.h	/^   stb_uchar *buffer;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:stb_uchar *
buffer	stb/deprecated/stb.h	/^   unsigned char *buffer; \/\/ input\/output buffer$/;"	m	struct:stbfile	typeref:typename:unsigned char *
buffer	stb/stb_ds.h	/^static char buffer[256];$/;"	v	typeref:typename:char[256]
buffer	stb/stb_hexwave.h	/^   float buffer[STB_HEXWAVE_MAX_BLEP_LENGTH];$/;"	m	struct:HexWave	typeref:typename:float[]
buffer	stb/stb_image_write.h	/^   unsigned char buffer[64];$/;"	m	struct:__anonbb4db7480108	typeref:typename:unsigned char[64]
buffer	stb/tests/stb.c	/^char buffer[] = STR_1 "\\r\\n" STR_2 STR_2 STR_2 "\\n" STR_3;$/;"	v	typeref:typename:char[]
buffer	tetris.cpp	/^  unsigned int buffer;$/;"	m	struct:TetrisImpl	typeref:typename:unsigned int	file:
buffer_end	stb/tests/caveview/cave_parse.c	/^   unsigned char *buffer_end;$/;"	m	struct:__anonb02522120308	typeref:typename:unsigned char *	file:
buffer_start	stb/deprecated/stb_image.c	/^   stbi__uint8 buffer_start[128];$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint8[128]	file:
buffer_start	stb/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_uc[128]
buffer_start	stb/tests/caveview/cave_parse.c	/^   unsigned char *buffer_start;$/;"	m	struct:__anonb02522120308	typeref:typename:unsigned char *	file:
buffered_u8	stb/deprecated/stb.h	/^   int buffered_u8;$/;"	m	struct:__anonfe33527c2008	typeref:typename:int
buflen	stb/deprecated/stb_image.c	/^   int buflen;$/;"	m	struct:__anon9409ffb90308	typeref:typename:int	file:
buflen	stb/stb_image.h	/^   int buflen;$/;"	m	struct:__anonc3e085de0308	typeref:typename:int
build	stb/tests/test_ds.c	/^void build(int a, int b, int count, int step)$/;"	f	typeref:typename:void
build	stb/tests/test_ds_cpp.cpp	/^void build(int a, int b, int count, int step)$/;"	f	typeref:typename:void
build_base_texture	stb/tests/caveview/cave_render.c	/^void build_base_texture(int n)$/;"	f	typeref:typename:void
build_buffer	stb/tests/caveview/cave_mesher.c	/^uint8 build_buffer[BUILD_BUFFER_SIZE];$/;"	v	typeref:typename:uint8[]
build_buffer	stb/tests/caveview/cave_render.c	/^   uint8 *build_buffer;$/;"	m	struct:__anonb6d309d70308	typeref:typename:uint8 *	file:
build_buffer	stb/tests/caveview/caveview.h	/^   uint8 *build_buffer;$/;"	m	struct:__anonc22370580108	typeref:typename:uint8 *
build_chunk	stb/tests/caveview/cave_mesher.c	/^void build_chunk(int chunk_x, int chunk_y, fast_chunk *fc_table[4][4], raw_mesh *rm)$/;"	f	typeref:typename:void
build_huffman	stb/deprecated/stb_image.c	/^static int build_huffman(huffman *h, int *count)$/;"	f	typeref:typename:int	file:
build_overlay_texture	stb/tests/caveview/cave_render.c	/^void build_overlay_texture(int n)$/;"	f	typeref:typename:void
build_stair_rotations	stb/tests/caveview/cave_mesher.c	/^void build_stair_rotations(int blocktype, unsigned char *map)$/;"	f	typeref:typename:void
build_stb	stb/tests/test_ds.c	/^void build_stb(int a, int b, int count, int step)$/;"	f	typeref:typename:void
build_stb	stb/tests/test_ds_cpp.cpp	/^void build_stb(int a, int b, int count, int step)$/;"	f	typeref:typename:void
build_wood_variations	stb/tests/caveview/cave_mesher.c	/^void build_wood_variations(int bt, unsigned char *map)$/;"	f	typeref:typename:void
build_wool_variations	stb/tests/caveview/cave_mesher.c	/^void build_wool_variations(int bt, unsigned char *map)$/;"	f	typeref:typename:void
bytes_done	stb/stb_vorbis.c	/^   int     bytes_done;  \/\/ bytes processed in _current_ chunk$/;"	m	struct:__anon008e12ab0c08	typeref:typename:int	file:
bytes_in_seg	stb/stb_vorbis.c	/^   uint8 bytes_in_seg;$/;"	m	struct:stb_vorbis	typeref:typename:uint8	file:
bytes_left	stb/stb_vorbis.c	/^   int     bytes_left;  \/\/ bytes left in packet$/;"	m	struct:__anon008e12ab0c08	typeref:typename:int	file:
bytes_per_element	stb/stb_voxel_render.h	/^   int bytes_per_element;       \/\/ the size of each uniform array element (e.g. vec3 = 12 byte/;"	m	struct:stbvox_uniform_info	typeref:typename:int
c	stb/stb_connected_components.h	/^   unsigned int c;$/;"	m	union:__anonc6c173d3020a	typeref:typename:unsigned int
c	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	m	struct:__anona15bb9d20508	typeref:typename:int
c	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	m	struct:__anona15bb9d20608	typeref:typename:int
c	stb/stb_easy_font.h	/^   unsigned char c[4];$/;"	m	struct:__anon673bf3e30108	typeref:typename:unsigned char[4]
c	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
c	stb/stb_herringbone_wang_tile.h	/^   stbhw_config *c;$/;"	m	struct:stbhw__process	typeref:typename:stbhw_config *
c	stb/tests/stb.c	/^void c(int truth, char *error)$/;"	f	typeref:typename:void
c	stb/tests/stb_cpp.cpp	/^void c(int truth, const char *error)$/;"	f	typeref:typename:void
c_color	stb/stb_herringbone_wang_tile.h	/^static signed char c_color[STB_HBWANG_MAX_Y+6][STB_HBWANG_MAX_X+6];$/;"	v	typeref:typename:signed char[][]
cache_index	stb/tests/test_ds.c	/^static int cache_index;$/;"	v	typeref:typename:int	file:
cache_size	stb/tests/caveview/cave_mesher.c	/^int cache_size = CHUNK_CACHE;$/;"	v	typeref:typename:int
cached_chunk	stb/tests/caveview/cave_parse.c	/^compressed_chunk *cached_chunk[NUM_CACHED_Z][NUM_CACHED_X];$/;"	v	typeref:typename:compressed_chunk * [][]
cached_chunk_mesh	stb/tests/caveview/cave_render.c	/^chunk_mesh cached_chunk_mesh[CACHED_MESH_NUM_Y][CACHED_MESH_NUM_X];$/;"	v	typeref:typename:chunk_mesh[][]
cached_compressed	stb/tests/caveview/cave_parse.c	/^size_t cached_compressed=0;$/;"	v	typeref:typename:size_t
cached_converted_chunk	stb/tests/caveview/cave_mesher.c	/^} cached_converted_chunk;$/;"	t	typeref:struct:__anon257c0e9b0208	file:
callback_already_read	stb/stb_image.h	/^   int callback_already_read;$/;"	m	struct:__anonc3e085de0308	typeref:typename:int
calloc	stb/deprecated/stb.h	/^   #define calloc(/;"	d
calloc	stb/deprecated/stb.h	/^#define calloc /;"	d
cam_vel	stb/tests/caveview/cave_main.c	/^float cam_vel[3];$/;"	v	typeref:typename:float[3]
camang	stb/tests/caveview/cave_main.c	/^float camang[3], camloc[3] = { 60,22,77 };$/;"	v	typeref:typename:float[3]
camera_to_worldspace	stb/tests/caveview/cave_main.c	/^void camera_to_worldspace(float world[3], float cam_x, float cam_y, float cam_z)$/;"	f	typeref:typename:void
camloc	stb/tests/caveview/cave_main.c	/^float camang[3], camloc[3] = { 60,22,77 };$/;"	v	typeref:typename:float[3]
canvas	emscripten-shell.html	/^    <canvas id="canvas" oncontextmenu="event.preventDefault()"><\/canvas>$/;"	I
capacity	stb/stb_ds.h	/^  size_t      capacity;$/;"	m	struct:__anona15bb9d20108	typeref:typename:size_t
capture_pattern	stb/stb_vorbis.c	/^static int capture_pattern(vorb *f)$/;"	f	typeref:typename:int	file:
carried_dt	stb/tests/caveview/cave_main.c	/^float carried_dt = 0;$/;"	v	typeref:typename:float
categories	stb/stb_tilemap_editor.h	/^    char *categories[STBTE_MAX_CATEGORIES];$/;"	m	struct:stbte_tilemap	typeref:typename:char * []
category	stb/stb_tilemap_editor.h	/^   char *category;$/;"	m	struct:__anonbd4d158d0608	typeref:typename:char *
category_id	stb/stb_tilemap_editor.h	/^   unsigned short category_id;$/;"	m	struct:__anonbd4d158d0608	typeref:typename:unsigned short
category_scroll	stb/stb_tilemap_editor.h	/^    int num_categories, category_scroll;$/;"	m	struct:stbte_tilemap	typeref:typename:int
cb_buf_clamp	stb/deprecated/rrsprintf.h	/^    #define cb_buf_clamp(/;"	d
cdata	glwrappers.cpp	/^stbtt_bakedchar cdata[96]; \/\/ ASCII 32..126 is 95 glyphs$/;"	v	typeref:typename:stbtt_bakedchar[96]
cdata	stb/tests/test_truetype.c	/^stbtt_bakedchar cdata[256*2]; \/\/ ASCII 32..126 is 95 glyphs$/;"	v	typeref:typename:stbtt_bakedchar[]
cdata	stb/tests/truetype_test_win32.c	/^stbtt_bakedchar cdata[96]; \/\/ ASCII 32..126 is 95 glyphs$/;"	v	typeref:typename:stbtt_bakedchar[96]
cff	stb/stb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
ch	stb/stb_connected_components.h	/^   int w,h,cw,ch;$/;"	m	struct:st_stbcc_grid	typeref:typename:int
chan	stb/stb_vorbis.c	/^   MappingChannel *chan;$/;"	m	struct:__anon008e12ab0a08	typeref:typename:MappingChannel *	file:
channel	stb/deprecated/stb_image.c	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon9409ffb90e08	typeref:typename:stbi_uc	file:
channel	stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc3e085de1108	typeref:typename:stbi_uc
channel_buffer_end	stb/stb_vorbis.c	/^   int channel_buffer_end;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
channel_buffer_start	stb/stb_vorbis.c	/^   int channel_buffer_start;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
channel_buffers	stb/stb_vorbis.c	/^   float *channel_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	typeref:typename:float * []	file:
channel_order	stb/stb_image.h	/^   int channel_order;$/;"	m	struct:__anonc3e085de0508	typeref:typename:int
channel_position	stb/stb_vorbis.c	/^static int8 channel_position[7][6] =$/;"	v	typeref:typename:int8[7][6]	file:
channels	stb/stb_image_resize.h	/^    int channels;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
channels	stb/stb_vorbis.c	/^   int channels;$/;"	m	struct:__anon008e12ab0208	typeref:typename:int	file:
channels	stb/stb_vorbis.c	/^   int channels;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
char_range	stb/tools/unicode.c	/^} char_range;$/;"	t	typeref:struct:__anona458f2750608	file:
char_storage	stb/stb_textedit.h	/^   int                        char_storage;$/;"	m	struct:__anonb04bb6e60108	typeref:typename:int
chardata	stb/tests/oversample/main.c	/^stbtt_packedchar chardata[6][128];$/;"	v	typeref:typename:stbtt_packedchar[6][128]
chardata	stb/tools/easy_font_maker.c	/^} chardata;$/;"	t	typeref:struct:__anonc58d97050108	file:
chardata_for_range	stb/stb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anon77ab60dd0508	typeref:typename:stbtt_packedchar *
charinfo	stb/tools/easy_font_maker.c	/^chardata charinfo[128];$/;"	v	typeref:typename:chardata[128]
charset	stb/deprecated/stb.h	/^   stb_uint32 *charset;$/;"	m	struct:stb_matcher	typeref:typename:stb_uint32 *
charstrings	stb/stb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
chash	stb/deprecated/stb.h	/^   stb_uchar **chash;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:stb_uchar **
check_endianness	stb/stb_vorbis.c	/^   #define check_endianness(/;"	d	file:
check_png_header	stb/deprecated/stb_image.c	/^static int check_png_header(stbi *s)$/;"	f	typeref:typename:int	file:
child	stb/deprecated/stb.h	/^   void *  child;$/;"	m	struct:__anonfe33527c0708	typeref:typename:void *
children	stb/deprecated/stb.h	/^   stb__memory_leaf *children[STB__NPTR_NODE_NUM];$/;"	m	struct:__anonfe33527c0f08	typeref:typename:stb__memory_leaf * []
chk_cb_buf	stb/deprecated/rrsprintf.h	/^    #define chk_cb_buf(/;"	d
chk_cb_bufL	stb/deprecated/rrsprintf.h	/^    #define chk_cb_bufL(/;"	d
chunk	stb/deprecated/stb_image.c	/^} chunk;$/;"	t	typeref:struct:__anon9409ffb90b08	file:
chunk	stb/tests/caveview/cave_parse.h	/^} chunk;$/;"	t	typeref:struct:__anonb02522170208
chunk_action	stb/tests/caveview/cave_render.c	/^   int chunk_action;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
chunk_cache	stb/tests/caveview/cave_mesher.c	/^cached_converted_chunk chunk_cache[CHUNK_CACHE][CHUNK_CACHE];$/;"	v	typeref:typename:cached_converted_chunk[][]
chunk_cache_mutex	stb/tests/caveview/cave_mesher.c	/^SDL_mutex * chunk_cache_mutex;$/;"	v	typeref:typename:SDL_mutex *
chunk_get_mutex	stb/tests/caveview/cave_mesher.c	/^SDL_mutex * chunk_get_mutex;$/;"	v	typeref:typename:SDL_mutex *
chunk_locations	stb/tests/caveview/cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
chunk_mesh	stb/tests/caveview/cave_render.c	/^} chunk_mesh;$/;"	t	typeref:struct:__anonb6d309d70208	file:
chunk_request_x	stb/tests/caveview/cave_render.c	/^   int chunk_request_x;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
chunk_request_y	stb/tests/caveview/cave_render.c	/^   int chunk_request_y;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
chunk_server_activity	stb/tests/caveview/cave_render.c	/^float chunk_server_activity;$/;"	v	typeref:typename:float
chunk_server_done_processing	stb/tests/caveview/cave_render.c	/^   SDL_sem * chunk_server_done_processing;$/;"	m	struct:__anonb6d309d70308	typeref:typename:SDL_sem *	file:
chunk_server_pos	stb/tests/caveview/cave_main.c	/^int chunk_server_pos;$/;"	v	typeref:typename:int
chunk_server_status	stb/tests/caveview/cave_main.c	/^float chunk_server_status[32];$/;"	v	typeref:typename:float[32]
chunk_storage_considered	stb/tests/caveview/cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_storage_rendered	stb/tests/caveview/cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_storage_total	stb/tests/caveview/cave_render.c	/^int chunk_storage_rendered, chunk_storage_considered, chunk_storage_total;$/;"	v	typeref:typename:int
chunk_x	stb/tests/caveview/cave_mesher.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon257c0e9b0208	typeref:typename:int	file:
chunk_x	stb/tests/caveview/cave_render.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
chunk_y	stb/tests/caveview/cave_mesher.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anon257c0e9b0208	typeref:typename:int	file:
chunk_y	stb/tests/caveview/cave_render.c	/^   int chunk_x, chunk_y;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
chunks	stb/deprecated/stb.h	/^   stb__chunk *chunks;$/;"	m	struct:__anonfe33527c0708	typeref:typename:stb__chunk *
chunks	stb/tests/caveview/cave_render.c	/^   fast_chunk *chunks[4][4];$/;"	m	struct:__anonb6d309d70308	typeref:typename:fast_chunk * [4][4]	file:
chunks_considered	stb/tests/caveview/cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
chunks_in_frustum	stb/tests/caveview/cave_render.c	/^int chunk_locations, chunks_considered, chunks_in_frustum;$/;"	v	typeref:typename:int
churn	stb/tests/test_ds.c	/^void churn(int a, int b, int count)$/;"	f	typeref:typename:void
churn	stb/tests/test_ds_cpp.cpp	/^void churn(int a, int b, int count)$/;"	f	typeref:typename:void
churn256	stb/tests/test_ds.c	/^void churn256(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn256	stb/tests/test_ds_cpp.cpp	/^void churn256(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn32	stb/tests/test_ds.c	/^void churn32(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn32	stb/tests/test_ds_cpp.cpp	/^void churn32(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn8	stb/tests/test_ds.c	/^void churn8(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn8	stb/tests/test_ds_cpp.cpp	/^void churn8(int a, int b, int count, int include_startup)$/;"	f	typeref:typename:void
churn_deletes	stb/tests/test_ds.c	/^size_t churn_inserts, churn_deletes;$/;"	v	typeref:typename:size_t
churn_deletes	stb/tests/test_ds_cpp.cpp	/^size_t churn_inserts, churn_deletes;$/;"	v	typeref:typename:size_t
churn_inserts	stb/tests/test_ds.c	/^size_t churn_inserts, churn_deletes;$/;"	v	typeref:typename:size_t
churn_inserts	stb/tests/test_ds_cpp.cpp	/^size_t churn_inserts, churn_deletes;$/;"	v	typeref:typename:size_t
churn_misses	stb/tests/test_ds.c	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
churn_misses	stb/tests/test_ds_cpp.cpp	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
churn_skip	stb/tests/test_ds.c	/^void churn_skip(unsigned int a, unsigned int b, int count)$/;"	f	typeref:typename:void
churn_skip	stb/tests/test_ds_cpp.cpp	/^void churn_skip(unsigned int a, unsigned int b, int count)$/;"	f	typeref:typename:void
churn_stats	stb/tests/test_ds.c	/^void churn_stats(int a, int b, int count)$/;"	f	typeref:typename:void
churn_stats	stb/tests/test_ds_cpp.cpp	/^void churn_stats(int a, int b, int count)$/;"	f	typeref:typename:void
clamp	stb/deprecated/stb_image.c	/^stbi_inline static stbi__uint8 clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi__uint8	file:
class_dimensions	stb/stb_vorbis.c	/^   uint8 class_dimensions[16]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[16]	file:
class_masterbooks	stb/stb_vorbis.c	/^   uint8 class_masterbooks[16]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[16]	file:
class_subclasses	stb/stb_vorbis.c	/^   uint8 class_subclasses[16]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[16]	file:
classbook	stb/stb_vorbis.c	/^   uint8 classbook;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint8	file:
classdata	stb/stb_vorbis.c	/^   uint8 **classdata;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint8 **	file:
classifications	stb/stb_vorbis.c	/^   uint8 classifications;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint8	file:
clean	Makefile	/^clean:$/;"	t
cleanup_jpeg	stb/deprecated/stb_image.c	/^static void cleanup_jpeg(jpeg *j)$/;"	f	typeref:typename:void	file:
close	stb/deprecated/stb.h	/^   void (*close)(struct stbfile *);$/;"	m	struct:stbfile	typeref:typename:void (*)(struct stbfile *)
close_on_free	stb/stb_vorbis.c	/^   int close_on_free;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
clump	stb/stb_connected_components.h	/^   stbcc__clump clump[STBCC__MAX_CLUMPS_PER_CLUSTER];       \/\/ 8 * 2^9 = 4KB$/;"	m	struct:__anonc6c173d30508	typeref:typename:stbcc__clump[]
clump_for_node	stb/stb_connected_components.h	/^   stbcc__clumpid clump_for_node[STBCC__GRID_COUNT_Y][STBCC__GRID_COUNT_X];  \/\/ 1K x 1K x 2 = /;"	m	struct:st_stbcc_grid	typeref:typename:stbcc__clumpid[][]
clump_index	stb/stb_connected_components.h	/^      unsigned int clump_index:12;$/;"	m	struct:__anonc6c173d3020a::__anonc6c173d30308	typeref:typename:unsigned int:12
clump_index	stb/stb_connected_components.h	/^   unsigned int clump_index;$/;"	m	struct:__anonc6c173d30808	typeref:typename:unsigned int
clump_index	stb/stb_connected_components.h	/^   unsigned short clump_index:12;$/;"	m	struct:__anonc6c173d30108	typeref:typename:unsigned short:12
cluster	stb/stb_connected_components.h	/^   stbcc__cluster cluster[STBCC__CLUSTER_COUNT_Y][STBCC__CLUSTER_COUNT_X]; \/\/  1K x 4.5KB = 4./;"	m	struct:st_stbcc_grid	typeref:typename:stbcc__cluster[][]
cluster_dx	stb/stb_connected_components.h	/^     signed short cluster_dx:2;$/;"	m	struct:__anonc6c173d30108	typeref:typename:signed short:2
cluster_dy	stb/stb_connected_components.h	/^     signed short cluster_dy:2;$/;"	m	struct:__anonc6c173d30108	typeref:typename:signed short:2
cluster_x	stb/stb_connected_components.h	/^      unsigned int cluster_x:10;$/;"	m	struct:__anonc6c173d3020a::__anonc6c173d30308	typeref:typename:unsigned int:10
cluster_x	stb/stb_connected_components.h	/^   unsigned int cluster_x;$/;"	m	struct:__anonc6c173d30808	typeref:typename:unsigned int
cluster_y	stb/stb_connected_components.h	/^      unsigned int cluster_y:10;$/;"	m	struct:__anonc6c173d3020a::__anonc6c173d30308	typeref:typename:unsigned int:10
cluster_y	stb/stb_connected_components.h	/^   unsigned int cluster_y;$/;"	m	struct:__anonc6c173d30808	typeref:typename:unsigned int
code	stb/deprecated/stb.h	/^   unsigned int code, range; \/\/ decode$/;"	m	struct:__anonfe33527c2008	typeref:typename:unsigned int
code	stb/deprecated/stb_image.c	/^   stbi__uint16 code[256];$/;"	m	struct:__anon9409ffb90508	typeref:typename:stbi__uint16[256]	file:
code	stb/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anonc3e085de0708	typeref:typename:stbi__uint16[256]
code_bits	stb/deprecated/stb_image.c	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
code_bits	stb/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
code_buffer	stb/deprecated/stb_image.c	/^   stbi__uint32         code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon9409ffb90608	typeref:typename:stbi__uint32	file:
code_buffer	stb/deprecated/stb_image.c	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:stbi__uint32	file:
code_buffer	stb/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__uint32
code_buffer	stb/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:stbi__uint32
codebook_count	stb/stb_vorbis.c	/^   int codebook_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
codebook_decode	stb/stb_vorbis.c	/^static int codebook_decode(vorb *f, Codebook *c, float *output, int len)$/;"	f	typeref:typename:int	file:
codebook_decode_deinterleave_repeat	stb/stb_vorbis.c	/^static int codebook_decode_deinterleave_repeat(vorb *f, Codebook *c, float **outputs, int ch, in/;"	f	typeref:typename:int	file:
codebook_decode_scalar	stb/stb_vorbis.c	/^static int codebook_decode_scalar(vorb *f, Codebook *c)$/;"	f	typeref:typename:int	file:
codebook_decode_scalar_raw	stb/stb_vorbis.c	/^static int codebook_decode_scalar_raw(vorb *f, Codebook *c)$/;"	f	typeref:typename:int	file:
codebook_decode_start	stb/stb_vorbis.c	/^static int codebook_decode_start(vorb *f, Codebook *c)$/;"	f	typeref:typename:int	file:
codebook_decode_step	stb/stb_vorbis.c	/^static int codebook_decode_step(vorb *f, Codebook *c, float *output, int len, int step)$/;"	f	typeref:typename:int	file:
codebooks	stb/stb_vorbis.c	/^   Codebook *codebooks;$/;"	m	struct:stb_vorbis	typeref:typename:Codebook *	file:
codes	stb/deprecated/stb_image.c	/^   stbi_gif_lzw codes[4096];$/;"	m	struct:stbi_gif_struct	typeref:typename:stbi_gif_lzw[4096]	file:
codes	stb/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi__gif_lzw[8192]
codetype	stb/stb_vorbis.c	/^typedef float codetype;$/;"	t	typeref:typename:float	file:
codeword_lengths	stb/stb_vorbis.c	/^   uint8 *codeword_lengths;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint8 *	file:
codewords	stb/stb_vorbis.c	/^   uint32 *codewords;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint32 *	file:
coeff	stb/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:short *
coeff_h	stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
coeff_w	stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
color	render-shapes.cpp	/^    GLfloat color[4];$/;"	m	struct:__anond2ba22070111::Attributes	typeref:typename:GLfloat[4]	file:
color	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1,color;$/;"	m	struct:__anonbd4d158d0d08	typeref:typename:int
color	stb/stb_voxel_render.h	/^      unsigned char tex1,tex2,color,face_info;$/;"	m	struct:__anonc1feb0a80a08	typeref:typename:unsigned char
color	stb/stb_voxel_render.h	/^   unsigned char *color;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
color	stb/tests/grid_reachability.c	/^uint32 color[1024][1024];$/;"	v	typeref:typename:uint32[1024][1024]
color	stb/tests/oversample/stb_wingraph.h	/^   int   color, alpha, depth, stencil, accum;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
color2	stb/stb_voxel_render.h	/^   unsigned char *color2;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
color2_facemask	stb/stb_voxel_render.h	/^   unsigned char *color2_facemask;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
color3	stb/stb_voxel_render.h	/^   unsigned char *color3;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
color3_facemask	stb/stb_voxel_render.h	/^   unsigned char *color3_facemask;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
color_table	stb/deprecated/stb_image.c	/^   stbi__uint8 *color_table;$/;"	m	struct:stbi_gif_struct	typeref:typename:stbi__uint8 *	file:
color_table	stb/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc *
colorspace	stb/stb_image_resize.h	/^    stbir_colorspace colorspace;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_colorspace
comment_list	stb/stb_vorbis.c	/^   char **comment_list;$/;"	m	struct:__anon008e12ab0308	typeref:typename:char **	file:
comment_list	stb/stb_vorbis.c	/^   char **comment_list;$/;"	m	struct:stb_vorbis	typeref:typename:char **	file:
comment_list_length	stb/stb_vorbis.c	/^   int comment_list_length;$/;"	m	struct:__anon008e12ab0308	typeref:typename:int	file:
comment_list_length	stb/stb_vorbis.c	/^   int comment_list_length;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
compile_shader	shader_utils.cpp	/^static unsigned int compile_shader(unsigned int type,$/;"	f	typeref:typename:unsigned int	file:
compiler	stb/tools/build_matrix.c	/^   char *compiler;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
compiler_info	stb/tools/build_matrix.c	/^} compiler_info;$/;"	t	typeref:struct:__anon97bba3320108	file:
compiler_name	stb/tools/build_matrix.c	/^   char *compiler_name;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
compilers	stb/tools/build_matrix.c	/^compiler_info *compilers;$/;"	v	typeref:typename:compiler_info *
compressed_chunk	stb/tests/caveview/cave_parse.c	/^} compressed_chunk;$/;"	t	typeref:struct:__anonb02522120108	file:
compute_accelerated_huffman	stb/stb_vorbis.c	/^static void compute_accelerated_huffman(Codebook *c)$/;"	f	typeref:typename:void	file:
compute_bitreverse	stb/stb_vorbis.c	/^static void compute_bitreverse(int n, uint16 *rev)$/;"	f	typeref:typename:void	file:
compute_codewords	stb/stb_vorbis.c	/^static int compute_codewords(Codebook *c, uint8 *len, int n, uint32 *values)$/;"	f	typeref:typename:int	file:
compute_frustum	stb/tests/caveview/cave_render.c	/^static void compute_frustum(void)$/;"	f	typeref:typename:void	file:
compute_huffman_codes	stb/deprecated/stb_image.c	/^static int compute_huffman_codes(zbuf *a)$/;"	f	typeref:typename:int	file:
compute_priority	stb/tests/caveview/cave_render.c	/^float compute_priority(int cx, int cy, float x, float y)$/;"	f	typeref:typename:float
compute_samples	stb/stb_vorbis.c	/^static void compute_samples(int mask, short *output, int num_c, float **data, int d_offset, int /;"	f	typeref:typename:void	file:
compute_sorted_huffman	stb/stb_vorbis.c	/^static void compute_sorted_huffman(Codebook *c, uint8 *lengths, uint32 *values)$/;"	f	typeref:typename:void	file:
compute_stereo_samples	stb/stb_vorbis.c	/^static void compute_stereo_samples(short *output, int num_c, float **data, int d_offset, int len/;"	f	typeref:typename:void	file:
compute_transparency	stb/deprecated/stb_image.c	/^static int compute_transparency(png *z, stbi__uint8 tc[3], int out_n)$/;"	f	typeref:typename:int	file:
compute_twiddle_factors	stb/stb_vorbis.c	/^static void compute_twiddle_factors(int n, float *A, float *B, float *C)$/;"	f	typeref:typename:void	file:
compute_window	stb/stb_vorbis.c	/^static void compute_window(int n, float *window)$/;"	f	typeref:typename:void	file:
compute_y	stb/deprecated/stb_image.c	/^static stbi__uint8 compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi__uint8	file:
config_dirty	stb/stb_voxel_render.h	/^   int config_dirty;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
console_main	stb/tests/caveview/win32/SDL_windows_main.c	/^#define console_main /;"	d	file:
console_main	stb/tests/caveview/win32/SDL_windows_main.c	/^console_main(int argc, char *argv[])$/;"	f	typeref:typename:int
consume1	stb/tests/stb.c	/^void *consume1(void *p)$/;"	f	typeref:typename:void *
context	stb/stb_image_write.h	/^   void *context;$/;"	m	struct:__anonbb4db7480108	typeref:typename:void *
context	stb/tests/caveview/cave_main.c	/^static SDL_GLContext *context;$/;"	v	typeref:typename:SDL_GLContext *	file:
context	window.cpp	/^  GlContext context;$/;"	m	struct:WindowImpl	typeref:typename:GlContext	file:
context_initialized	window.cpp	/^  bool context_initialized;$/;"	m	struct:WindowImpl	typeref:typename:bool	file:
controls	stb/tests/caveview/cave_main.c	/^int controls;$/;"	v	typeref:typename:int
convert_channels_short_interleaved	stb/stb_vorbis.c	/^static void convert_channels_short_interleaved(int buf_c, short *buffer, int data_c, float **dat/;"	f	typeref:typename:void	file:
convert_fastchunk_inplace	stb/tests/caveview/cave_mesher.c	/^void convert_fastchunk_inplace(fast_chunk *fc)$/;"	f	typeref:typename:void
convert_format	stb/deprecated/stb_image.c	/^static unsigned char *convert_format(unsigned char *data, int img_n, int req_comp, unsigned int /;"	f	typeref:typename:unsigned char *	file:
convert_image	stb/tests/resample_test.cpp	/^void convert_image(const F* input, T* output, int length)$/;"	f	typeref:typename:void
convert_image_float	stb/tests/resample_test.cpp	/^void convert_image_float(const float* input, unsigned char* output, int length)$/;"	f	typeref:typename:void
convert_image_float	stb/tests/resample_test.cpp	/^void convert_image_float(const unsigned char* input, float* output, int length)$/;"	f	typeref:typename:void
convert_samples_short	stb/stb_vorbis.c	/^static void convert_samples_short(int buf_c, short **buffer, int b_offset, int data_c, float **d/;"	f	typeref:typename:void	file:
copy_has_props	stb/stb_tilemap_editor.h	/^   int copy_width,copy_height,has_copy,copy_has_props;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
copy_height	stb/stb_tilemap_editor.h	/^   int copy_width,copy_height,has_copy,copy_has_props;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
copy_samples	stb/stb_vorbis.c	/^static void copy_samples(short *dest, float *src, int len)$/;"	f	typeref:typename:void	file:
copy_src	stb/stb_tilemap_editor.h	/^   stbte_tilemap *copy_src;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:stbte_tilemap *
copy_src_x	stb/stb_tilemap_editor.h	/^   int copy_src_x, copy_src_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
copy_src_y	stb/stb_tilemap_editor.h	/^   int copy_src_x, copy_src_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
copy_width	stb/stb_tilemap_editor.h	/^   int copy_width,copy_height,has_copy,copy_has_props;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
copybuffer	stb/stb_tilemap_editor.h	/^   short copybuffer[STBTE_MAX_COPY][STBTE_MAX_LAYERS];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:short[][]
copylinks	stb/stb_tilemap_editor.h	/^   stbte__link copylinks[STBTE_MAX_COPY];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:stbte__link[]
copyprops	stb/stb_tilemap_editor.h	/^   float copyprops[STBTE_MAX_COPY][STBTE_MAX_PROPERTIES];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:float[][]
corner	render-sprites.cpp	/^  GLfloat corner[2];   \/\/ location of corner relative to center, in world coords$/;"	m	struct:Attributes	typeref:typename:GLfloat[2]	file:
corner_index	render-sprites.cpp	/^  static const GLushort corner_index[6] = { 0, 1, 2, 2, 1, 3 };$/;"	v	namespace:__anonf78e452d0211	typeref:typename:const GLushort[6]	file:
corner_type_color_template	stb/stb_herringbone_wang_tile.h	/^   int corner_type_color_template[4][4];$/;"	m	struct:__anon412b11070208	typeref:typename:int[4][4]
count	stb/deprecated/rrsprintf.h	/^  int count;$/;"	m	struct:RRCCS	typeref:typename:int
count	stb/deprecated/stb.h	/^   int count, count_deletes;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
count	stb/deprecated/stb.h	/^   int count;$/;"	m	struct:__anonfe33527c1908	typeref:typename:int
count	stb/deprecated/stb.h	/^   unsigned short count;$/;"	m	struct:__anonfe33527c0c08	typeref:typename:unsigned short
count	stb/stb_sprintf.h	/^   int count;$/;"	m	struct:stbsp__context	typeref:typename:int
count	stb/tests/stb.c	/^int count;$/;"	v	typeref:typename:int
count	stb/tests/stb_cpp.cpp	/^int count;$/;"	v	typeref:typename:int
count	stb/tests/test_ds.c	/^unsigned __int64 t0, xsum, mn,mx,count;$/;"	v	typeref:typename:unsigned __int64
count	stb/tests/test_ds_cpp.cpp	/^size_t t0, sum, mn,mx,count;$/;"	v	typeref:typename:size_t
count_deletes	stb/deprecated/stb.h	/^   int count, count_deletes;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
countdown	stb/deprecated/stb.h	/^   int countdown;$/;"	m	struct:__anonfe33527c2208	typeref:typename:int
coupling_steps	stb/stb_vorbis.c	/^   uint16 coupling_steps;$/;"	m	struct:__anon008e12ab0a08	typeref:typename:uint16	file:
crc32_init	stb/stb_vorbis.c	/^static void crc32_init(void)$/;"	f	typeref:typename:void	file:
crc32_update	stb/stb_vorbis.c	/^static __forceinline uint32 crc32_update(uint32 crc, uint8 byte)$/;"	f	typeref:typename:uint32	file:
crc_so_far	stb/stb_vorbis.c	/^   uint32  crc_so_far;  \/\/ running crc$/;"	m	struct:__anon008e12ab0c08	typeref:typename:uint32	file:
crc_table	stb/stb_vorbis.c	/^static uint32 crc_table[256];$/;"	v	typeref:typename:uint32[256]	file:
create_png_image	stb/deprecated/stb_image.c	/^static int create_png_image(png *a, stbi__uint8 *raw, stbi__uint32 raw_len, int out_n, int inter/;"	f	typeref:typename:int	file:
create_png_image_raw	stb/deprecated/stb_image.c	/^static int create_png_image_raw(png *a, stbi__uint8 *raw, stbi__uint32 raw_len, int out_n, stbi_/;"	f	typeref:typename:int	file:
create_program	shader_utils.cpp	/^unsigned int create_program(const std::string& vertex_path,$/;"	f	typeref:typename:unsigned int
ctrl	stb/tests/oversample/stb_wingraph.h	/^   int shift, ctrl, alt;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
cube_vertex_offset	stb/stb_voxel_render.h	/^   int cube_vertex_offset[6][4]; \/\/ this allows access per-vertex data stored block-centered (/;"	m	struct:stbvox_mesh_maker	typeref:typename:int[6][4]
cumfreq	stb/deprecated/stb.h	/^   unsigned short cumfreq;$/;"	m	struct:__anonfe33527c2108	typeref:typename:unsigned short
cur	stb/tests/caveview/cave_parse.c	/^   unsigned char *cur;$/;"	m	struct:__anonb02522120308	typeref:typename:unsigned char *	file:
cur_category	stb/stb_tilemap_editor.h	/^    int cur_category, cur_tile, cur_layer;$/;"	m	struct:stbte_tilemap	typeref:typename:int
cur_layer	stb/stb_tilemap_editor.h	/^    int cur_category, cur_tile, cur_layer;$/;"	m	struct:stbte_tilemap	typeref:typename:int
cur_palette_count	stb/stb_tilemap_editor.h	/^    int cur_palette_count;$/;"	m	struct:stbte_tilemap	typeref:typename:int
cur_tile	stb/stb_tilemap_editor.h	/^    int cur_category, cur_tile, cur_layer;$/;"	m	struct:stbte_tilemap	typeref:typename:int
cur_x	stb/deprecated/stb_image.c	/^   int cur_x, cur_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
cur_x	stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
cur_x	stb/stb_voxel_render.h	/^   int cur_x, cur_y, cur_z;       \/\/ last unprocessed voxel if it splits into multiple buffers$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
cur_y	stb/deprecated/stb_image.c	/^   int cur_x, cur_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
cur_y	stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
cur_y	stb/stb_voxel_render.h	/^   int cur_x, cur_y, cur_z;       \/\/ last unprocessed voxel if it splits into multiple buffers$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
cur_z	stb/stb_voxel_render.h	/^   int cur_x, cur_y, cur_z;       \/\/ last unprocessed voxel if it splits into multiple buffers$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
current	stb/stb_hexwave.h	/^   HexWaveParameters current, pending;$/;"	m	struct:HexWave	typeref:typename:HexWaveParameters
current_loc	stb/stb_vorbis.c	/^   uint32 current_loc; \/\/ sample location of next frame to decode$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
current_loc_valid	stb/stb_vorbis.c	/^   int    current_loc_valid;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
cursor	stb/stb_textedit.h	/^   int cursor;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:int
cursor	stb/stb_truetype.h	/^   int cursor;$/;"	m	struct:__anon77ab60dd0108	typeref:typename:int
cursor_at_end_of_line	stb/stb_textedit.h	/^   unsigned char cursor_at_end_of_line; \/\/ not implemented yet$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
cw	stb/stb_connected_components.h	/^   int w,h,cw,ch;$/;"	m	struct:st_stbcc_grid	typeref:typename:int
cx	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
cx	stb/tests/caveview/cave_parse.c	/^   int cx,cz;$/;"	m	struct:__anonb02522120508	typeref:typename:int	file:
cx	stb/tests/caveview/caveview.h	/^   int cx,cy;$/;"	m	struct:__anonc22370580108	typeref:typename:int
cx1	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
cy	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
cy	stb/tests/caveview/caveview.h	/^   int cx,cy;$/;"	m	struct:__anonc22370580108	typeref:typename:int
cy1	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
cz	stb/tests/caveview/cave_parse.c	/^   int cx,cz;$/;"	m	struct:__anonb02522120508	typeref:typename:int	file:
d	stb/deprecated/stb.h	/^   void *d;$/;"	m	struct:__anonfe33527c2308	typeref:typename:void *
d	stb/deprecated/stb.h	/^   void *d;$/;"	m	struct:__anonfe33527c2408	typeref:typename:void *
d	stb/deprecated/stb.h	/^typedef struct { char d[4]; } stb__4;$/;"	m	struct:__anonfe33527c0208	typeref:typename:char[4]
d	stb/deprecated/stb.h	/^typedef struct { char d[8]; } stb__8;$/;"	m	struct:__anonfe33527c0308	typeref:typename:char[8]
d	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	m	struct:__anona15bb9d20508	typeref:typename:int
d	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	m	struct:__anona15bb9d20608	typeref:typename:int
d	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
d	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[4]; } stb__4;$/;"	m	struct:__anonb2174fab0108	typeref:typename:char[4]
d	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[8]; } stb__8;$/;"	m	struct:__anonb2174fab0208	typeref:typename:char[8]
data	stb/deprecated/stb.h	/^   char *data;$/;"	m	struct:stb__threadqueue	typeref:typename:char *
data	stb/deprecated/stb.h	/^   stb__cfg_item *data;$/;"	m	struct:stb_cfg_st	typeref:typename:stb__cfg_item *
data	stb/deprecated/stb.h	/^   stb_arith_symstate_item data[1];$/;"	m	struct:__anonfe33527c2208	typeref:typename:stb_arith_symstate_item[1]
data	stb/deprecated/stb_image.c	/^      stbi__uint8 *data;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:stbi__uint8 *	file:
data	stb/stb_herringbone_wang_tile.h	/^   unsigned char *data;$/;"	m	struct:stbhw__process	typeref:typename:unsigned char *
data	stb/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:stbi_uc *
data	stb/stb_tilemap_editor.h	/^    stbte__tiledata data[STBTE_MAX_TILEMAP_Y][STBTE_MAX_TILEMAP_X][STBTE_MAX_LAYERS];$/;"	m	struct:stbte_tilemap	typeref:typename:stbte__tiledata[][][]
data	stb/stb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo	typeref:typename:unsigned char *
data	stb/stb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anon77ab60dd0108	typeref:typename:unsigned char *
data	stb/tests/caveview/cave_parse.c	/^   uint8 *data;$/;"	m	struct:__anonb02522120108	typeref:typename:uint8 *	file:
data	stb/tests/caveview/cave_parse.h	/^   unsigned char *data[NUM_SEGMENTS];$/;"	m	struct:__anonb02522170308	typeref:typename:unsigned char * []
data	stb/tests/caveview/cave_parse.h	/^   unsigned char data;$/;"	m	struct:__anonb02522170108	typeref:typename:unsigned char
data	stb/tests/oversample/stb_wingraph.h	/^   void *data;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:void *
data	stb/tests/sdf/sdf_test.c	/^   unsigned char *data;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:unsigned char *	file:
data	stb/tools/easy_font_maker.c	/^uint8 *data;$/;"	v	typeref:typename:uint8 *
data_left	stb/deprecated/stb.h	/^   int                data_left;$/;"	m	struct:stb__chunk	typeref:typename:int
dc	stb/tests/oversample/stb_wingraph.h	/^   HDC   dc;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:HDC
dc	stb/tests/truetype_test_win32.c	/^HDC   dc;$/;"	v	typeref:typename:HDC
dc_pred	stb/deprecated/stb_image.c	/^      int dc_pred;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
dc_pred	stb/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
dct_bfly32o	stb/stb_image.h	/^   #define dct_bfly32o(/;"	d
dct_bfly32o	stb/stb_image.h	/^#define dct_bfly32o(/;"	d
dct_const	stb/stb_image.h	/^   #define dct_const(/;"	d
dct_interleave16	stb/stb_image.h	/^   #define dct_interleave16(/;"	d
dct_interleave8	stb/stb_image.h	/^   #define dct_interleave8(/;"	d
dct_iv_slow	stb/stb_vorbis.c	/^void dct_iv_slow(float *buffer, int n)$/;"	f	typeref:typename:void
dct_long_mac	stb/stb_image.h	/^#define dct_long_mac(/;"	d
dct_long_mul	stb/stb_image.h	/^#define dct_long_mul(/;"	d
dct_pass	stb/stb_image.h	/^   #define dct_pass(/;"	d
dct_pass	stb/stb_image.h	/^#define dct_pass(/;"	d
dct_rot	stb/stb_image.h	/^   #define dct_rot(/;"	d
dct_trn16	stb/stb_image.h	/^#define dct_trn16(/;"	d
dct_trn32	stb/stb_image.h	/^#define dct_trn32(/;"	d
dct_trn64	stb/stb_image.h	/^#define dct_trn64(/;"	d
dct_trn8_16	stb/stb_image.h	/^#define dct_trn8_16(/;"	d
dct_trn8_32	stb/stb_image.h	/^#define dct_trn8_32(/;"	d
dct_trn8_8	stb/stb_image.h	/^#define dct_trn8_8(/;"	d
dct_wadd	stb/stb_image.h	/^   #define dct_wadd(/;"	d
dct_wadd	stb/stb_image.h	/^#define dct_wadd(/;"	d
dct_widen	stb/stb_image.h	/^   #define dct_widen(/;"	d
dct_widen	stb/stb_image.h	/^#define dct_widen(/;"	d
dct_wsub	stb/stb_image.h	/^   #define dct_wsub(/;"	d
dct_wsub	stb/stb_image.h	/^#define dct_wsub(/;"	d
debug	stb/tests/test_truetype.c	/^void debug(void)$/;"	f	typeref:typename:void
decode	stb/deprecated/stb_image.c	/^stbi_inline static int decode(jpeg *j, huffman *h)$/;"	f	typeref:typename:stbi_inline int	file:
decode_block	stb/deprecated/stb_image.c	/^static int decode_block(jpeg *j, short data[64], huffman *hdc, huffman *hac, int b)$/;"	f	typeref:typename:int	file:
decode_buffer	stb/stb_image_resize.h	/^    float* decode_buffer;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
decode_buffer_pixels	stb/stb_image_resize.h	/^    int decode_buffer_pixels;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
decode_buffer_size	stb/stb_image_resize.h	/^    int decode_buffer_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
decode_jpeg_header	stb/deprecated/stb_image.c	/^static int decode_jpeg_header(jpeg *z, int scan)$/;"	f	typeref:typename:int	file:
decode_jpeg_image	stb/deprecated/stb_image.c	/^static int decode_jpeg_image(jpeg *j)$/;"	f	typeref:typename:int	file:
decode_residue	stb/stb_vorbis.c	/^static void decode_residue(vorb *f, float *residue_buffers[], int ch, int n, int rn, uint8 *do_n/;"	f	typeref:typename:void	file:
decoded_buffer	stb/tests/caveview/cave_parse.c	/^} decoded_buffer;$/;"	t	typeref:struct:__anonb02522120508	file:
decoded_buffers	stb/tests/caveview/cave_parse.c	/^static decoded_buffer decoded_buffers[MAX_DECODED_CHUNK_Z][MAX_DECODED_CHUNK_X];$/;"	v	typeref:typename:decoded_buffer[][]	file:
decoded_chunks	stb/tests/caveview/cave_parse.c	/^static chunk *decoded_chunks[MAX_DECODED_CHUNK_Z][MAX_DECODED_CHUNK_X];$/;"	v	typeref:typename:chunk * [][]	file:
default_category	stb/stb_tilemap_editor.h	/^static char *default_category = (char*) "[unassigned]";$/;"	v	typeref:typename:char *
default_distance	stb/deprecated/stb_image.c	/^static stbi__uint8 default_length[288], default_distance[32];$/;"	v	typeref:typename:stbi__uint8[32]	file:
default_length	stb/deprecated/stb_image.c	/^static stbi__uint8 default_length[288], default_distance[32];$/;"	v	typeref:typename:stbi__uint8[288]	file:
default_mesh	stb/stb_voxel_render.h	/^   int default_mesh;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
default_tex_scale	stb/stb_voxel_render.h	/^   float default_tex_scale[128][2];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:float[128][2]
default_value	stb/stb_voxel_render.h	/^   float *default_value;        \/\/ if not NULL, you can use this as the uniform pointer$/;"	m	struct:stbvox_uniform_info	typeref:typename:float *
deg2rad	stb/deprecated/stb.h	/^   #define deg2rad(/;"	d
delay	stb/stb_image.h	/^   int delay;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
delaycount	stb/stb_tilemap_editor.h	/^   int delaycount;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
delayrect	stb/stb_tilemap_editor.h	/^   stbte__colorrect delayrect[STBTE__MAX_DELAYRECT];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:stbte__colorrect[]
delete_chars	stb/tests/test_cpp_compilation.cpp	/^int delete_chars(STB_TEXTEDIT_STRING *str, int pos, int num)$/;"	f	typeref:typename:int
delete_chars	stb/tests/textedit_sample.c	/^int delete_chars(STB_TEXTEDIT_STRING *str, int pos, int num)$/;"	f	typeref:typename:int
delete_length	stb/stb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  delete_length;$/;"	m	struct:__anonb04bb6e60108	typeref:typename:STB_TEXTEDIT_POSITIONTYPE
delta	stb/deprecated/stb_image.c	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon9409ffb90508	typeref:typename:int[17]	file:
delta	stb/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anonc3e085de0708	typeref:typename:int[17]
delta_height	stb/stb_tilemap_editor.h	/^   int delta_height;     \/\/ number of rows they've requested for this$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
delta_value	stb/stb_vorbis.c	/^   float  delta_value;$/;"	m	struct:__anon008e12ab0408	typeref:typename:float	file:
depth	stb/stb_image.h	/^   int depth;$/;"	m	struct:__anonc3e085de0e08	typeref:typename:int
depth	stb/tests/oversample/stb_wingraph.h	/^   int   color, alpha, depth, stencil, accum;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
depth	stb/tools/unicode.c	/^   int  depth;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
dequant	stb/deprecated/stb_image.c	/^   stbi__uint8 dequant[4][64];$/;"	m	struct:__anon9409ffb90608	typeref:typename:stbi__uint8[4][64]	file:
dequant	stb/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__uint16[4][64]
dequant2	stb/deprecated/stb_image.c	/^   unsigned short dequant2[4][64];$/;"	m	struct:__anon9409ffb90608	typeref:typename:unsigned short[4][64]	file:
deref_compressed_chunk	stb/tests/caveview/cave_parse.c	/^static void deref_compressed_chunk(compressed_chunk *cc)$/;"	f	typeref:typename:void	file:
deref_fastchunk	stb/tests/caveview/cave_mesher.c	/^void deref_fastchunk(fast_chunk *fc)$/;"	f	typeref:typename:void
dezigzag	stb/deprecated/stb_image.c	/^static stbi__uint8 dezigzag[64+15] =$/;"	v	typeref:typename:stbi__uint8[]	file:
dfa	stb/deprecated/stb.h	/^   stb_dfa    * dfa;$/;"	m	struct:stb_matcher	typeref:typename:stb_dfa *
dfa_mapping	stb/deprecated/stb.h	/^   stb_uint32 * dfa_mapping;$/;"	m	struct:stb_matcher	typeref:typename:stb_uint32 *
dfa_result	stb/deprecated/stb.h	/^   stb_int16  * dfa_result;$/;"	m	struct:stb_matcher	typeref:typename:stb_int16 *
dfa_start	stb/deprecated/stb.h	/^   stb_int16 dfa_start;$/;"	m	struct:stb_matcher	typeref:typename:stb_int16
did_share_lists	stb/tests/oversample/stb_wingraph.h	/^   int   did_share_lists;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
did_share_lists	stb/tests/oversample/stb_wingraph.h	/^   int did_share_lists;  \/\/ if true, wglShareLists succeeded$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
digest	stb/tests/stb.c	/^   char *digest;$/;"	m	struct:__anon9cbc07790308	typeref:typename:char *	file:
digits	stb/stb_tilemap_editor.h	/^    int num_tiles, max_tiles, digits;$/;"	m	struct:stbte_tilemap	typeref:typename:int
dimensions	stb/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon008e12ab0408	typeref:typename:int	file:
dir	stb/deprecated/stb.h	/^   int   dir;               \/\/ index into dirs[] array$/;"	m	struct:__anonfe33527c1408	typeref:typename:int
direction	stb/stb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
direction	stb/stb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
dirs	stb/deprecated/stb.h	/^   stb_dirtree_dir  *dirs;$/;"	m	struct:__anonfe33527c1508	typeref:typename:stb_dirtree_dir *
dirty	stb/tools/unicode.c	/^int dirty=0;$/;"	v	typeref:typename:int
discard_samples_deferred	stb/stb_vorbis.c	/^   int discard_samples_deferred;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
dist_base	stb/deprecated/stb_image.c	/^static int dist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:int[32]	file:
dist_extra	stb/deprecated/stb_image.c	/^static int dist_extra[32] =$/;"	v	typeref:typename:int[32]	file:
distance	render-shapes.cpp	/^    GLfloat distance[3];$/;"	m	struct:__anond2ba22070111::Attributes	typeref:typename:GLfloat[3]	file:
distance_from_edge_to_point	render-shapes.cpp	/^float distance_from_edge_to_point(float x1, float y1, float x2, float y2, float x, float y) {$/;"	f	typeref:typename:float
div16	stb/deprecated/stb_image.c	/^#define div16(/;"	d	file:
div4	stb/deprecated/stb_image.c	/^#define div4(/;"	d	file:
do_compressor	stb/tests/stb.c	/^void do_compressor(int argc,char**argv)$/;"	f	typeref:typename:void
do_floor	stb/stb_vorbis.c	/^static int do_floor(vorb *f, Mapping *map, int i, int n, float *target, YTYPE *finalY, uint8 *st/;"	f	typeref:typename:int	file:
do_png	stb/deprecated/stb_image.c	/^static unsigned char *do_png(png *p, int *x, int *y, int *n, int req_comp)$/;"	f	typeref:typename:unsigned char *	file:
do_zlib	stb/deprecated/stb_image.c	/^static int do_zlib(zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int	file:
does_lex	stb/deprecated/stb.h	/^   int does_lex;$/;"	m	struct:stb_matcher	typeref:typename:int
dont_care	stb/tools/unicode.c	/^   uint32 dont_care;$/;"	m	struct:__anona458f2750108	typeref:typename:uint32	file:
dont_measure	stb/tests/test_ds.c	/^void dont_measure(void)$/;"	f	typeref:typename:void
dont_measure	stb/tests/test_ds_cpp.cpp	/^void dont_measure(void)$/;"	f	typeref:typename:void
drag_dest_x	stb/stb_tilemap_editor.h	/^   int drag_offx, drag_offy, drag_dest_x, drag_dest_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_dest_y	stb/stb_tilemap_editor.h	/^   int drag_offx, drag_offy, drag_dest_x, drag_dest_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_h	stb/stb_tilemap_editor.h	/^   int drag_x, drag_y, drag_w, drag_h;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_offx	stb/stb_tilemap_editor.h	/^   int drag_offx, drag_offy, drag_dest_x, drag_dest_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_offy	stb/stb_tilemap_editor.h	/^   int drag_offx, drag_offy, drag_dest_x, drag_dest_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_w	stb/stb_tilemap_editor.h	/^   int drag_x, drag_y, drag_w, drag_h;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_x	stb/stb_tilemap_editor.h	/^   int drag_x, drag_y, drag_w, drag_h;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
drag_y	stb/stb_tilemap_editor.h	/^   int drag_x, drag_y, drag_w, drag_h;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
dragging	stb/stb_tilemap_editor.h	/^   int dragging;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
draw	stb/tests/caveview/cave_main.c	/^void draw(void)$/;"	f	typeref:typename:void
draw	stb/tests/oversample/main.c	/^void draw(void)$/;"	f	typeref:typename:void
draw	stb/tests/truetype_test_win32.c	/^void draw(void)$/;"	f	typeref:typename:void
drawBoxTC	stb/tests/oversample/main.c	/^void drawBoxTC(float x0, float y0, float x1, float y1, float s0, float t0, float s1, float t1)$/;"	f	typeref:typename:void
draw_char	stb/tests/sdf/sdf_test.c	/^void draw_char(float px, float py, char c, float relative_scale)$/;"	f	typeref:typename:void
draw_init	stb/tests/oversample/main.c	/^void draw_init(void)$/;"	f	typeref:typename:void
draw_line	stb/stb_vorbis.c	/^static __forceinline void draw_line(float *output, int x0, int y0, int x1, int y1, int n)$/;"	f	typeref:typename:void	file:
draw_main	stb/tests/caveview/cave_main.c	/^void draw_main(void)$/;"	f	typeref:typename:void
draw_stats	stb/tests/caveview/cave_main.c	/^void draw_stats(void)$/;"	f	typeref:typename:void
draw_world	stb/tests/oversample/main.c	/^void draw_world(void)$/;"	f	typeref:typename:void
dt	stb/stb_tilemap_editor.h	/^   float dt;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:float
dummy	stb/stb_c_lexer.h	/^void dummy(void)$/;"	f	typeref:typename:void
dummy	stb/tests/test_ds.c	/^char dummy[8][STBDS_FLUSH_CACHE];$/;"	v	typeref:typename:char[8][]
dummy2	stb/tests/test_cpp_compilation.cpp	/^void dummy2(void)$/;"	f	typeref:typename:void
dummy3	stb/tests/test_cpp_compilation.cpp	/^void dummy3(void)$/;"	f	typeref:typename:void
dummy3	stb/tests/textedit_sample.c	/^void dummy3(void)$/;"	f	typeref:typename:void
dummy_write	stb/tests/image_test.c	/^void dummy_write(void *context, void *data, int len)$/;"	f	typeref:typename:void
dumpfunc	stb/tests/stb.c	/^void dumpfunc(void *ptr, int sz, char *file, int line)$/;"	f	typeref:typename:void
dupes	stb/deprecated/stb.h	/^   void ***dupes;$/;"	m	struct:stb_dupe	typeref:typename:void ***
dval	stb/deprecated/stb.h	/^      double dval;$/;"	m	union:__anonfe33527c2808::__anonfe33527c290a	typeref:typename:double
dx	stb/stb_tilemap_editor.h	/^   int mx,my, dx,dy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
dx	stb/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
dx	stb/tests/oversample/stb_wingraph.h	/^   int dx,dy;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
dx	stb/tools/easy_font_maker.c	/^   unsigned char dx:1;$/;"	m	struct:__anonc58d97050208	typeref:typename:unsigned char:1	file:
dy	stb/stb_tilemap_editor.h	/^   int mx,my, dx,dy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
dy	stb/tests/oversample/stb_wingraph.h	/^   int dx,dy;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
e	stb/deprecated/stb_image.c	/^   #def/;"	d	file:
e	stb/deprecated/stb_image.c	/^static int e(const char *str)$/;"	f	typeref:typename:int	file:
e	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
ecolor	stb/stb_voxel_render.h	/^   unsigned char ecolor:2;$/;"	m	struct:__anonc1feb0a80c08	typeref:typename:unsigned char:2
ecolor_color	stb/stb_voxel_render.h	/^   unsigned char *ecolor_color;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
ecolor_facemask	stb/stb_voxel_render.h	/^   unsigned char *ecolor_facemask;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
edge_horizontal	stb/stb_image_resize.h	/^    stbir_edge edge_horizontal;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_edge
edge_vertical	stb/stb_image_resize.h	/^    stbir_edge edge_vertical;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_edge
edit_map	stb/tests/tilemap_editor_integration_example.c	/^stbte_tilemap *edit_map;$/;"	v	typeref:typename:stbte_tilemap *
editor_init	stb/tests/tilemap_editor_integration_example.c	/^void editor_init(void)$/;"	f	typeref:typename:void
editor_key	stb/tests/tilemap_editor_integration_example.c	/^void editor_key(enum stbte_action act)$/;"	f	typeref:typename:void
editor_process_sdl_event	stb/tests/tilemap_editor_integration_example.c	/^void editor_process_sdl_event(SDL_Event *e)$/;"	f	typeref:typename:void
ef_dummy	stb/tests/test_easyfont.c	/^void ef_dummy(void)$/;"	f	typeref:typename:void
effective_blocktype	stb/tests/caveview/cave_mesher.c	/^unsigned char effective_blocktype[256];$/;"	v	typeref:typename:unsigned char[256]
eflags	stb/deprecated/stb_image.c	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
eflags	stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
enable_synchronous	stb/tests/caveview/cave_main.c	/^void enable_synchronous(void)$/;"	f	typeref:typename:void
encode_buffer	stb/stb_image_resize.h	/^    float* encode_buffer; \/\/ A temporary buffer to store floats so we don't lose precision whi/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
encode_buffer_size	stb/stb_image_resize.h	/^    int encode_buffer_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
end	stb/stb_include.h	/^   int end;$/;"	m	struct:__anond138acff0108	typeref:typename:int
end	stb/stb_vorbis.c	/^   uint32 begin, end;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint32	file:
end	stb/tests/test_ds.c	/^  unsigned __int64 end;$/;"	m	struct:__anon7e6d9c060c08	typeref:typename:unsigned __int64	file:
end	stb/tests/test_ds.c	/^double end(void)$/;"	f	typeref:typename:double
end	stb/tests/test_ds_cpp.cpp	/^void end(void)$/;"	f	typeref:typename:void
end_seg_with_known_loc	stb/stb_vorbis.c	/^   int end_seg_with_known_loc;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
end_time	stb/tests/caveview/cave_main.c	/^static Uint64 start_time, end_time; \/\/ render time$/;"	v	typeref:typename:Uint64	file:
end_timer	stb/tests/grid_reachability.c	/^void end_timer(void)$/;"	f	typeref:typename:void
entries	stb/deprecated/stb.h	/^   stb__Entry *entries;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:stb__Entry *
entries	stb/deprecated/stb.h	/^   unsigned short *entries;$/;"	m	struct:__anonfe33527c0c08	typeref:typename:unsigned short *
entries	stb/stb_vorbis.c	/^   int dimensions, entries;$/;"	m	struct:__anon008e12ab0408	typeref:typename:int	file:
eob_run	stb/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
eof	stb/deprecated/stb_image.c	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anon9409ffb90208	typeref:typename:int (*)(void * user)	file:
eof	stb/stb_c_lexer.h	/^   char *eof;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
eof	stb/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anonc3e085de0208	typeref:typename:int (*)(void * user)
eof	stb/stb_vorbis.c	/^   int eof;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
epf	stb/deprecated/stb_image.c	/^#define epf(/;"	d	file:
eps	stb/deprecated/stb.h	/^   stb_uint16 *eps;  \/\/ list of epsilon closures$/;"	m	struct:__anonfe33527c1d08	typeref:typename:stb_uint16 *
epuc	stb/deprecated/stb_image.c	/^#define epuc(/;"	d	file:
eq	stb/deprecated/stb.h	/^   stb_compare_func  eq;$/;"	m	struct:stb_dupe	typeref:typename:stb_compare_func
equal	stb/stb_truetype.h	/^static int equal(float *a, float *b)$/;"	f	typeref:typename:int
err	stb/stb_divide.h	/^int err=0;$/;"	v	typeref:typename:int
error	stb/stb_vorbis.c	/^   enum STBVorbisError error;$/;"	m	struct:stb_vorbis	typeref:enum:STBVorbisError	file:
error	stb/stb_vorbis.c	/^static int error(vorb *f, enum STBVorbisError e)$/;"	f	typeref:typename:int	file:
error	stb/tests/caveview/cave_main.c	/^void error(char *s)$/;"	f	typeref:typename:void
errors	stb/deprecated/stb.h	/^   int   errors;$/;"	m	struct:__anonfe33527c1108	typeref:typename:int
event	stb/stb_tilemap_editor.h	/^   int event;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
expand	stb/deprecated/stb_image.c	/^static int expand(zbuf *z, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int	file:
expand_palette	stb/deprecated/stb_image.c	/^static int expand_palette(png *a, stbi__uint8 *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int	file:
expanded	stb/deprecated/stb_image.c	/^   stbi__uint8 *idata, *expanded, *out;$/;"	m	struct:__anon9409ffb90c08	typeref:typename:stbi__uint8 *	file:
expanded	stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc3e085de0e08	typeref:typename:stbi_uc *
expanded	stb/stb_tilemap_editor.h	/^   int expanded, mode;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
expects	stb/tests/stb.c	/^char *expects(stb_matcher *m, char *s, int result, int len, char *str)$/;"	f	typeref:typename:char *
expects	stb/tests/stb_cpp.cpp	/^char *expects(stb_matcher *m, char *s, int result, int len, const char *str)$/;"	f	typeref:typename:char *
extend_receive	stb/deprecated/stb_image.c	/^stbi_inline static int extend_receive(jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int	file:
extended_color	stb/stb_voxel_render.h	/^   unsigned char *extended_color;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
extra	stb/stb_rect_pack.h	/^   stbrp_node extra[2]; \/\/ we allocate two extra nodes so optimal user-node-count is 'width' n/;"	m	struct:stbrp_context	typeref:typename:stbrp_node[2]
extra_read	stb/stb_image.h	/^   int extra_read;$/;"	m	struct:__anonc3e085de1008	typeref:typename:int
ey	stb/stb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
eyedrop_last_layer	stb/stb_tilemap_editor.h	/^   int eyedrop_x, eyedrop_y, eyedrop_last_layer;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
eyedrop_x	stb/stb_tilemap_editor.h	/^   int eyedrop_x, eyedrop_y, eyedrop_last_layer;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
eyedrop_y	stb/stb_tilemap_editor.h	/^   int eyedrop_x, eyedrop_y, eyedrop_last_layer;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
f	stb/deprecated/stb.h	/^   FILE *f;  \/\/ file to fread\/fwrite$/;"	m	struct:stbfile	typeref:typename:FILE *
f	stb/deprecated/stb.h	/^   FILE *f; \/\/ write the data to this file on close$/;"	m	struct:stb_cfg_st	typeref:typename:FILE *
f	stb/deprecated/stb.h	/^   FILE *f;$/;"	m	struct:__anonfe33527c2608	typeref:typename:FILE *
f	stb/deprecated/stb.h	/^   stb_thread_func f;$/;"	m	struct:__anonfe33527c2308	typeref:typename:stb_thread_func
f	stb/deprecated/stb.h	/^   stb_thread_func f;$/;"	m	struct:__anonfe33527c2408	typeref:typename:stb_thread_func
f	stb/stb_connected_components.h	/^   } f;$/;"	m	union:__anonc6c173d3020a	typeref:struct:__anonc6c173d3020a::__anonc6c173d30308
f	stb/stb_herringbone_wang_tile.h	/^   signed char a,b,c,d,e,f;$/;"	m	struct:__anon412b11070108	typeref:typename:signed char
f	stb/stb_image_resize.h	/^    float f;$/;"	m	union:__anonb59f51af080a	typeref:typename:float
f	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	m	union:stbte__extract_float::__anonbd4d158d120a	typeref:typename:float
f	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	m	union:stbte__extract_short::__anonbd4d158d130a	typeref:typename:float
f	stb/stb_vorbis.c	/^      float f;$/;"	m	union:__anon008e12ab110a	typeref:typename:float	file:
f	stb/stb_vorbis.c	/^   FILE *f;$/;"	m	struct:stb_vorbis	typeref:typename:FILE *	file:
f2f	stb/deprecated/stb_image.c	/^#define f2f(/;"	d	file:
f_start	stb/stb_vorbis.c	/^   uint32 f_start;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
face_buffer	stb/tests/caveview/cave_mesher.c	/^uint8 face_buffer[FACE_BUFFER_SIZE];$/;"	v	typeref:typename:uint8[]
face_buffer	stb/tests/caveview/cave_render.c	/^   uint8 *face_buffer ;$/;"	m	struct:__anonb6d309d70308	typeref:typename:uint8 *	file:
face_buffer	stb/tests/caveview/caveview.h	/^   uint8 *face_buffer;$/;"	m	struct:__anonc22370580108	typeref:typename:uint8 *
face_info	stb/stb_voxel_render.h	/^      unsigned char tex1,tex2,color,face_info;$/;"	m	struct:__anonc1feb0a80a08	typeref:typename:unsigned char
facerot	stb/stb_voxel_render.h	/^   unsigned char facerot:2;$/;"	m	struct:__anonc1feb0a80c08	typeref:typename:unsigned char:2
failure_reason	stb/deprecated/stb_image.c	/^static const char *failure_reason;$/;"	v	typeref:typename:const char *	file:
fallback	stb/tools/unicode.c	/^   uint32 fallback;$/;"	m	struct:__anona458f2750108	typeref:typename:uint32	file:
fast	stb/deprecated/stb_image.c	/^   stbi__uint16 fast[1 << ZFAST_BITS];$/;"	m	struct:__anon9409ffb90908	typeref:typename:stbi__uint16[]	file:
fast	stb/deprecated/stb_image.c	/^   stbi__uint8  fast[1 << FAST_BITS];$/;"	m	struct:__anon9409ffb90508	typeref:typename:stbi__uint8[]	file:
fast	stb/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:stbi__uint16[]
fast	stb/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anonc3e085de0708	typeref:typename:stbi_uc[]
fast_ac	stb/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__int16[4][]
fast_chunk	stb/tests/caveview/cave_parse.h	/^} fast_chunk;$/;"	t	typeref:struct:__anonb02522170308
fast_huffman	stb/stb_vorbis.c	/^    int16  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon008e12ab0408	typeref:typename:int16[]	file:
fast_huffman	stb/stb_vorbis.c	/^    int32  fast_huffman[FAST_HUFFMAN_TABLE_SIZE];$/;"	m	struct:__anon008e12ab0408	typeref:typename:int32[]	file:
fastpath	stb/tools/unicode.c	/^   int  fastpath;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
fbuf	stb/tests/caveview/cave_render.c	/^   GLuint fbuf, fbuf_tex;$/;"	m	struct:__anonb6d309d70208	typeref:typename:GLuint	file:
fbuf_size	stb/tests/caveview/cave_render.c	/^   int vbuf_size, fbuf_size;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
fbuf_tex	stb/tests/caveview/cave_render.c	/^   GLuint fbuf, fbuf_tex;$/;"	m	struct:__anonb6d309d70208	typeref:typename:GLuint	file:
fc	stb/tests/caveview/cave_mesher.c	/^   fast_chunk *fc;$/;"	m	struct:__anon257c0e9b0208	typeref:typename:fast_chunk *	file:
fc	stb/tests/caveview/cave_parse.c	/^   fast_chunk *fc;$/;"	m	struct:__anonb02522120508	typeref:typename:fast_chunk *	file:
fdata	stb/tests/sdf/sdf_test.c	/^fontchar fdata[128];$/;"	v	typeref:typename:fontchar[128]
fdselect	stb/stb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fdx	stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fdy	stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
file	stb/deprecated/stb.h	/^   char *file;$/;"	m	struct:__anonfe33527c1608	typeref:typename:char *
file	stb/stb_leakcheck.h	/^   const char *file;$/;"	m	struct:malloc_info	typeref:typename:const char *
file_data	stb/deprecated/stb.h	/^   char **file_data;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:char **
file_len	stb/deprecated/stb.h	/^   int file_len;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:int
filelist	stb/tools/build_matrix.c	/^   char *filelist;$/;"	m	struct:__anon97bba3320208	typeref:typename:char *	file:
filename	stb/deprecated/stb.h	/^   char *filename;$/;"	m	struct:__anonfe33527c2608	typeref:typename:char *
filename	stb/deprecated/stb.h	/^   char *filename;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:char *
filename	stb/stb_include.h	/^   char *filename;$/;"	m	struct:__anond138acff0108	typeref:typename:char *
files	stb/deprecated/stb.h	/^   char **files;$/;"	m	struct:stb_dirtree2	typeref:typename:char **
files	stb/deprecated/stb.h	/^   stb_dirtree_file *files;$/;"	m	struct:__anonfe33527c1508	typeref:typename:stb_dirtree_file *
filesize	stb/deprecated/stb.h	/^   stb_int64 filesize;$/;"	m	struct:__anonfe33527c2508	typeref:typename:stb_int64
filetime	stb/deprecated/stb.h	/^   time_t filetime;$/;"	m	struct:__anonfe33527c2508	typeref:typename:time_t
fill_bits	stb/deprecated/stb_image.c	/^static void fill_bits(zbuf *z)$/;"	f	typeref:typename:void	file:
finalY	stb/stb_vorbis.c	/^   int16 *finalY[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	typeref:typename:int16 * []	file:
find	stb/tests/grid_reachability.c	/^point find(int x, int y)$/;"	f	typeref:typename:point
find_packed	stb/tools/unicode.c	/^size_t find_packed(uval **packed, uval *data, int len, int aligned, int fastpath, uval *end, int/;"	f	typeref:typename:size_t
first	stb/deprecated/stb.h	/^   stb__nptr *first; \/\/ address of first nptr pointing to this$/;"	m	struct:stb__st_nptr_target	typeref:typename:stb__nptr *
first	stb/deprecated/stb_image.c	/^   stbi__uint8 first;$/;"	m	struct:stbi_gif_lzw_struct	typeref:typename:stbi__uint8	file:
first	stb/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anonc3e085de1208	typeref:typename:stbi_uc
first_audio_page_offset	stb/stb_vorbis.c	/^   uint32 first_audio_page_offset;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
first_char	stb/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anonb04bb6e60508	typeref:typename:int
first_decode	stb/stb_vorbis.c	/^   uint8 first_decode;$/;"	m	struct:stb_vorbis	typeref:typename:uint8	file:
first_free	stb/deprecated/stb.h	/^   void              *first_free;$/;"	m	struct:stb__span	typeref:typename:void *
first_free	stb/stb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap	typeref:typename:void *
first_row_filter	stb/deprecated/stb_image.c	/^static stbi__uint8 first_row_filter[5] =$/;"	v	typeref:typename:stbi__uint8[5]	file:
first_row_filter	stb/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v	typeref:typename:stbi_uc[5]
first_segment	stb/tools/easy_font_maker.c	/^   unsigned char first_segment:8;$/;"	m	struct:__anonc58d97050108	typeref:typename:unsigned char:8	file:
first_step	stb/tests/test_ds.c	/^const int first_step = 64;$/;"	v	typeref:typename:const int
first_unicode_codepoint_in_range	stb/stb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and t/;"	m	struct:__anon77ab60dd0508	typeref:typename:int
first_v_segment	stb/tools/easy_font_maker.c	/^   unsigned char first_v_segment:8;$/;"	m	struct:__anonc58d97050108	typeref:typename:unsigned char:8	file:
first_x	stb/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:float
first_y	stb/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:float
firstcode	stb/deprecated/stb_image.c	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon9409ffb90908	typeref:typename:stbi__uint16[16]	file:
firstcode	stb/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:stbi__uint16[16]
firstsymbol	stb/deprecated/stb_image.c	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon9409ffb90908	typeref:typename:stbi__uint16[16]	file:
firstsymbol	stb/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:stbi__uint16[16]
flag	stb/deprecated/stb.h	/^   int      flag;$/;"	m	struct:__anonfe33527c1308	typeref:typename:int
flag	stb/deprecated/stb.h	/^   int      flag;$/;"	m	struct:__anonfe33527c1408	typeref:typename:int
flag	stb/deprecated/stb.h	/^   int *flag;$/;"	m	struct:__anonfe33527c2608	typeref:typename:int *
flags	stb/deprecated/stb_image.c	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
flags	stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
flags	stb/stb_image_resize.h	/^    stbir_uint32 flags;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_uint32
float2fixed	stb/deprecated/stb_image.c	/^#define float2fixed(/;"	d	file:
float2int	stb/deprecated/stb_image.c	/^#define float2int(/;"	d	file:
float32_unpack	stb/stb_vorbis.c	/^static float float32_unpack(uint32 x)$/;"	f	typeref:typename:float	file:
float_conv	stb/stb_vorbis.c	/^   } float_conv;$/;"	t	typeref:union:__anon008e12ab110a	file:
floor0	stb/stb_vorbis.c	/^   Floor0 floor0;$/;"	m	union:__anon008e12ab070a	typeref:typename:Floor0	file:
floor1	stb/stb_vorbis.c	/^   Floor1 floor1;$/;"	m	union:__anon008e12ab070a	typeref:typename:Floor1	file:
floor1_multiplier	stb/stb_vorbis.c	/^   uint8 floor1_multiplier;$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8	file:
floor_buffers	stb/stb_vorbis.c	/^   float *floor_buffers[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	typeref:typename:float * []	file:
floor_config	stb/stb_vorbis.c	/^   Floor *floor_config;$/;"	m	struct:stb_vorbis	typeref:typename:Floor *	file:
floor_count	stb/stb_vorbis.c	/^   int floor_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
floor_types	stb/stb_vorbis.c	/^   uint16 floor_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	typeref:typename:uint16[64]	file:
flush_cache	stb/tests/test_ds.c	/^int flush_cache(void) { return 0; }$/;"	f	typeref:typename:int
flush_cache	stb/tests/test_ds.c	/^int flush_cache(void)$/;"	f	typeref:typename:int
flush_cb	stb/deprecated/rrsprintf.h	/^    #define flush_cb(/;"	d
flush_packet	stb/stb_vorbis.c	/^static void flush_packet(vorb *f)$/;"	f	typeref:typename:void	file:
font	stb/tests/oversample/main.c	/^int font=3;$/;"	v	typeref:typename:int
font_size	stb/stb_truetype.h	/^   float font_size;$/;"	m	struct:__anon77ab60dd0508	typeref:typename:float
font_tex	stb/tests/oversample/main.c	/^GLuint font_tex;$/;"	v	typeref:typename:GLuint
fontchar	stb/tests/sdf/sdf_test.c	/^} fontchar;$/;"	t	typeref:struct:__anonc0c3bd380108	file:
fontdicts	stb/stb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fontstart	stb/stb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
fp32_to_srgb8_tab4	stb/stb_image_resize.h	/^static const stbir_uint32 fp32_to_srgb8_tab4[104] = {$/;"	v	typeref:typename:const stbir_uint32[104]
fragment_shader	render-shapes.cpp	/^  GLchar fragment_shader[] = R"($/;"	v	namespace:__anond2ba22070211	typeref:typename:GLchar[]
fragment_shader	render-sprites.cpp	/^  GLchar fragment_shader[] = R"($/;"	v	namespace:__anonf78e452d0111	typeref:typename:GLchar[]
fragment_shader	render-surface.cpp	/^  GLchar fragment_shader[] = R"($/;"	v	namespace:__anon8ac3718c0111	typeref:typename:GLchar[]
free	stb/deprecated/stb.h	/^   #define free(/;"	d
free	stb/deprecated/stb.h	/^#define free /;"	d
free	stb/stb_leakcheck.h	/^#define free(/;"	d
free	stb/stb_vorbis.c	/^   #define free(/;"	d	file:
free_chunk	stb/tests/caveview/cave_render.c	/^void free_chunk(int slot_x, int slot_y)$/;"	f	typeref:typename:void
free_head	stb/stb_rect_pack.h	/^   stbrp_node *free_head;$/;"	m	struct:stbrp_context	typeref:typename:stbrp_node *
free_region	stb/tests/caveview/cave_parse.c	/^void free_region(region *r)$/;"	f	typeref:typename:void
frustum	stb/tests/caveview/cave_render.c	/^static plane frustum[6];$/;"	v	typeref:typename:plane[6]	file:
fsh	stb/deprecated/stb_image.c	/^#define fsh(/;"	d	file:
fsize	stb/deprecated/stb.h	/^   int fsize;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
ftex	glwrappers.cpp	/^GLuint ftex;$/;"	v	typeref:typename:GLuint
full	stb/stb_voxel_render.h	/^   int full;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
fullpath	stb/deprecated/stb.h	/^   char *fullpath;$/;"	m	struct:stb_dirtree2	typeref:typename:char *
func	stb/stb_image_write.h	/^   stbi_write_func *func;$/;"	m	struct:__anonbb4db7480108	typeref:typename:stbi_write_func *
func	stb/tests/oversample/stb_wingraph.h	/^   stbwingraph_window_proc func;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:stbwingraph_window_proc
fx	stb/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
g	render-shapes.h	/^  float r, g, b, a;$/;"	m	struct:Shape	typeref:typename:float
g	stb/stb_voxel_render.h	/^   unsigned char r,g,b;$/;"	m	struct:__anonc1feb0a80508	typeref:typename:unsigned char
g_aiMT	stb/tests/resample_test.cpp	/^static size_t g_aiMT[MT_SIZE];$/;"	v	typeref:typename:size_t[]	file:
g_context	stb/tests/resample_test.cpp	/^} g_context;$/;"	v	typeref:class:stbir_context
g_iMTI	stb/tests/resample_test.cpp	/^static size_t g_iMTI = 0;$/;"	v	typeref:typename:size_t	file:
g_mesh_maker	stb/tests/caveview/cave_render.c	/^stbvox_mesh_maker g_mesh_maker;$/;"	v	typeref:typename:stbvox_mesh_maker
game_name	stb/tests/caveview/cave_main.c	/^char *game_name = "caveview";$/;"	v	typeref:typename:char *
geom_map	stb/tests/caveview/cave_mesher.c	/^unsigned char geom_map[] =$/;"	v	typeref:typename:unsigned char[]
geometry	stb/stb_voxel_render.h	/^   unsigned char *geometry;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
get16	stb/deprecated/stb_image.c	/^static int get16(stbi *s)$/;"	f	typeref:typename:int	file:
get16le	stb/deprecated/stb_image.c	/^static int get16le(stbi *s)$/;"	f	typeref:typename:int	file:
get32	stb/deprecated/stb_image.c	/^static stbi__uint32 get32(stbi *s)$/;"	f	typeref:typename:stbi__uint32	file:
get32	stb/stb_vorbis.c	/^static uint32 get32(vorb *f)$/;"	f	typeref:typename:uint32	file:
get32_packet	stb/stb_vorbis.c	/^static int get32_packet(vorb *f)$/;"	f	typeref:typename:int	file:
get32le	stb/deprecated/stb_image.c	/^static stbi__uint32 get32le(stbi *s)$/;"	f	typeref:typename:stbi__uint32	file:
get8	stb/deprecated/stb_image.c	/^stbi_inline static int get8(stbi *s)$/;"	f	typeref:typename:stbi_inline int	file:
get8	stb/stb_vorbis.c	/^static uint8 get8(vorb *z)$/;"	f	typeref:typename:uint8	file:
get8_packet	stb/stb_vorbis.c	/^static int get8_packet(vorb *f)$/;"	f	typeref:typename:int	file:
get8_packet_raw	stb/stb_vorbis.c	/^static int get8_packet_raw(vorb *f)$/;"	f	typeref:typename:int	file:
get8u	stb/deprecated/stb_image.c	/^stbi_inline static stbi__uint8 get8u(stbi *s)$/;"	f	typeref:typename:stbi_inline stbi__uint8	file:
getTimestep	stb/tests/caveview/cave_main.c	/^static float getTimestep(float minimum_time)$/;"	f	typeref:typename:float	file:
get_bits	stb/stb_vorbis.c	/^static uint32 get_bits(vorb *f, int n)$/;"	f	typeref:typename:uint32	file:
get_chunk_header	stb/deprecated/stb_image.c	/^static chunk get_chunk_header(stbi *s)$/;"	f	typeref:typename:chunk	file:
get_compressed_chunk	stb/tests/caveview/cave_parse.c	/^static compressed_chunk *get_compressed_chunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:compressed_chunk *	file:
get_converted_fastchunk	stb/tests/caveview/cave_mesher.c	/^fast_chunk *get_converted_fastchunk(int chunk_x, int chunk_y)$/;"	f	typeref:typename:fast_chunk *
get_data	stb/tools/unicode.c	/^uval get_data(uval *data, int offset, uval *end)$/;"	f	typeref:typename:uval
get_decoded_buffer	stb/tests/caveview/cave_parse.c	/^decoded_buffer *get_decoded_buffer(int chunk_x, int chunk_z)$/;"	f	typeref:typename:decoded_buffer *
get_decoded_chunk	stb/tests/caveview/cave_parse.c	/^chunk *get_decoded_chunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:chunk *
get_decoded_chunk_raw	stb/tests/caveview/cave_parse.c	/^chunk *get_decoded_chunk_raw(int chunk_x, int chunk_z)$/;"	f	typeref:typename:chunk *
get_decoded_fastchunk	stb/tests/caveview/cave_parse.c	/^fast_chunk *get_decoded_fastchunk(int chunk_x, int chunk_z)$/;"	f	typeref:typename:fast_chunk *
get_decoded_fastchunk_uncached	stb/tests/caveview/cave_parse.c	/^fast_chunk *get_decoded_fastchunk_uncached(int chunk_x, int chunk_z)$/;"	f	typeref:typename:fast_chunk *
get_height	stb/tests/pg_test/pg_test.c	/^static float get_height(float x, float y)$/;"	f	typeref:typename:float	file:
get_marker	stb/deprecated/stb_image.c	/^static stbi__uint8 get_marker(jpeg *j)$/;"	f	typeref:typename:stbi__uint8	file:
get_range	stb/tools/unicode.c	/^char_range get_range(char *str)$/;"	f	typeref:typename:char_range
get_region	stb/tests/caveview/cave_parse.c	/^static region *get_region(int reg_x, int reg_z)$/;"	f	typeref:typename:region *	file:
get_seek_page_info	stb/stb_vorbis.c	/^static int get_seek_page_info(stb_vorbis *f, ProbedPage *z)$/;"	f	typeref:typename:int	file:
get_window	stb/stb_vorbis.c	/^static float *get_window(vorb *f, int len)$/;"	f	typeref:typename:float *	file:
getbyte	stb/deprecated/stb.h	/^   int (*getbyte)(struct stbfile *);  \/\/ -1 on EOF$/;"	m	struct:stbfile	typeref:typename:int (*)(struct stbfile *)
getdata	stb/deprecated/stb.h	/^   unsigned int (*getdata)(struct stbfile *, void *block, unsigned int len);$/;"	m	struct:stbfile	typeref:typename:unsigned int (*)(struct stbfile *,void * block,unsigned int len)
getn	stb/deprecated/stb_image.c	/^static int getn(stbi *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int	file:
getn	stb/stb_vorbis.c	/^static int getn(vorb *z, uint8 *data, int n)$/;"	f	typeref:typename:int	file:
gif_test	stb/deprecated/stb_image.c	/^static int gif_test(stbi *s)$/;"	f	typeref:typename:int	file:
gl_debug	stb/tests/caveview/cave_main.c	/^void APIENTRY gl_debug(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, c/;"	f	typeref:typename:void APIENTRY
global_hack	stb/tests/caveview/cave_main.c	/^int global_hack;$/;"	v	typeref:typename:int
global_label	stb/stb_connected_components.h	/^   stbcc__global_clumpid global_label;        \/\/ 4$/;"	m	struct:__anonc6c173d30408	typeref:typename:stbcc__global_clumpid
global_timer	stb/tests/caveview/cave_main.c	/^float global_timer;$/;"	v	typeref:typename:float
glyf	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
glyph1	stb/stb_truetype.h	/^   int glyph1; \/\/ use stbtt_FindGlyphIndex$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
glyph2	stb/stb_truetype.h	/^   int glyph2;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
go_to_page_before	stb/stb_vorbis.c	/^static int go_to_page_before(stb_vorbis *f, unsigned int limit_offset)$/;"	f	typeref:typename:int	file:
goal	stb/deprecated/stb.h	/^   stb_int16 goal;   \/\/ does reaching this win the prize?$/;"	m	struct:__anonfe33527c1d08	typeref:typename:stb_int16
goal_crc	stb/stb_vorbis.c	/^   uint32  goal_crc;    \/\/ expected crc if match$/;"	m	struct:__anon008e12ab0c08	typeref:typename:uint32	file:
gpos	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
grow_buffer_unsafe	stb/deprecated/stb_image.c	/^static void grow_buffer_unsafe(jpeg *j)$/;"	f	typeref:typename:void	file:
grow_threshhold	stb/deprecated/stb.h	/^   int grow_threshhold;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
growable	stb/deprecated/stb.h	/^   int head, tail, array_size, growable;$/;"	m	struct:stb__threadqueue	typeref:typename:int
gsubrs	stb/stb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
guess	stb/deprecated/stb.h	/^   int minval, maxval, guess;$/;"	m	struct:__anonfe33527c0408	typeref:typename:int
h	stb/deprecated/stb_image.c	/^      int h,v;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
h	stb/deprecated/stb_image.c	/^   int w,h;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
h	stb/stb_connected_components.h	/^   int w,h,cw,ch;$/;"	m	struct:st_stbcc_grid	typeref:typename:int
h	stb/stb_herringbone_wang_tile.h	/^   int stride,w,h;$/;"	m	struct:stbhw__process	typeref:typename:int
h	stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
h	stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
h	stb/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
h	stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
h	stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon77ab60dd0808	typeref:typename:int
h	stb/tests/sdf/sdf_test.c	/^   unsigned char w,h;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:unsigned char	file:
h	stb/tools/easy_font_maker.c	/^int w,h;$/;"	v	typeref:typename:int
h2	stb/deprecated/stb_image.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
h2	stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
h2l_gamma_i	stb/deprecated/stb_image.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	typeref:typename:float	file:
h2l_scale_i	stb/deprecated/stb_image.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	typeref:typename:float	file:
h_color	stb/stb_herringbone_wang_tile.h	/^static signed char h_color[STB_HBWANG_MAX_Y+5][STB_HBWANG_MAX_X+6];$/;"	v	typeref:typename:signed char[][]
h_oversample	stb/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon77ab60dd0508	typeref:typename:unsigned char
h_oversample	stb/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
h_seg	stb/stb_easy_font.h	/^    unsigned char h_seg;$/;"	m	struct:stb_easy_font_info_struct	typeref:typename:unsigned char
h_tiles	stb/stb_herringbone_wang_tile.h	/^   stbhw_tile **h_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:stbhw_tile **
ha	stb/deprecated/stb_image.c	/^      int hd,ha;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
ha	stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
half_height	stb/stb_hexwave.h	/^   float half_height;$/;"	m	struct:__anon773b6f930108	typeref:typename:float
handle	stb/tests/oversample/stb_wingraph.h	/^   void *handle;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:void *
has_copy	stb/stb_tilemap_editor.h	/^   int copy_width,copy_height,has_copy,copy_has_props;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
has_layer_names	stb/stb_tilemap_editor.h	/^    int has_layer_names;$/;"	m	struct:stbte_tilemap	typeref:typename:int
has_preferred_x	stb/stb_textedit.h	/^   unsigned char has_preferred_x;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
has_selection	stb/stb_tilemap_editor.h	/^   int has_selection, select_x0, select_y0, select_x1, select_y1;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
has_sign	stb/tools/unicode.c	/^   int  has_sign;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
hash	stb/deprecated/stb.h	/^   stb_hash_func     hash;$/;"	m	struct:stb_dupe	typeref:typename:stb_hash_func
hash	stb/stb_ds.h	/^   size_t    hash [STBDS_BUCKET_LENGTH];$/;"	m	struct:__anona15bb9d20308	typeref:typename:size_t[]
hash_shift	stb/deprecated/stb.h	/^   int hash_shift;$/;"	m	struct:stb_dupe	typeref:typename:int
hash_size	stb/deprecated/stb.h	/^   int hash_size;$/;"	m	struct:stb_dupe	typeref:typename:int
hash_table	stb/deprecated/stb.h	/^   void ***hash_table;$/;"	m	struct:stb_dupe	typeref:typename:void ***
hash_table	stb/stb_ds.h	/^  void      * hash_table;$/;"	m	struct:__anona15bb9d20108	typeref:typename:void *
hashmask	stb/deprecated/stb.h	/^   stb_uint    hashmask;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:stb_uint
have_data	stb/deprecated/stb.h	/^   int have_data;$/;"	m	struct:__anonfe33527c2508	typeref:typename:int
have_pending	stb/stb_hexwave.h	/^   int have_pending;$/;"	m	struct:HexWave	typeref:typename:int
hd	stb/deprecated/stb_image.c	/^      int hd,ha;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
hd	stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
hdr_convert	stb/deprecated/stb_image.c	/^static void hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void	file:
hdr_data	stb/tests/image_test.c	/^float hdr_data[200][200][3];$/;"	v	typeref:typename:float[200][200][3]
hdr_gettoken	stb/deprecated/stb_image.c	/^static char *hdr_gettoken(stbi *z, char *buffer)$/;"	f	typeref:typename:char *	file:
hdr_load	stb/deprecated/stb_image.c	/^static float *hdr_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *	file:
hdr_test	stb/deprecated/stb_image.c	/^static int hdr_test(stbi *s)$/;"	f	typeref:typename:int	file:
hdr_to_ldr	stb/deprecated/stb_image.c	/^static stbi_uc *hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *	file:
head	stb/deprecated/stb.h	/^   int head, tail, array_size, growable;$/;"	m	struct:stb__threadqueue	typeref:typename:int
head	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
head	stb/stb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap_chunk *
head_blockers	stb/deprecated/stb.h	/^   int head_blockers;  \/\/ number of threads blocking--used to know whether to release(avail)$/;"	m	struct:stb__threadqueue	typeref:typename:int
height	font.cpp	/^  int height;$/;"	m	struct:FontImpl	typeref:typename:int	file:
height	stb/stb_rect_pack.h	/^   int height;$/;"	m	struct:stbrp_context	typeref:typename:int
height	stb/stb_textedit.h	/^   float height; \/\/ height of line$/;"	m	struct:__anonb04bb6e60508	typeref:typename:float
height	stb/stb_tilemap_editor.h	/^   int width, height;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:int
height	stb/stb_tilemap_editor.h	/^   int width,height;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
height	stb/stb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
height	stb/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon77ab60dd1108	typeref:typename:int
height	stb/tests/caveview/cave_parse.h	/^   int height[16][16];$/;"	m	struct:__anonb02522170208	typeref:typename:int[16][16]
height	stb/tests/oversample/stb_wingraph.h	/^   int width, height;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
height	window.h	/^  int width, height;$/;"	m	class:Window	typeref:typename:int
heuristic	stb/stb_rect_pack.h	/^   int heuristic;$/;"	m	struct:stbrp_context	typeref:typename:int
hex_add_oversampled_bleplike	stb/stb_hexwave.h	/^static void hex_add_oversampled_bleplike(float *output, float time_since_transition, float scale/;"	f	typeref:typename:void
hex_blamp	stb/stb_hexwave.h	/^static void hex_blamp(float *output, float time_since_transition, float scale)$/;"	f	typeref:typename:void
hex_blep	stb/stb_hexwave.h	/^static void hex_blep (float *output, float time_since_transition, float scale)$/;"	f	typeref:typename:void
hexblep	stb/stb_hexwave.h	/^} hexblep;$/;"	v	typeref:struct:__anon773b6f930208
hexvert	stb/stb_hexwave.h	/^} hexvert;$/;"	t	typeref:struct:__anon773b6f930308
hexwave_change	stb/stb_hexwave.h	/^STB_HEXWAVE_DEF void hexwave_change(HexWave *hex, int reflect, float peak_time, float half_heigh/;"	f	typeref:typename:STB_HEXWAVE_DEF void
hexwave_clamp	stb/stb_hexwave.h	/^#define hexwave_clamp(/;"	d
hexwave_create	stb/stb_hexwave.h	/^STB_HEXWAVE_DEF void hexwave_create(HexWave *hex, int reflect, float peak_time, float half_heigh/;"	f	typeref:typename:STB_HEXWAVE_DEF void
hexwave_generate_linesegs	stb/stb_hexwave.h	/^static void hexwave_generate_linesegs(hexvert vert[9], HexWave *hex, float dt)$/;"	f	typeref:typename:void
hexwave_generate_samples	stb/stb_hexwave.h	/^STB_HEXWAVE_DEF void hexwave_generate_samples(float *output, int num_samples, HexWave *hex, floa/;"	f	typeref:typename:STB_HEXWAVE_DEF void
hexwave_init	stb/stb_hexwave.h	/^STB_HEXWAVE_DEF void hexwave_init(int width, int oversample, float *user_buffer)$/;"	f	typeref:typename:STB_HEXWAVE_DEF void
hexwave_shutdown	stb/stb_hexwave.h	/^STB_HEXWAVE_DEF void hexwave_shutdown(float *user_buffer)$/;"	f	typeref:typename:STB_HEXWAVE_DEF void
hf	stb/tests/pg_test/pg_test.c	/^static float *hf;$/;"	v	typeref:typename:float *	file:
hf_height	stb/tests/pg_test/pg_test.c	/^static int hf_height = 10001;$/;"	v	typeref:typename:int	file:
hf_width	stb/tests/pg_test/pg_test.c	/^static int hf_width = 10001;$/;"	v	typeref:typename:int	file:
hhea	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
hi	stb/tools/unicode.c	/^   uval lo,hi;$/;"	m	struct:__anona458f2750608	typeref:typename:uval	file:
hidden	stb/stb_tilemap_editor.h	/^   int hidden;$/;"	m	struct:__anonbd4d158d0f08	typeref:typename:int
hide_mouse	stb/tests/oversample/stb_wingraph.h	/^   int   hide_mouse;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
high_bit	stb/deprecated/stb_image.c	/^static int high_bit(unsigned int z)$/;"	f	typeref:typename:int	file:
history	stb/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc *
hlog	stb/deprecated/stb.h	/^FILE *hlog;$/;"	v	typeref:typename:FILE *
hmdefault	stb/stb_ds.h	/^#define hmdefault /;"	d
hmdefaults	stb/stb_ds.h	/^#define hmdefaults /;"	d
hmdel	stb/stb_ds.h	/^#define hmdel /;"	d
hmfree	stb/stb_ds.h	/^#define hmfree /;"	d
hmget	stb/stb_ds.h	/^#define hmget /;"	d
hmget_ts	stb/stb_ds.h	/^#define hmget_ts /;"	d
hmgeti	stb/stb_ds.h	/^#define hmgeti /;"	d
hmgeti_ts	stb/stb_ds.h	/^#define hmgeti_ts /;"	d
hmgetp	stb/stb_ds.h	/^#define hmgetp /;"	d
hmgetp_null	stb/stb_ds.h	/^#define hmgetp_null /;"	d
hmgetp_ts	stb/stb_ds.h	/^#define hmgetp_ts /;"	d
hmgets	stb/stb_ds.h	/^#define hmgets /;"	d
hmlen	stb/stb_ds.h	/^#define hmlen /;"	d
hmlenu	stb/stb_ds.h	/^#define hmlenu /;"	d
hmput	stb/stb_ds.h	/^#define hmput /;"	d
hmputs	stb/stb_ds.h	/^#define hmputs /;"	d
hmtx	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
horizontal_buffer	stb/stb_image_resize.h	/^    float* horizontal_buffer;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
horizontal_buffer_size	stb/stb_image_resize.h	/^    int horizontal_buffer_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_coefficient_width	stb/stb_image_resize.h	/^    int horizontal_coefficient_width;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_coefficients	stb/stb_image_resize.h	/^    float* horizontal_coefficients;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
horizontal_coefficients_size	stb/stb_image_resize.h	/^    int horizontal_coefficients_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_contributors	stb/stb_image_resize.h	/^    stbir__contributors* horizontal_contributors;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir__contributors *
horizontal_contributors_size	stb/stb_image_resize.h	/^    int horizontal_contributors_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_filter	stb/stb_image_resize.h	/^    stbir_filter horizontal_filter;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_filter
horizontal_filter_pixel_margin	stb/stb_image_resize.h	/^    int horizontal_filter_pixel_margin;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_filter_pixel_width	stb/stb_image_resize.h	/^    int horizontal_filter_pixel_width;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_num_contributors	stb/stb_image_resize.h	/^    int horizontal_num_contributors;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
horizontal_scale	stb/stb_image_resize.h	/^    float horizontal_scale;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
horizontal_shift	stb/stb_image_resize.h	/^    float horizontal_shift; \/\/ Units: output pixels$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
hot_id	stb/stb_tilemap_editor.h	/^   int active_id, hot_id, next_hot_id;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
hs	stb/deprecated/stb_image.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon9409ffb90808	typeref:typename:int	file:
hs	stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonc3e085de0a08	typeref:typename:int
hsz	stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonc3e085de1008	typeref:typename:int
huff_ac	stb/deprecated/stb_image.c	/^   huffman huff_ac[4];$/;"	m	struct:__anon9409ffb90608	typeref:typename:huffman[4]	file:
huff_ac	stb/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__huffman[4]
huff_dc	stb/deprecated/stb_image.c	/^   huffman huff_dc[4];$/;"	m	struct:__anon9409ffb90608	typeref:typename:huffman[4]	file:
huff_dc	stb/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__huffman[4]
huffman	stb/deprecated/stb_image.c	/^} huffman;$/;"	t	typeref:struct:__anon9409ffb90508	file:
i	stb/deprecated/stb.h	/^   unsigned int i;$/;"	m	union:__anonfe33527c010a	typeref:typename:unsigned int
i	stb/stb_vorbis.c	/^      int i;$/;"	m	union:__anon008e12ab110a	typeref:typename:int	file:
id	glwrappers.h	/^  GLuint id;$/;"	m	struct:ShaderProgram	typeref:typename:GLuint
id	glwrappers.h	/^  GLuint id;$/;"	m	struct:Texture	typeref:typename:GLuint
id	glwrappers.h	/^  GLuint id;$/;"	m	struct:VertexBuffer	typeref:typename:GLuint
id	glwrappers.h	/^  SDL_GLContext id;$/;"	m	struct:GlContext	typeref:typename:SDL_GLContext
id	stb/deprecated/stb_image.c	/^      int id;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
id	stb/stb_image.h	/^      int id;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
id	stb/stb_rect_pack.h	/^   int            id;$/;"	m	struct:stbrp_rect	typeref:typename:int
id	stb/stb_tilemap_editor.h	/^   short id;$/;"	m	struct:__anonbd4d158d0608	typeref:typename:short
id	stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
id	stb/stb_vorbis.c	/^   uint16 x,id;$/;"	m	struct:__anon008e12ab0e08	typeref:typename:uint16	file:
id_in_use	stb/stb_tilemap_editor.h	/^    unsigned char id_in_use[32768>>3];$/;"	m	struct:stbte_tilemap	typeref:typename:unsigned char[]
idata	stb/deprecated/stb_image.c	/^   stbi__uint8 *idata, *expanded, *out;$/;"	m	struct:__anon9409ffb90c08	typeref:typename:stbi__uint8 *	file:
idata	stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc3e085de0e08	typeref:typename:stbi_uc *
idct_block	stb/deprecated/stb_image.c	/^static void idct_block(stbi__uint8 *out, int out_stride, short data[64], stbi_dequantize_t *dequ/;"	f	typeref:typename:void	file:
idct_block_kernel	stb/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anonc3e085de0808	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64])
ilog	stb/stb_vorbis.c	/^static int ilog(int32 n)$/;"	f	typeref:typename:int	file:
image88	stb/tests/resample_test.cpp	/^static unsigned char image88 [8][8];$/;"	v	typeref:typename:unsigned char[8][8]	file:
image88_int	stb/tests/resample_test.cpp	/^static unsigned int  image88_int[8][8];$/;"	v	typeref:typename:unsigned int[8][8]	file:
image_id	render-sprites.h	/^  int image_id;$/;"	m	struct:Sprite	typeref:typename:int
image_write_test	stb/tests/image_write_test.c	/^void image_write_test(void)$/;"	f	typeref:typename:void
imdct_step3_inner_r_loop	stb/stb_vorbis.c	/^static void imdct_step3_inner_r_loop(int lim, float *e, int d0, int k_off, float *A, int k1)$/;"	f	typeref:typename:void	file:
imdct_step3_inner_s_loop	stb/stb_vorbis.c	/^static void imdct_step3_inner_s_loop(int n, float *e, int i_off, int k_off, float *A, int a_off,/;"	f	typeref:typename:void	file:
imdct_step3_inner_s_loop_ld654	stb/stb_vorbis.c	/^static void imdct_step3_inner_s_loop_ld654(int n, float *e, int i_off, float *A, int base_n)$/;"	f	typeref:typename:void	file:
imdct_step3_iter0_loop	stb/stb_vorbis.c	/^static void imdct_step3_iter0_loop(int n, float *e, int i_off, int k_off, float *A)$/;"	f	typeref:typename:void	file:
img6x5_template	stb/tests/image_write_test.c	/^static const char img6x5_template[] =$/;"	v	typeref:typename:const char[]	file:
img_buffer	stb/deprecated/stb_image.c	/^   stbi__uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint8 *	file:
img_buffer	stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_uc *
img_buffer_end	stb/deprecated/stb_image.c	/^   stbi__uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint8 *	file:
img_buffer_end	stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_uc *
img_buffer_original	stb/deprecated/stb_image.c	/^   stbi__uint8 *img_buffer_original;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint8 *	file:
img_buffer_original	stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_uc *
img_buffer_original_end	stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_uc *
img_comp	stb/deprecated/stb_image.c	/^   } img_comp[4];$/;"	m	struct:__anon9409ffb90608	typeref:struct:__anon9409ffb90608::__anon9409ffb90708[4]	file:
img_comp	stb/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anonc3e085de0808	typeref:struct:__anonc3e085de0808::__anonc3e085de0908[4]
img_h_max	stb/deprecated/stb_image.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_h_max	stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_mcu_h	stb/deprecated/stb_image.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_mcu_h	stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_mcu_w	stb/deprecated/stb_image.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_mcu_w	stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_mcu_x	stb/deprecated/stb_image.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_mcu_x	stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_mcu_y	stb/deprecated/stb_image.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_mcu_y	stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_n	stb/deprecated/stb_image.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon9409ffb90308	typeref:typename:int	file:
img_n	stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonc3e085de0308	typeref:typename:int
img_out_n	stb/deprecated/stb_image.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon9409ffb90308	typeref:typename:int	file:
img_out_n	stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonc3e085de0308	typeref:typename:int
img_v_max	stb/deprecated/stb_image.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
img_v_max	stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
img_x	stb/deprecated/stb_image.c	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint32	file:
img_x	stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi__uint32
img_y	stb/deprecated/stb_image.c	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi__uint32	file:
img_y	stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi__uint32
in_batched_update	stb/stb_connected_components.h	/^   int in_batched_update;$/;"	m	struct:st_stbcc_grid	typeref:typename:int
in_client	stb/tests/oversample/stb_wingraph.h	/^   int   in_client;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
include_in_sort	stb/stb_vorbis.c	/^static int include_in_sort(Codebook *c, uint8 len)$/;"	f	typeref:typename:int	file:
include_info	stb/stb_include.h	/^} include_info;$/;"	t	typeref:struct:__anond138acff0108
indata	stb/deprecated/stb.h	/^   unsigned char *indata, *inend; \/\/ input buffer$/;"	m	struct:stbfile	typeref:typename:unsigned char *
index	stb/stb_ds.h	/^   ptrdiff_t index[STBDS_BUCKET_LENGTH];$/;"	m	struct:__anona15bb9d20308	typeref:typename:ptrdiff_t[]
indexToLocFormat	stb/stb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
index_map	stb/stb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
indices	render-sprites.cpp	/^  std::vector<GLushort> indices;$/;"	m	struct:RenderSpritesImpl	typeref:typename:std::vector<GLushort>	file:
indirect	stb/tools/unicode.c	/^   uint8 indirect;$/;"	m	struct:__anona458f2750508	typeref:typename:uint8	file:
inend	stb/deprecated/stb.h	/^   unsigned char *indata, *inend; \/\/ input buffer$/;"	m	struct:stbfile	typeref:typename:unsigned char *
ineq	stb/deprecated/stb.h	/^   stb_compare_func  ineq;$/;"	m	struct:stb_dupe	typeref:typename:stb_compare_func
info	stb/tools/unicode.c	/^} info;$/;"	t	typeref:struct:__anona458f2750308	file:
inherited_storage	stb/tools/unicode.c	/^   size_t inherited_storage;$/;"	m	struct:__anona458f2750108	typeref:typename:size_t	file:
init	stb/tests/truetype_test_win32.c	/^void init(void)$/;"	f	typeref:typename:void
init_blocksize	stb/stb_vorbis.c	/^static int init_blocksize(vorb *f, int b, int n)$/;"	f	typeref:typename:int	file:
init_defaults	stb/deprecated/stb_image.c	/^static void init_defaults(void)$/;"	f	typeref:typename:void	file:
init_mode	stb/stb_rect_pack.h	/^   int init_mode;$/;"	m	struct:stbrp_context	typeref:typename:int
init_tex2_gradient	stb/tests/caveview/cave_render.c	/^void init_tex2_gradient(void)$/;"	f	typeref:typename:void
initialized	stb/stb_textedit.h	/^   unsigned char initialized;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
initialized	stb/tests/caveview/cave_main.c	/^static int initialized=0;$/;"	v	typeref:typename:int	file:
initialized	stb/tests/oversample/main.c	/^static int initialized=0;$/;"	v	typeref:typename:int	file:
initted	stb/stb_tilemap_editor.h	/^   int initted;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
input	stb/stb_voxel_render.h	/^   stbvox_input_description input;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:stbvox_input_description
input	stb/tools/unicode.c	/^   uval *input;$/;"	m	struct:__anona458f2750108	typeref:typename:uval *	file:
input_data	stb/stb_image_resize.h	/^    const void* input_data;$/;"	m	struct:__anonb59f51af0708	typeref:typename:const void *
input_h	stb/stb_image_resize.h	/^    int input_h;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
input_size	stb/tools/unicode.c	/^   size_t input_size;$/;"	m	struct:__anona458f2750108	typeref:typename:size_t	file:
input_stream	stb/stb_c_lexer.h	/^   char *input_stream;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
input_stride_bytes	stb/stb_image_resize.h	/^    int input_stride_bytes;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
input_w	stb/stb_image_resize.h	/^    int input_w;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
insert_chars	stb/tests/test_cpp_compilation.cpp	/^int insert_chars(STB_TEXTEDIT_STRING *str, int pos, STB_TEXTEDIT_CHARTYPE *newtext, int num)$/;"	f	typeref:typename:int
insert_chars	stb/tests/textedit_sample.c	/^int insert_chars(STB_TEXTEDIT_STRING *str, int pos, STB_TEXTEDIT_CHARTYPE *newtext, int num)$/;"	f	typeref:typename:int
insert_length	stb/stb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  insert_length;$/;"	m	struct:__anonb04bb6e60108	typeref:typename:STB_TEXTEDIT_POSITIONTYPE
insert_mode	stb/stb_textedit.h	/^   unsigned char insert_mode;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
int16	stb/deprecated/stb.h	/^   typedef   signed short  int16;$/;"	t	typeref:typename:signed short
int16	stb/stb_vorbis.c	/^typedef   signed short  int16;$/;"	t	typeref:typename:signed short	file:
int32	stb/deprecated/stb.h	/^   typedef   signed int    int32;$/;"	t	typeref:typename:signed int
int32	stb/deprecated/stb.h	/^   typedef   signed long   int32;$/;"	t	typeref:typename:signed long
int32	stb/stb_vorbis.c	/^typedef   signed int    int32;$/;"	t	typeref:typename:signed int	file:
int32_t	stb/tests/caveview/glext.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	stb/tests/caveview/glext.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	stb/tests/caveview/glext.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	stb/tests/caveview/glext.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	stb/tests/caveview/glext.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
int8	stb/deprecated/stb.h	/^   typedef   signed char   int8 ;$/;"	t	typeref:typename:signed char
int8	stb/stb_vorbis.c	/^typedef   signed char   int8;$/;"	t	typeref:typename:signed char	file:
int_number	stb/stb_c_lexer.h	/^   long   int_number;$/;"	m	struct:__anone321a15d0108	typeref:typename:long
integer_align	stb/tests/oversample/main.c	/^int integer_align;$/;"	v	typeref:typename:int
integer_divide_table	stb/stb_vorbis.c	/^int8 integer_divide_table[DIVTAB_NUMER][DIVTAB_DENOM]; \/\/ 2KB$/;"	v	typeref:typename:int8[][]
intfield	stb/stb_c_lexer.h	/^#define intfield /;"	d
intmax_t	stb/tests/test_sprintf.c	/^typedef int intmax_t;$/;"	t	typeref:typename:int	file:
inverse_db_table	stb/stb_vorbis.c	/^static float inverse_db_table[256] =$/;"	v	typeref:typename:float[256]	file:
inverse_mdct	stb/stb_vorbis.c	/^static void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f	typeref:typename:void	file:
inverse_mdct	stb/stb_vorbis.c	/^void inverse_mdct(float *buffer, int n, vorb *f, int blocktype)$/;"	f	typeref:typename:void
inverse_mdct_slow	stb/stb_vorbis.c	/^void inverse_mdct_slow(float *buffer, int n, vorb *f, int blocktype)$/;"	f	typeref:typename:void
invert	stb/stb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge	typeref:typename:int
io	stb/deprecated/stb_image.c	/^   stbi_io_callbacks io;$/;"	m	struct:__anon9409ffb90308	typeref:typename:stbi_io_callbacks	file:
io	stb/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anonc3e085de0308	typeref:typename:stbi_io_callbacks
io_user_data	stb/deprecated/stb_image.c	/^   void *io_user_data;$/;"	m	struct:__anon9409ffb90308	typeref:typename:void *	file:
io_user_data	stb/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anonc3e085de0308	typeref:typename:void *
is_box_in_frustum	stb/tests/caveview/cave_render.c	/^static int is_box_in_frustum(float *bmin, float *bmax)$/;"	f	typeref:typename:int	file:
is_corner	stb/stb_herringbone_wang_tile.h	/^   int is_corner;      \/\/ using corner colors or edge colors?$/;"	m	struct:__anon412b11070208	typeref:typename:int
is_corner	stb/stb_herringbone_wang_tile.h	/^   int is_corner;$/;"	m	struct:stbhw_tileset	typeref:typename:int
is_dir	stb/deprecated/stb.h	/^   int is_dir;$/;"	m	struct:__anonfe33527c2508	typeref:typename:int
is_object	stb/tests/tilemap_editor_integration_example.c	/^static int is_object(short *tiles)$/;"	f	typeref:typename:int	file:
is_platform	stb/tests/tilemap_editor_integration_example.c	/^static int is_platform(short *tiles)$/;"	f	typeref:typename:int	file:
is_synchronous_debug	stb/tests/caveview/cave_main.c	/^int is_synchronous_debug;$/;"	v	typeref:typename:int
is_valid	stb/deprecated/stb.h	/^   int is_valid;$/;"	m	struct:__anonfe33527c2508	typeref:typename:int
is_whole_packet_present	stb/stb_vorbis.c	/^static int is_whole_packet_present(stb_vorbis *f)$/;"	f	typeref:typename:int	file:
is_word_boundary	stb/stb_textedit.h	/^static int is_word_boundary( STB_TEXTEDIT_STRING *str, int idx )$/;"	f	typeref:typename:int
isdotdirname	stb/deprecated/stb.h	/^static int isdotdirname(char *name)$/;"	f	typeref:typename:int
isdotdirname	stb/tests/prerelease/stb_lib.h	/^static int isdotdirname(char *name)$/;"	f	typeref:typename:int
item_size	stb/deprecated/stb.h	/^   int item_size;$/;"	m	struct:stb__threadqueue	typeref:typename:int
iter_54	stb/stb_vorbis.c	/^static __forceinline void iter_54(float *z)$/;"	f	typeref:typename:void	file:
ival	stb/deprecated/stb.h	/^      int ival;$/;"	m	union:__anonfe33527c2808::__anonfe33527c290a	typeref:typename:int
jfif	stb/stb_image.h	/^   int            jfif;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
jpeg	stb/deprecated/stb_image.c	/^} jpeg;$/;"	t	typeref:struct:__anon9409ffb90608	file:
kern	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
kernel	stb/stb_image_resize.h	/^    stbir__kernel_fn* kernel;$/;"	m	struct:__anonb59f51af0508	typeref:typename:stbir__kernel_fn *
key	stb/deprecated/stb.h	/^   char *key;$/;"	m	struct:__anonfe33527c1208	typeref:typename:char *
key	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	m	struct:__anona15bb9d20508	typeref:typename:int
key	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	m	struct:__anona15bb9d20608	typeref:typename:int[2]
key	stb/tests/oversample/stb_wingraph.h	/^   int key;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
key	stb/tests/test_ds.c	/^  struct { int key,value; } *hash[50000];$/;"	m	struct:multisearch::__anon7e6d9c060408	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build::__anon7e6d9c060308	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn::__anon7e6d9c060108	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn_stats::__anon7e6d9c060208	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_average_lookup4::__anon7e6d9c060e08	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_build4::__anon7e6d9c060d08	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_uncached_lookup4::__anon7e6d9c061108	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_worst_lookup4_a::__anon7e6d9c060f08	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_worst_lookup4_b::__anon7e6d9c061008	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { int key,value; } *map[50000];$/;"	m	struct:multichurn4::__anon7e6d9c060b08	typeref:typename:int	file:
key	stb/tests/test_ds.c	/^  struct { size_t key,value; } *map=NULL;$/;"	m	struct:churn8::__anon7e6d9c060a08	typeref:typename:size_t	file:
key	stb/tests/test_ds.c	/^  struct { str256 key; int value; } *map=NULL;$/;"	m	struct:churn256::__anon7e6d9c060908	typeref:typename:str256	file:
key	stb/tests/test_ds.c	/^  struct { str32 key; int value; } *map=NULL;$/;"	m	struct:churn32::__anon7e6d9c060708	typeref:typename:str32	file:
key	stb/tests/test_ds.c	/^  struct { unsigned int key,value; } *map=NULL;$/;"	m	struct:churn_skip::__anon7e6d9c060508	typeref:typename:unsigned int	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build::__anon6cf133e80308	typeref:typename:int	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build_stb::__anon6cf133e80408	typeref:typename:int	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn::__anon6cf133e80108	typeref:typename:int	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn_stats::__anon6cf133e80208	typeref:typename:int	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { size_t key,value; } *map=NULL;$/;"	m	struct:churn8::__anon6cf133e80a08	typeref:typename:size_t	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { str256 key; int value; } *map=NULL;$/;"	m	struct:churn256::__anon6cf133e80908	typeref:typename:str256	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { str32 key; int value; } *map=NULL;$/;"	m	struct:churn32::__anon6cf133e80708	typeref:typename:str32	file:
key	stb/tests/test_ds_cpp.cpp	/^  struct { unsigned int key,value; } *map=NULL;$/;"	m	struct:churn_skip::__anon6cf133e80508	typeref:typename:unsigned int	file:
known_loc_for_packet	stb/stb_vorbis.c	/^   uint32 known_loc_for_packet;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
l2h_gamma	stb/deprecated/stb_image.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	typeref:typename:float	file:
l2h_scale	stb/deprecated/stb_image.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	typeref:typename:float	file:
label	stb/stb_connected_components.h	/^   stbcc__clumpid   label[STBCC__CLUSTER_SIZE_Y][STBCC__CLUSTER_SIZE_X];$/;"	m	struct:__anonc6c173d30708	typeref:typename:stbcc__clumpid[][]
large_bmap	stb/deprecated/stb.h	/^   stb_uint16  *large_bmap;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint16 *
last_decoded_sample	stb/stb_vorbis.c	/^   uint32 last_decoded_sample;$/;"	m	struct:__anon008e12ab0d08	typeref:typename:uint32	file:
last_dt	stb/tests/caveview/cave_main.c	/^static float last_dt;$/;"	v	typeref:typename:float	file:
last_dt	stb/tests/oversample/main.c	/^static float last_dt;$/;"	v	typeref:typename:float	file:
last_modified	stb/deprecated/stb.h	/^   time_t   last_modified;$/;"	m	struct:__anonfe33527c1308	typeref:typename:time_t
last_modified	stb/deprecated/stb.h	/^   time_t   last_modified;$/;"	m	struct:__anonfe33527c1408	typeref:typename:time_t
last_mouse_x	stb/stb_tilemap_editor.h	/^   int last_mouse_x, last_mouse_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
last_mouse_y	stb/stb_tilemap_editor.h	/^   int last_mouse_x, last_mouse_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
last_page	stb/stb_vorbis.c	/^   int last_page;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
last_region	stb/tests/caveview/cave_parse.c	/^FILE *last_region;$/;"	v	typeref:typename:FILE *
last_region_x	stb/tests/caveview/cave_parse.c	/^int last_region_x;$/;"	v	typeref:typename:int
last_region_z	stb/tests/caveview/cave_parse.c	/^int last_region_z;$/;"	v	typeref:typename:int
last_seg	stb/stb_vorbis.c	/^   int last_seg;  \/\/ flag that we're on the last segment$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
last_seg_which	stb/stb_vorbis.c	/^   int last_seg_which; \/\/ what was the segment number of the last seg?$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
last_step	stb/tests/test_ds.c	/^const int last_step = 384-48; \/\/ 32M$/;"	v	typeref:typename:const int
last_x	stb/tools/easy_font_maker.c	/^int last_x[2], last_y[2];$/;"	v	typeref:typename:int[2]
last_y	stb/tools/easy_font_maker.c	/^int last_x[2], last_y[2];$/;"	v	typeref:typename:int[2]
layer_scroll	stb/stb_tilemap_editor.h	/^    int layer_scroll;$/;"	m	struct:stbte_tilemap	typeref:typename:int
layerinfo	stb/stb_tilemap_editor.h	/^    stbte__layer layerinfo[STBTE_MAX_LAYERS];$/;"	m	struct:stbte_tilemap	typeref:typename:stbte__layer[]
layermask	stb/stb_tilemap_editor.h	/^   unsigned int layermask;$/;"	m	struct:__anonbd4d158d0608	typeref:typename:unsigned int
layername_width	stb/stb_tilemap_editor.h	/^    int layername_width;$/;"	m	struct:stbte_tilemap	typeref:typename:int
layers	window.cpp	/^  std::vector<IRenderLayer*> layers;$/;"	m	struct:WindowImpl	typeref:typename:std::vector<IRenderLayer * >	file:
layout_func	stb/tests/test_cpp_compilation.cpp	/^void layout_func(StbTexteditRow *row, STB_TEXTEDIT_STRING *str, int start_i)$/;"	f	typeref:typename:void
layout_func	stb/tests/textedit_sample.c	/^void layout_func(StbTexteditRow *row, STB_TEXTEDIT_STRING *str, int start_i)$/;"	f	typeref:typename:void
ldr_to_hdr	stb/deprecated/stb_image.c	/^static float   *ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *	file:
leader	stb/tests/grid_reachability.c	/^point leader[1024][1024];$/;"	v	typeref:typename:point[1024][1024]
left_width	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
len	stb/deprecated/stb.h	/^   int                start, len;$/;"	m	struct:stb__span	typeref:typename:int
len	stb/deprecated/stb.h	/^   int len, limit;$/;"	m	struct:__anonfe33527c0a08	typeref:typename:int
len	stb/deprecated/stb.h	/^   int len;$/;"	m	struct:__anonfe33527c2608	typeref:typename:int
len	stb/tests/caveview/cave_parse.c	/^   size_t len;$/;"	m	struct:__anonb02522120108	typeref:typename:size_t	file:
len	stb/tests/prerelease/stb_lib.h	/^   int len, limit;$/;"	m	struct:__anonb2174fab0308	typeref:typename:int
len	stb/tools/easy_font_maker.c	/^   unsigned char len:3;$/;"	m	struct:__anonc58d97050208	typeref:typename:unsigned char:3	file:
len_output	stb/deprecated/stb.h	/^   int *len_output;$/;"	m	struct:__anonfe33527c2608	typeref:typename:int *
length	stb/deprecated/stb_image.c	/^   stbi__uint32 length;$/;"	m	struct:__anon9409ffb90b08	typeref:typename:stbi__uint32	file:
length	stb/stb_ds.h	/^  size_t      length;$/;"	m	struct:__anona15bb9d20108	typeref:typename:size_t
length	stb/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anonc3e085de0d08	typeref:typename:stbi__uint32
length	stb/stb_sprintf.h	/^   int length;$/;"	m	struct:stbsp__context	typeref:typename:int
length	stb/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anonb04bb6e60508	typeref:typename:int
length	stb/tests/stb.c	/^   int length;$/;"	m	struct:__anon9cbc07790308	typeref:typename:int	file:
length	stb/tools/unicode.c	/^   int  length;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
length_base	stb/deprecated/stb_image.c	/^static int length_base[31] = {$/;"	v	typeref:typename:int[31]	file:
length_extra	stb/deprecated/stb_image.c	/^static int length_extra[31]= $/;"	v	typeref:typename:int[31]	file:
length_id	stb/deprecated/stb.h	/^   int length_id;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
lflags	stb/deprecated/stb_image.c	/^   int lflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
lflags	stb/stb_image.h	/^   int lflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
light	stb/tests/caveview/cave_parse.h	/^   unsigned char *light[NUM_SEGMENTS];$/;"	m	struct:__anonb02522170308	typeref:typename:unsigned char * []
light	stb/tests/caveview/cave_parse.h	/^   unsigned char light:4;$/;"	m	struct:__anonb02522170108	typeref:typename:unsigned char:4
lighting	stb/stb_voxel_render.h	/^   unsigned char *lighting;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
lighting_at_vertices	stb/stb_voxel_render.h	/^   unsigned char lighting_at_vertices;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char
limit	stb/deprecated/stb.h	/^   int len, limit;$/;"	m	struct:__anonfe33527c0a08	typeref:typename:int
limit	stb/tests/prerelease/stb_lib.h	/^   int len, limit;$/;"	m	struct:__anonb2174fab0308	typeref:typename:int
line	stb/deprecated/stb.h	/^   int  line;$/;"	m	struct:__anonfe33527c1608	typeref:typename:int
line	stb/deprecated/stb.h	/^   int line;$/;"	m	struct:__anonfe33527c2808	typeref:typename:int
line	stb/stb_leakcheck.h	/^   int line;$/;"	m	struct:malloc_info	typeref:typename:int
line0	stb/deprecated/stb_image.c	/^   stbi__uint8 *line0,*line1;$/;"	m	struct:__anon9409ffb90808	typeref:typename:stbi__uint8 *	file:
line0	stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonc3e085de0a08	typeref:typename:stbi_uc *
line1	stb/deprecated/stb_image.c	/^   stbi__uint8 *line0,*line1;$/;"	m	struct:__anon9409ffb90808	typeref:typename:stbi__uint8 *	file:
line1	stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonc3e085de0a08	typeref:typename:stbi_uc *
line_index	stb/deprecated/stb.h	/^   unsigned short *line_index;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:unsigned short *
line_number	stb/stb_c_lexer.h	/^   int line_number;$/;"	m	struct:__anone321a15d0208	typeref:typename:int
line_offset	stb/stb_c_lexer.h	/^   int line_offset;$/;"	m	struct:__anone321a15d0208	typeref:typename:int
line_size	stb/deprecated/stb_image.c	/^   int line_size;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
line_size	stb/stb_image.h	/^   int line_size;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
linebuf	stb/deprecated/stb_image.c	/^      stbi__uint8 *linebuf;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:stbi__uint8 *	file:
linebuf	stb/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:stbi_uc *
link	stb/stb_tilemap_editor.h	/^    stbte__link link[STBTE_MAX_TILEMAP_Y][STBTE_MAX_TILEMAP_X];$/;"	m	struct:stbte_tilemap	typeref:typename:stbte__link[][]
link	stb/tools/build_matrix.c	/^   char *link;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
linkcount	stb/stb_tilemap_editor.h	/^    int linkcount[STBTE_MAX_TILEMAP_Y][STBTE_MAX_TILEMAP_X];$/;"	m	struct:stbte_tilemap	typeref:typename:int[][]
linking	stb/stb_tilemap_editor.h	/^   int linking;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
list	stb/deprecated/stb.h	/^   unsigned short     list; \/\/ 1..256 free; 257..511 sizeclass; 0=large block$/;"	m	struct:stb__span	typeref:typename:unsigned short
lo	stb/tools/unicode.c	/^   uval lo,hi;$/;"	m	struct:__anona458f2750608	typeref:typename:uval	file:
load_fonts	stb/tests/oversample/main.c	/^void load_fonts(void)$/;"	f	typeref:typename:void
load_jpeg_image	stb/deprecated/stb_image.c	/^static stbi__uint8 *load_jpeg_image(jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi__uint8 *	file:
load_jpeg_image	stb/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
load_region	stb/tests/caveview/cave_parse.c	/^static region *load_region(int reg_x, int reg_z)$/;"	f	typeref:typename:region *	file:
loaded_file	stb/deprecated/stb.h	/^   char *loaded_file;   \/\/ this needs to be freed$/;"	m	struct:stb_cfg_st	typeref:typename:char *
loc	stb/tests/grid_reachability.c	/^int loc[5000][2];$/;"	v	typeref:typename:int[5000][2]
loc_a_color	render-shapes.cpp	/^  GLint loc_a_color;$/;"	m	struct:RenderShapesImpl	typeref:typename:GLint	file:
loc_a_corner	render-sprites.cpp	/^  GLint loc_a_corner;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_a_distance	render-shapes.cpp	/^  GLint loc_a_distance;$/;"	m	struct:RenderShapesImpl	typeref:typename:GLint	file:
loc_a_position	render-shapes.cpp	/^  GLint loc_a_position;$/;"	m	struct:RenderShapesImpl	typeref:typename:GLint	file:
loc_a_position	render-sprites.cpp	/^  GLint loc_a_position;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_a_position	render-surface.cpp	/^  GLint loc_a_position;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:GLint	file:
loc_a_rotation	render-sprites.cpp	/^  GLint loc_a_rotation;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_a_texcoord	render-sprites.cpp	/^  GLint loc_a_texcoord;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_a_texcoord	render-surface.cpp	/^  GLint loc_a_texcoord;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:GLint	file:
loc_u_camera_position	render-shapes.cpp	/^  GLint loc_u_camera_position;$/;"	m	struct:RenderShapesImpl	typeref:typename:GLint	file:
loc_u_camera_position	render-sprites.cpp	/^  GLint loc_u_camera_position;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_u_camera_scale	render-shapes.cpp	/^  GLint loc_u_camera_scale;$/;"	m	struct:RenderShapesImpl	typeref:typename:GLint	file:
loc_u_camera_scale	render-sprites.cpp	/^  GLint loc_u_camera_scale;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_u_texture	render-sprites.cpp	/^  GLint loc_u_texture;$/;"	m	struct:RenderSpritesImpl	typeref:typename:GLint	file:
loc_u_texture	render-surface.cpp	/^  GLint loc_u_texture;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:GLint	file:
loca	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
lock_chunk_get_mutex	stb/tests/caveview/cave_mesher.c	/^void lock_chunk_get_mutex(void)$/;"	f	typeref:typename:void
locked	stb/stb_tilemap_editor.h	/^   int locked;$/;"	m	struct:__anonbd4d158d0f08	typeref:typename:int
log2n	stb/stb_vorbis.c	/^  int log2n;$/;"	m	struct:__anon008e12ab1008	typeref:typename:int	file:
lookup1_values	stb/stb_vorbis.c	/^static int lookup1_values(int entries, int dim)$/;"	f	typeref:typename:int	file:
lookup_type	stb/stb_vorbis.c	/^   uint8  lookup_type;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint8	file:
lookup_values	stb/stb_vorbis.c	/^   uint32 lookup_values;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint32	file:
loopmode	stb/tests/caveview/cave_main.c	/^int loopmode(float dt, int real, int in_client)$/;"	f	typeref:typename:int
loopmode	stb/tests/oversample/main.c	/^int loopmode(float dt, int real, int in_client)$/;"	f	typeref:typename:int
lpal	stb/deprecated/stb_image.c	/^   stbi__uint8 lpal[256][4];$/;"	m	struct:stbi_gif_struct	typeref:typename:stbi__uint8[256][4]	file:
lpal	stb/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc[256][4]
ma	stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonc3e085de1008	typeref:typename:unsigned int
magnitude	stb/stb_vorbis.c	/^   uint8 magnitude;$/;"	m	struct:__anon008e12ab0908	typeref:typename:uint8	file:
main	main.cpp	/^int main(int, char**) {$/;"	f	typeref:typename:int
main	stb/deprecated/stretch_test.c	/^int main(int arg, char **argv)$/;"	f	typeref:typename:int
main	stb/stb_c_lexer.h	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/stb_divide.h	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/stb_dxt.h	/^int main()$/;"	f	typeref:typename:int
main	stb/tests/fuzz_main.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/grid_reachability.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/herringbone_generator.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/herringbone_map.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/image_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/image_write_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/resample_test.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	stb/tests/resample_test_c.c	/^int main() {$/;"	f	typeref:typename:int
main	stb/tests/sdf/sdf_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/stb.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/stb_cpp.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/stblib_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_ds.c	/^int main(int arg, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_ds.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_ds_cpp.cpp	/^int main(int arg, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_ds_cpp.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_siphash.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_sprintf.c	/^int main()$/;"	f	typeref:typename:int
main	stb/tests/test_truetype.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/test_vorbis.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tests/vorbseek/vorbseek.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tools/build_matrix.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tools/easy_font_maker.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tools/make_readme.c	/^int main(int argc, char  **argv)$/;"	f	typeref:typename:int
main	stb/tools/trailing_whitespace.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	stb/tools/unicode.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main_loop	main.cpp	/^void main_loop() {$/;"	f	typeref:typename:void
main_loop_running	main.cpp	/^static bool main_loop_running = true;$/;"	v	typeref:typename:bool	file:
main_prog	stb/tests/caveview/cave_render.c	/^GLuint main_prog;$/;"	v	typeref:typename:GLuint
make_block_array	stb/stb_vorbis.c	/^static void *make_block_array(void *mem, int count, int size)$/;"	f	typeref:typename:void *	file:
make_converted_fastchunk	stb/tests/caveview/cave_mesher.c	/^void make_converted_fastchunk(fast_chunk *fc, int x, int y, int segment, uint8 *sv_blocktype, ui/;"	f	typeref:typename:void
make_map_segment_for_superchunk_preconvert	stb/tests/caveview/cave_mesher.c	/^void make_map_segment_for_superchunk_preconvert(int chunk_x, int chunk_y, int segment, fast_chun/;"	f	typeref:typename:void
make_texture_buffer_for_uniform	stb/tests/caveview/cave_render.c	/^void make_texture_buffer_for_uniform(int uniform, int slot)$/;"	f	typeref:typename:void
malloc	stb/deprecated/stb.h	/^   #define malloc(/;"	d
malloc	stb/deprecated/stb.h	/^#define malloc /;"	d
malloc	stb/stb_leakcheck.h	/^#define malloc(/;"	d
malloc	stb/stb_vorbis.c	/^   #define malloc(/;"	d	file:
malloc_base	stb/deprecated/stb.h	/^static void * malloc_base(void *context, size_t size, stb__alloc_type t, int align)$/;"	f	typeref:typename:void *
malloc_info	stb/stb_leakcheck.h	/^struct malloc_info$/;"	s
map	stb/deprecated/stb.h	/^   unsigned short map;$/;"	m	struct:__anonfe33527c0c08	typeref:typename:unsigned short
map	stb/stb_connected_components.h	/^   unsigned char map[STBCC__GRID_COUNT_Y][STBCC__MAP_STRIDE]; \/\/ 1K x 1K => 1K x 128 => 128KB$/;"	m	struct:st_stbcc_grid	typeref:typename:unsigned char[][]
mapping	atlas.cpp	/^  std::vector<SpriteLocation> mapping;$/;"	m	struct:AtlasImpl	typeref:typename:std::vector<SpriteLocation>	file:
mapping	font.cpp	/^  std::vector<FontCharacter> mapping;$/;"	m	struct:FontImpl	typeref:typename:std::vector<FontCharacter>	file:
mapping	stb/stb_vorbis.c	/^   Mapping *mapping;$/;"	m	struct:stb_vorbis	typeref:typename:Mapping *	file:
mapping	stb/stb_vorbis.c	/^   uint8 mapping;$/;"	m	struct:__anon008e12ab0b08	typeref:typename:uint8	file:
mapping_count	stb/stb_vorbis.c	/^   int mapping_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
marker	stb/deprecated/stb_image.c	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon9409ffb90608	typeref:typename:unsigned char	file:
marker	stb/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anonc3e085de0808	typeref:typename:unsigned char
mask	stb/deprecated/stb.h	/^   int size, mask;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
match	stb/deprecated/stb.h	/^   stb_int16  match; \/\/ character\/set to match$/;"	m	struct:__anonfe33527c1c08	typeref:typename:stb_int16
match_start	stb/deprecated/stb.h	/^   int match_start;$/;"	m	struct:stb_matcher	typeref:typename:int
matd_mul	stb/tests/caveview/cave_render.c	/^static void matd_mul(double out[4][4], double src1[4][4], double src2[4][4])$/;"	f	typeref:typename:void	file:
max	stb/deprecated/stb.h	/^     #define max(/;"	d
max_adjacent	stb/stb_connected_components.h	/^   unsigned char max_adjacent;                \/\/ 1$/;"	m	struct:__anonc6c173d30408	typeref:typename:unsigned char
max_chunk_storage	stb/tests/caveview/cave_render.c	/^int max_chunk_storage = 450 << 20;$/;"	v	typeref:typename:int
max_chunk_storage	stb/tests/caveview/cave_render.c	/^int max_chunk_storage = 900 << 20;$/;"	v	typeref:typename:int
max_frame_size	stb/stb_vorbis.c	/^   int max_frame_size;$/;"	m	struct:__anon008e12ab0208	typeref:typename:int	file:
max_h_tiles	stb/stb_herringbone_wang_tile.h	/^   int num_h_tiles, max_h_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:int
max_hit_probes	stb/tests/test_ds.c	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
max_hit_probes	stb/tests/test_ds_cpp.cpp	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
max_miss_probes	stb/tests/test_ds.c	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
max_miss_probes	stb/tests/test_ds_cpp.cpp	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
max_tiles	stb/stb_tilemap_editor.h	/^    int num_tiles, max_tiles, digits;$/;"	m	struct:stbte_tilemap	typeref:typename:int
max_v_tiles	stb/stb_herringbone_wang_tile.h	/^   int num_v_tiles, max_v_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:int
max_x	stb/deprecated/stb_image.c	/^   int max_x, max_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
max_x	stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
max_x	stb/stb_tilemap_editor.h	/^    int max_x, max_y, num_layers;$/;"	m	struct:stbte_tilemap	typeref:typename:int
max_x	stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:stbtt_int32
max_y	stb/deprecated/stb_image.c	/^   int max_x, max_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
max_y	stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
max_y	stb/stb_tilemap_editor.h	/^    int max_x, max_y, num_layers;$/;"	m	struct:stbte_tilemap	typeref:typename:int
max_y	stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:stbtt_int32
max_y	stb/tests/caveview/cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anonb02522170308	typeref:typename:int
max_y	stb/tests/caveview/cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anonb02522170208	typeref:typename:int
maxcode	stb/deprecated/stb_image.c	/^   int maxcode[17];$/;"	m	struct:__anon9409ffb90908	typeref:typename:int[17]	file:
maxcode	stb/deprecated/stb_image.c	/^   unsigned int maxcode[18];$/;"	m	struct:__anon9409ffb90508	typeref:typename:unsigned int[18]	file:
maxcode	stb/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:int[17]
maxcode	stb/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anonc3e085de0708	typeref:typename:unsigned int[18]
maxval	stb/deprecated/stb.h	/^   int minval, maxval, guess;$/;"	m	struct:__anonfe33527c0408	typeref:typename:int
maybe_start_packet	stb/stb_vorbis.c	/^static int maybe_start_packet(vorb *f)$/;"	f	typeref:typename:int	file:
mb	stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonc3e085de1008	typeref:typename:unsigned int
mc_rot	stb/tests/caveview/cave_mesher.c	/^unsigned char mc_rot[4] = { 1,3,2,0 };$/;"	v	typeref:typename:unsigned char[4]
mdct_lookup	stb/stb_vorbis.c	/^} mdct_lookup;$/;"	t	typeref:struct:__anon008e12ab1008	file:
measure	stb/tests/test_ds.c	/^void measure(void)$/;"	f	typeref:typename:void
measure	stb/tests/test_ds_cpp.cpp	/^void measure(void)$/;"	f	typeref:typename:void
measure_average_lookup4	stb/tests/test_ds.c	/^int measure_average_lookup4(int step_log2)$/;"	f	typeref:typename:int
measure_build4	stb/tests/test_ds.c	/^void measure_build4(int step_log2)$/;"	f	typeref:typename:void
measure_uncached_lookup4	stb/tests/test_ds.c	/^int measure_uncached_lookup4(int step_log2)$/;"	f	typeref:typename:int
measure_worst_lookup4_a	stb/tests/test_ds.c	/^int measure_worst_lookup4_a(int step_log2)$/;"	f	typeref:typename:int
measure_worst_lookup4_b	stb/tests/test_ds.c	/^int measure_worst_lookup4_b(int step_log2)$/;"	f	typeref:typename:int
memory	stb/tests/resample_test.cpp	/^	void* memory;$/;"	m	class:stbir_context	typeref:typename:void *	file:
mesh_data	stb/tests/caveview/cave_render.c	/^mesh_worker mesh_data[MAX_MESH_WORKERS];$/;"	v	typeref:typename:mesh_worker[]
mesh_init	stb/tests/caveview/cave_mesher.c	/^void mesh_init(void)$/;"	f	typeref:typename:void
mesh_worker	stb/tests/caveview/cave_render.c	/^} mesh_worker;$/;"	t	typeref:struct:__anonb6d309d70308	file:
mesh_worker_handler	stb/tests/caveview/cave_render.c	/^int mesh_worker_handler(void *data)$/;"	f	typeref:typename:int
message	stb/tests/grid_reachability.c	/^static char *message;$/;"	v	typeref:typename:char *	file:
message	stb/tests/stb.c	/^   char *message;$/;"	m	struct:__anon9cbc07790308	typeref:typename:char *	file:
mg	stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonc3e085de1008	typeref:typename:unsigned int
mi_head	stb/stb_leakcheck.h	/^static stb_leakcheck_malloc_info *mi_head;$/;"	v	typeref:typename:stb_leakcheck_malloc_info *
min	stb/deprecated/stb.h	/^     #define min(/;"	d
min_chunk_storage	stb/tests/caveview/cave_render.c	/^int min_chunk_storage = 350 << 20;$/;"	v	typeref:typename:int
min_chunk_storage	stb/tests/caveview/cave_render.c	/^int min_chunk_storage = 800 << 20;$/;"	v	typeref:typename:int
min_priority	stb/tests/caveview/cave_render.c	/^float min_priority = -500; \/\/ this really wants to be in unit space, not squared space$/;"	v	typeref:typename:float
min_x	stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:stbtt_int32
min_y	stb/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:stbtt_int32
minecraft_chunk_parse	stb/tests/caveview/cave_parse.c	/^static parse_chunk *minecraft_chunk_parse(unsigned char *data, size_t len)$/;"	f	typeref:typename:parse_chunk *	file:
minecraft_color_for_blocktype	stb/tests/caveview/cave_mesher.c	/^unsigned char minecraft_color_for_blocktype[256][6];$/;"	v	typeref:typename:unsigned char[256][6]
minecraft_geom_for_blocktype	stb/tests/caveview/cave_mesher.c	/^unsigned char minecraft_geom_for_blocktype[256];$/;"	v	typeref:typename:unsigned char[256]
minecraft_info	stb/tests/caveview/cave_mesher.c	/^unsigned char minecraft_info[256][7] =$/;"	v	typeref:typename:unsigned char[256][7]
minecraft_tex1_for_blocktype	stb/tests/caveview/cave_mesher.c	/^unsigned char minecraft_tex1_for_blocktype[256][6];$/;"	v	typeref:typename:unsigned char[256][6]
minimum_value	stb/stb_vorbis.c	/^   float  minimum_value;$/;"	m	struct:__anon008e12ab0408	typeref:typename:float	file:
minval	stb/deprecated/stb.h	/^   int minval, maxval, guess;$/;"	m	struct:__anonfe33527c0408	typeref:typename:int
mkdir	stb/tests/resample_test.cpp	/^#define mkdir(/;"	d	file:
mm	stb/tests/caveview/caveview.h	/^   stbvox_mesh_maker mm;$/;"	m	struct:__anonc22370580108	typeref:typename:stbvox_mesh_maker
mn	stb/tests/test_ds.c	/^unsigned __int64 t0, xsum, mn,mx,count;$/;"	v	typeref:typename:unsigned __int64
mn	stb/tests/test_ds_cpp.cpp	/^size_t t0, sum, mn,mx,count;$/;"	v	typeref:typename:size_t
mode	stb/deprecated/stb.h	/^   int mode, step;$/;"	m	struct:__anonfe33527c0408	typeref:typename:int
mode	stb/stb_ds.h	/^  unsigned char mode;  \/\/ this isn't used by the string arena itself$/;"	m	struct:stbds_string_arena	typeref:typename:unsigned char
mode	stb/stb_tilemap_editor.h	/^   int expanded, mode;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
mode_config	stb/stb_vorbis.c	/^   Mode mode_config[64];  \/\/ varies$/;"	m	struct:stb_vorbis	typeref:typename:Mode[64]	file:
mode_count	stb/stb_vorbis.c	/^   int mode_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
mode_info	stb/tools/unicode.c	/^} mode_info;$/;"	t	typeref:struct:__anona458f2750508	file:
modes	stb/tools/unicode.c	/^mode_info modes[] =$/;"	v	typeref:typename:mode_info[]
move	stb/tests/oversample/main.c	/^int move[4];$/;"	v	typeref:typename:int[4]
mr	stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anonc3e085de1008	typeref:typename:unsigned int
ms_time	stb/stb_tilemap_editor.h	/^   int ms_time;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
mstats	stb/tests/test_ds.c	/^} mstats[32][4000];$/;"	v	typeref:struct:__anon7e6d9c060c08[32][4000]
msum	stb/tests/stb.c	/^stb_mutex msum;$/;"	v	typeref:typename:stb_mutex
mtfrand	stb/tests/resample_test.cpp	/^inline float mtfrand()$/;"	f	typeref:typename:float
mtrand	stb/tests/resample_test.cpp	/^size_t mtrand()$/;"	f	typeref:typename:size_t
mtsrand	stb/tests/resample_test.cpp	/^void mtsrand(size_t iSeed)$/;"	f	typeref:typename:void
multibuild_stb	stb/tests/test_ds.c	/^void multibuild_stb(int a, int b, int count, int step, int tables)$/;"	f	typeref:typename:void
multichurn4	stb/tests/test_ds.c	/^void multichurn4(int a, int b, int count, int include_startup, int tables)$/;"	f	typeref:typename:void
multiplicand	stb/deprecated/stb.h	/^   stb_uint    multiplicand;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint
multiplicands	stb/stb_vorbis.c	/^   codetype *multiplicands;$/;"	m	struct:__anon008e12ab0408	typeref:typename:codetype *	file:
multisearch	stb/tests/test_ds.c	/^int multisearch(int a, int start, int end, int step, int tables)$/;"	f	typeref:typename:int
multisearch_stb	stb/tests/test_ds.c	/^int multisearch_stb(int a, int start, int end, int step, int tables)$/;"	f	typeref:typename:int
mutex	stb/deprecated/stb.h	/^   stb_mutex mutex;   \/\/ mutex while tweaking state$/;"	m	struct:stb__sync	typeref:typename:stb_mutex
mutex	stb/tests/stb.c	/^stb_mutex mutex;$/;"	v	typeref:typename:stb_mutex
mux	stb/stb_vorbis.c	/^   uint8 mux;$/;"	m	struct:__anon008e12ab0908	typeref:typename:uint8	file:
mx	stb/stb_tilemap_editor.h	/^   int mx,my, dx,dy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
mx	stb/tests/oversample/stb_wingraph.h	/^   int   mx,my; \/\/ last mouse positions$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
mx	stb/tests/oversample/stb_wingraph.h	/^   int mx,my; \/\/ mouse x & y$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
mx	stb/tests/test_ds.c	/^unsigned __int64 t0, xsum, mn,mx,count;$/;"	v	typeref:typename:unsigned __int64
mx	stb/tests/test_ds_cpp.cpp	/^size_t t0, sum, mn,mx,count;$/;"	v	typeref:typename:size_t
my	stb/stb_tilemap_editor.h	/^   int mx,my, dx,dy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
my	stb/tests/oversample/stb_wingraph.h	/^   int   mx,my; \/\/ last mouse positions$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
my	stb/tests/oversample/stb_wingraph.h	/^   int mx,my; \/\/ mouse x & y$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
mySetPixelFormat	stb/tests/truetype_test_win32.c	/^int mySetPixelFormat(HWND win)$/;"	f	typeref:typename:int
my_free	stb/tests/test_cpp_compilation.cpp	/^void my_free(void *) { }$/;"	f	typeref:typename:void
my_malloc	stb/tests/test_cpp_compilation.cpp	/^void *my_malloc(size_t) { return 0; }$/;"	f	typeref:typename:void *
my_realloc	stb/tests/test_cpp_compilation.cpp	/^void *my_realloc(void *, size_t) { return 0; }$/;"	f	typeref:typename:void *
my_stbtt_initfont	glwrappers.cpp	/^void my_stbtt_initfont()$/;"	f	typeref:typename:void
my_stbtt_print	glwrappers.cpp	/^void my_stbtt_print(float x, float y, const char *text)$/;"	f	typeref:typename:void
n	stb/stb_vorbis.c	/^  int n;$/;"	m	struct:__anon008e12ab1008	typeref:typename:int	file:
n	stb/tests/test_ds.c	/^typedef struct { int n[32]; } str256;$/;"	m	struct:__anon7e6d9c060808	typeref:typename:int[32]	file:
n	stb/tests/test_ds.c	/^typedef struct { int n[8]; } str32;$/;"	m	struct:__anon7e6d9c060608	typeref:typename:int[8]	file:
n	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[32]; } str256;$/;"	m	struct:__anon6cf133e80808	typeref:typename:int[32]	file:
n	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[8]; } str32;$/;"	m	struct:__anon6cf133e80608	typeref:typename:int[8]	file:
n0	stb/stb_image_resize.h	/^    int n0; \/\/ First contributing pixel$/;"	m	struct:__anonb59f51af0608	typeref:typename:int
n1	stb/stb_image_resize.h	/^    int n1; \/\/ Last contributing pixel$/;"	m	struct:__anonb59f51af0608	typeref:typename:int
name	stb/deprecated/stb.h	/^   char *name;              \/\/ name relative to path$/;"	m	struct:__anonfe33527c1408	typeref:typename:char *
name	stb/deprecated/stb.h	/^   char *name;$/;"	m	struct:__anonfe33527c1108	typeref:typename:char *
name	stb/stb_tilemap_editor.h	/^   const char *name;$/;"	m	struct:__anonbd4d158d0f08	typeref:typename:const char *
name	stb/stb_voxel_render.h	/^   char *name;                  \/\/ name in the shader @TODO use numeric binding$/;"	m	struct:stbvox_uniform_info	typeref:typename:char *
nbt	stb/tests/caveview/cave_parse.c	/^} nbt;$/;"	t	typeref:struct:__anonb02522120308	file:
nbt_begin_compound	stb/tests/caveview/cave_parse.c	/^static void nbt_begin_compound(nbt *n) \/\/ start a compound$/;"	f	typeref:typename:void	file:
nbt_begin_compound_in_list	stb/tests/caveview/cave_parse.c	/^static void nbt_begin_compound_in_list(nbt *n) \/\/ start a compound$/;"	f	typeref:typename:void	file:
nbt_begin_list	stb/tests/caveview/cave_parse.c	/^static int nbt_begin_list(nbt *n, unsigned char type)$/;"	f	typeref:typename:int	file:
nbt_end_compound	stb/tests/caveview/cave_parse.c	/^static void nbt_end_compound(nbt *n) \/\/ end a compound$/;"	f	typeref:typename:void	file:
nbt_end_list	stb/tests/caveview/cave_parse.c	/^static void nbt_end_list(nbt *n)$/;"	f	typeref:typename:void	file:
nbt_get	stb/tests/caveview/cave_parse.c	/^static void *nbt_get(nbt *n, unsigned char type, int *len)$/;"	f	typeref:typename:void *	file:
nbt_get_fromlist	stb/tests/caveview/cave_parse.c	/^static void *nbt_get_fromlist(nbt *n, unsigned char type, int *len)$/;"	f	typeref:typename:void *	file:
nbt_get_string_data	stb/tests/caveview/cave_parse.c	/^static void nbt_get_string_data(unsigned char *data, char *buffer, size_t bufsize)$/;"	f	typeref:typename:void	file:
nbt_parse_uint32	stb/tests/caveview/cave_parse.c	/^static uint32 nbt_parse_uint32(unsigned char *buffer)$/;"	f	typeref:typename:uint32	file:
nbt_peek	stb/tests/caveview/cave_parse.c	/^static char *nbt_peek(nbt *n)$/;"	f	typeref:typename:char *	file:
nbt_skip	stb/tests/caveview/cave_parse.c	/^static void nbt_skip(nbt *n)$/;"	f	typeref:typename:void	file:
nbt_skip_raw	stb/tests/caveview/cave_parse.c	/^static void nbt_skip_raw(nbt *n, unsigned char type)$/;"	f	typeref:typename:void	file:
nbt_swap	stb/tests/caveview/cave_parse.c	/^static void nbt_swap(unsigned char *ptr, int len)$/;"	f	typeref:typename:void	file:
neighbors	stb/stb_vorbis.c	/^   uint8 neighbors[31*8+2][2];$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[][2]	file:
neighbors	stb/stb_vorbis.c	/^static void neighbors(uint16 *x, int n, int *plow, int *phigh)$/;"	f	typeref:typename:void	file:
nesting	stb/tests/caveview/cave_parse.c	/^   int nesting;$/;"	m	struct:__anonb02522120308	typeref:typename:int	file:
next	stb/deprecated/stb.h	/^   struct stb__chunk *next;$/;"	m	struct:stb__chunk	typeref:struct:stb__chunk *
next	stb/deprecated/stb.h	/^   struct stb__span  *next, *prev;$/;"	m	struct:stb__span	typeref:struct:stb__span *
next	stb/deprecated/stb.h	/^   struct stb__st_nptr *next;   \/\/ next pointer with same target$/;"	m	struct:stb__st_nptr	typeref:struct:stb__st_nptr *
next	stb/deprecated/stb.h	/^   void *  next;$/;"	m	struct:__anonfe33527c0608	typeref:typename:void *
next	stb/deprecated/stb.h	/^   void *  next;$/;"	m	struct:__anonfe33527c0708	typeref:typename:void *
next	stb/stb_ds.h	/^  struct stbds_string_block *next;$/;"	m	struct:stbds_string_block	typeref:struct:stbds_string_block *
next	stb/stb_leakcheck.h	/^   stb_leakcheck_malloc_info *next,*prev;$/;"	m	struct:malloc_info	typeref:typename:stb_leakcheck_malloc_info *
next	stb/stb_rect_pack.h	/^   stbrp_node  *next;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_node *
next	stb/stb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge *
next	stb/stb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk *
next_blocktype	stb/tests/caveview/cave_mesher.c	/^int next_blocktype = 255;$/;"	v	typeref:typename:int
next_hot_id	stb/stb_tilemap_editor.h	/^   int active_id, hot_id, next_hot_id;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
next_in_block	stb/deprecated/stb.h	/^   struct stb__st_nptr *next_in_block;$/;"	m	struct:stb__st_nptr	typeref:struct:stb__st_nptr *
next_in_block	stb/deprecated/stb.h	/^   struct stb__st_nptr_target *next_in_block;$/;"	m	struct:stb__st_nptr_target	typeref:struct:stb__st_nptr_target *
next_line_after	stb/stb_include.h	/^   int next_line_after;$/;"	m	struct:__anond138acff0108	typeref:typename:int
next_seg	stb/stb_vorbis.c	/^   int next_seg;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
next_segment	stb/stb_vorbis.c	/^static int next_segment(vorb *f)$/;"	f	typeref:typename:int	file:
nocopy	common.h	/^struct nocopy {$/;"	s
node	stb/deprecated/stb.h	/^   stb_uint16 node;  \/\/ output node to go to$/;"	m	struct:__anonfe33527c1c08	typeref:typename:stb_uint16
nodes	stb/deprecated/stb.h	/^   stb_nfa_node *nodes;$/;"	m	struct:stb_matcher	typeref:typename:stb_nfa_node *
nodes	stb/stb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
nomore	stb/deprecated/stb_image.c	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
nomore	stb/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
non_empty	stb/tools/easy_font_maker.c	/^int num_seg[2], non_empty;$/;"	v	typeref:typename:int
nonempty	stb/deprecated/stb.h	/^   stb_semaphore nonempty, nonfull;$/;"	m	struct:stb__threadqueue	typeref:typename:stb_semaphore
nonfull	stb/deprecated/stb.h	/^   stb_semaphore nonempty, nonfull;$/;"	m	struct:stb__threadqueue	typeref:typename:stb_semaphore
numGlyphs	stb/stb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
num_adjacent	stb/stb_connected_components.h	/^   unsigned char num_adjacent;                \/\/ 1$/;"	m	struct:__anonc6c173d30408	typeref:typename:unsigned char
num_bits	stb/deprecated/stb_image.c	/^   int num_bits;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:int	file:
num_bits	stb/stb_image.h	/^   int num_bits;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:int
num_categories	stb/stb_tilemap_editor.h	/^    int num_categories, category_scroll;$/;"	m	struct:stbte_tilemap	typeref:typename:int
num_channels	stb/stb_image.h	/^   int num_channels;$/;"	m	struct:__anonc3e085de0508	typeref:typename:int
num_chars	stb/stb_textedit.h	/^   int num_chars;$/;"	m	struct:__anonb04bb6e60408	typeref:typename:int
num_chars	stb/stb_truetype.h	/^   int num_chars;$/;"	m	struct:__anon77ab60dd0508	typeref:typename:int
num_charset	stb/deprecated/stb.h	/^   int num_charset;$/;"	m	struct:stb_matcher	typeref:typename:int
num_chunk_load_workers	stb/tests/caveview/cave_render.c	/^int num_chunk_load_workers;$/;"	v	typeref:typename:int
num_clumps	stb/stb_connected_components.h	/^   short num_clumps;$/;"	m	struct:__anonc6c173d30508	typeref:typename:short
num_color	stb/stb_herringbone_wang_tile.h	/^   int num_color[6];   \/\/ see below diagram for meaning of the index to this;$/;"	m	struct:__anon412b11070208	typeref:typename:int[6]
num_color	stb/stb_herringbone_wang_tile.h	/^   int num_color[6];  \/\/ number of colors for each of 6 edge types or 4 corner types$/;"	m	struct:stbhw_tileset	typeref:typename:int[6]
num_edge_clumps	stb/stb_connected_components.h	/^   unsigned char num_edge_clumps;$/;"	m	struct:__anonc6c173d30508	typeref:typename:unsigned char
num_files	stb/deprecated/stb.h	/^   int      num_files;$/;"	m	struct:__anonfe33527c1308	typeref:typename:int
num_h_tiles	stb/stb_herringbone_wang_tile.h	/^   int num_h_tiles, max_h_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:int
num_layers	stb/stb_tilemap_editor.h	/^    int max_x, max_y, num_layers;$/;"	m	struct:stbte_tilemap	typeref:typename:int
num_mesh_slots	stb/stb_voxel_render.h	/^   int   num_mesh_slots;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
num_mesh_workers	stb/tests/caveview/cave_render.c	/^int num_mesh_workers;$/;"	v	typeref:typename:int
num_meshes_started	stb/tests/caveview/cave_render.c	/^int num_meshes_started; \/\/ stats$/;"	v	typeref:typename:int
num_meshes_uploaded	stb/tests/caveview/cave_render.c	/^int num_meshes_uploaded;$/;"	v	typeref:typename:int
num_nodes	stb/stb_rect_pack.h	/^   int num_nodes;$/;"	m	struct:stbrp_context	typeref:typename:int
num_quads	stb/tests/caveview/cave_render.c	/^   int num_quads;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
num_quads	stb/tests/caveview/caveview.h	/^   int num_quads;$/;"	m	struct:__anonc22370580108	typeref:typename:int
num_remaining_in_head_chunk	stb/stb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap	typeref:typename:int
num_seg	stb/tools/easy_font_maker.c	/^int num_seg[2], non_empty;$/;"	v	typeref:typename:int[2]
num_subdir	stb/deprecated/stb.h	/^   int num_subdir;$/;"	m	struct:stb_dirtree2	typeref:typename:int
num_sym	stb/deprecated/stb.h	/^   int num_sym;$/;"	m	struct:__anonfe33527c2208	typeref:typename:int
num_threads_active	stb/tests/caveview/cave_render.c	/^int num_threads_active;$/;"	v	typeref:typename:int
num_tiles	stb/stb_tilemap_editor.h	/^    int num_tiles, max_tiles, digits;$/;"	m	struct:stbte_tilemap	typeref:typename:int
num_v_tiles	stb/stb_herringbone_wang_tile.h	/^   int num_v_tiles, max_v_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:int
num_vary_x	stb/stb_herringbone_wang_tile.h	/^   int num_vary_x;     \/\/ additional number of variations along x axis in the template$/;"	m	struct:__anon412b11070208	typeref:typename:int
num_vary_y	stb/stb_herringbone_wang_tile.h	/^   int num_vary_y;     \/\/ additional number of variations along y axis in the template$/;"	m	struct:__anon412b11070208	typeref:typename:int
num_vertices	stb/stb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:int
num_words_per_dfa	stb/deprecated/stb.h	/^   int num_words_per_dfa;$/;"	m	struct:stb_matcher	typeref:typename:int
number_of_books	stb/stb_vorbis.c	/^   uint8 number_of_books;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint8	file:
numthreads	stb/deprecated/stb.h	/^   int numthreads;$/;"	m	struct:stb__workqueue	typeref:typename:int
objdir	stb/tools/build_matrix.c	/^   char *objdir;$/;"	m	struct:__anon97bba3320108	typeref:typename:char *	file:
ods	stb/tests/caveview/cave_main.c	/^void ods(char *fmt, ...)$/;"	f	typeref:typename:void
offset	stb/deprecated/stb.h	/^   int offset;$/;"	m	struct:__anonfe33527c2608	typeref:typename:int
offset	stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anonc3e085de1008	typeref:typename:int
offset	stb/stb_include.h	/^   int offset;$/;"	m	struct:__anond138acff0108	typeref:typename:int
ogg_page_header	stb/stb_vorbis.c	/^static uint8 ogg_page_header[4] = { 0x4f, 0x67, 0x67, 0x53 };$/;"	v	typeref:typename:uint8[4]	file:
onedge_value	stb/tests/sdf/sdf_test.c	/^int onedge_value = 128;$/;"	v	typeref:typename:int
onion	stb/tests/grid_reachability.c	/^void onion(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
open_file	stb/tests/caveview/cave_parse.c	/^static void open_file(int reg_x, int reg_z)$/;"	f	typeref:typename:void	file:
opened	stb/tests/caveview/cave_parse.c	/^int opened=0;$/;"	v	typeref:typename:int
optimize_table	stb/tools/unicode.c	/^void optimize_table(table *t, char *table_name)$/;"	f	typeref:typename:void
order	stb/deprecated/stb_image.c	/^   int scan_n, order[4];$/;"	m	struct:__anon9409ffb90608	typeref:typename:int[4]	file:
order	stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonc3e085de0808	typeref:typename:int[4]
order	stb/stb_vorbis.c	/^   uint8 order;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint8	file:
out	stb/deprecated/stb.h	/^   stb_nfa_edge *out;$/;"	m	struct:__anonfe33527c1d08	typeref:typename:stb_nfa_edge *
out	stb/deprecated/stb_image.c	/^   stbi__uint8 *idata, *expanded, *out;$/;"	m	struct:__anon9409ffb90c08	typeref:typename:stbi__uint8 *	file:
out	stb/deprecated/stb_image.c	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:stbi_gif_struct	typeref:typename:stbi_uc *	file:
out	stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc3e085de0e08	typeref:typename:stbi_uc *
out	stb/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc *
outliterals	stb/deprecated/stb.h	/^static void outliterals(stb_uchar *in, ptrdiff_t numlit)$/;"	f	typeref:typename:void
output	emscripten-shell.html	/^    <textarea id="output" rows="8"><\/textarea>$/;"	I
output	stb/deprecated/stb.h	/^   stb_uchar *output;$/;"	m	struct:__anonfe33527c2608	typeref:typename:stb_uchar *
output	stb/deprecated/stb.h	/^   stbfile *output;$/;"	m	struct:__anonfe33527c2008	typeref:typename:stbfile *
output	stb/tests/test_truetype.c	/^unsigned char output[512*100];$/;"	v	typeref:typename:unsigned char[]
output	stb/tools/unicode.c	/^} output;$/;"	t	typeref:struct:__anona458f2750208	file:
output11	stb/tests/resample_test.cpp	/^static unsigned char output11[1][1];$/;"	v	typeref:typename:unsigned char[1][1]	file:
output22	stb/tests/resample_test.cpp	/^static unsigned char output22[2][2];$/;"	v	typeref:typename:unsigned char[2][2]	file:
output44	stb/tests/resample_test.cpp	/^static unsigned char output44[4][4];$/;"	v	typeref:typename:unsigned char[4][4]	file:
output88	stb/tests/resample_test.cpp	/^static unsigned char output88[8][8];$/;"	v	typeref:typename:unsigned char[8][8]	file:
output_buffer	stb/stb_voxel_render.h	/^   char *output_buffer[STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:char * [][]
output_cur	stb/stb_voxel_render.h	/^   char *output_cur   [STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:char * [][]
output_data	stb/stb_image_resize.h	/^    void* output_data;$/;"	m	struct:__anonb59f51af0708	typeref:typename:void *
output_end	stb/stb_voxel_render.h	/^   char *output_end   [STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:char * [][]
output_h	stb/stb_image_resize.h	/^    int output_h;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
output_len	stb/stb_voxel_render.h	/^   int   output_len   [STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int[][]
output_name	stb/tools/unicode.c	/^   char **output_name;$/;"	m	struct:__anona458f2750308	typeref:typename:char **	file:
output_size	stb/stb_voxel_render.h	/^   int   output_size  [STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS]; \/\/ per quad$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int[][]
output_step	stb/stb_voxel_render.h	/^   int   output_step  [STBVOX_MAX_MESHES][STBVOX_MAX_MESH_SLOTS]; \/\/ per vertex or per face, d/;"	m	struct:stbvox_mesh_maker	typeref:typename:int[][]
output_stride_bytes	stb/stb_image_resize.h	/^    int output_stride_bytes;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
output_table	stb/tools/unicode.c	/^void output_table(char *name1, char *name2, uval *data, int length, int sign, char **names)$/;"	f	typeref:typename:void
output_table_with_trims	stb/tools/unicode.c	/^void output_table_with_trims(char *name1, char *name2, uval *data, int length)$/;"	f	typeref:typename:void
output_w	stb/stb_image_resize.h	/^    int output_w;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
outputs	stb/stb_vorbis.c	/^   float *outputs        [STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	typeref:typename:float * []	file:
overhead	stb/tools/unicode.c	/^   uint16 overhead; \/\/ add some forced overhead for each mode to avoid getting complex encodin/;"	m	struct:__anona458f2750508	typeref:typename:uint16	file:
overlay	stb/stb_voxel_render.h	/^   unsigned char *overlay;                 \/\/ index into palettes listed below$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
overlay	stb/stb_voxel_render.h	/^   unsigned char overlay:2;$/;"	m	struct:__anonc1feb0a80c08	typeref:typename:unsigned char:2
overlay_color	stb/stb_voxel_render.h	/^   unsigned char (*overlay_color)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
overlay_side_texrot	stb/stb_voxel_render.h	/^   unsigned char *overlay_side_texrot;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
overlay_tex1	stb/stb_voxel_render.h	/^   unsigned char (*overlay_tex1)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
overlay_tex2	stb/stb_voxel_render.h	/^   unsigned char (*overlay_tex2)[6];$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char (*)[6]
oversample	stb/stb_hexwave.h	/^   int oversample;  \/\/ number of oversampled versions (there's actually one more to allow lerp/;"	m	struct:__anon773b6f930208	typeref:typename:int
p	stb/deprecated/stb.h	/^   void * p;$/;"	m	union:__anonfe33527c010a	typeref:typename:void *
p	stb/deprecated/stb.h	/^   void *p;$/;"	m	struct:__anonfe33527c1608	typeref:typename:void *
p	stb/deprecated/stb.h	/^   void *p[1];$/;"	m	struct:__anonfe33527c1908	typeref:typename:void * [1]
p	stb/deprecated/stb.h	/^   void *p[STB_BUCKET_SIZE];$/;"	m	struct:__anonfe33527c1808	typeref:typename:void * []
p_first	stb/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	typeref:typename:ProbedPage	file:
p_last	stb/stb_vorbis.c	/^   ProbedPage p_first, p_last;$/;"	m	struct:stb_vorbis	typeref:typename:ProbedPage	file:
pack_for_mode	stb/tools/unicode.c	/^table pack_for_mode(table *t, int mode, char *table_name)$/;"	f	typeref:typename:table
pack_info	stb/stb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
pack_table	stb/tools/unicode.c	/^result pack_table(table *t, size_t path, int min_storage)$/;"	f	typeref:typename:result
pack_table_by_modes	stb/tools/unicode.c	/^int pack_table_by_modes(table *t, int *modes)$/;"	f	typeref:typename:int
packed_compact	stb/stb_voxel_render.h	/^   unsigned char *packed_compact;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
packet_bytes	stb/stb_vorbis.c	/^   int packet_bytes;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
padding	stb/stb_tilemap_editor.h	/^    unsigned char padding;$/;"	m	struct:stbte_tilemap	typeref:typename:unsigned char
padding	stb/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:unsigned char
padding	stb/stb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
padding	stb/tests/caveview/cave_render.c	/^   int padding[13];$/;"	m	struct:__anonb6d309d70308	typeref:typename:int[13]	file:
padding	stb/tests/prerelease/stb_lib.h	/^   unsigned int padding; \/\/ make it a multiple of 16 so preserve alignment mod 16$/;"	m	struct:__anonb2174fab0308	typeref:typename:unsigned int
padding	stb/tests/sdf/sdf_test.c	/^int padding = 3; \/\/ not used in shader$/;"	v	typeref:typename:int
padding1	stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
padding2	stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
padding2	stb/tests/caveview/cave_render.c	/^   int padding2[16];$/;"	m	struct:__anonb6d309d70308	typeref:typename:int[16]	file:
padding3	stb/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
padding3	stb/tests/caveview/cave_render.c	/^   int padding3[16];$/;"	m	struct:__anonb6d309d70308	typeref:typename:int[16]	file:
paeth	stb/deprecated/stb_image.c	/^static int paeth(int a, int b, int c)$/;"	f	typeref:typename:int	file:
page_crc_tests	stb/stb_vorbis.c	/^   int page_crc_tests; \/\/ only in push_mode: number of tests active; -1 if not searching$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
page_end	stb/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon008e12ab0d08	typeref:typename:uint32	file:
page_flag	stb/stb_vorbis.c	/^   uint8 page_flag;$/;"	m	struct:stb_vorbis	typeref:typename:uint8	file:
page_start	stb/stb_vorbis.c	/^   uint32 page_start, page_end;$/;"	m	struct:__anon008e12ab0d08	typeref:typename:uint32	file:
pair	stb/stb_sprintf.h	/^   char pair[201];$/;"	m	struct:__anonb1ccf5010108	typeref:typename:char[201]
pal	stb/deprecated/stb_image.c	/^   stbi__uint8  pal[256][4];$/;"	m	struct:stbi_gif_struct	typeref:typename:stbi__uint8[256][4]	file:
pal	stb/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anonc3e085de1308	typeref:typename:stbi_uc[256][4]
palette_scroll	stb/stb_tilemap_editor.h	/^    int palette_scroll;$/;"	m	struct:stbte_tilemap	typeref:typename:int
palette_spacing_x	stb/stb_tilemap_editor.h	/^    int palette_spacing_x, palette_spacing_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
palette_spacing_y	stb/stb_tilemap_editor.h	/^    int palette_spacing_x, palette_spacing_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
panel	stb/stb_tilemap_editor.h	/^   stbte__panel panel[STBTE__num_panel];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:stbte__panel[]
parent	stb/deprecated/stb.h	/^   stb__alloc *parent;$/;"	m	struct:__anonfe33527c0808	typeref:typename:stb__alloc *
parent	stb/stb_connected_components.h	/^   stbcc__tinypoint parent[STBCC__CLUSTER_SIZE_Y][STBCC__CLUSTER_SIZE_X]; \/\/ 32x32 => 2KB$/;"	m	struct:__anonc6c173d30708	typeref:typename:stbcc__tinypoint[][]
parse	stb/deprecated/stb_image.c	/^   int parse, step;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
parse	stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
parse_char	stb/tools/easy_font_maker.c	/^int parse_char(int x, chardata *c, int offset)$/;"	f	typeref:typename:int
parse_chunk	stb/tests/caveview/cave_parse.c	/^typedef chunk parse_chunk;$/;"	t	typeref:typename:chunk	file:
parse_chunk	stb/tests/caveview/cave_parse.c	/^typedef fast_chunk parse_chunk;$/;"	t	typeref:typename:fast_chunk	file:
parse_entropy_coded_data	stb/deprecated/stb_image.c	/^static int parse_entropy_coded_data(jpeg *z)$/;"	f	typeref:typename:int	file:
parse_huffman_block	stb/deprecated/stb_image.c	/^static int parse_huffman_block(zbuf *a)$/;"	f	typeref:typename:int	file:
parse_png_file	stb/deprecated/stb_image.c	/^static int parse_png_file(png *z, int scan, int req_comp)$/;"	f	typeref:typename:int	file:
parse_point	stb/stb_c_lexer.h	/^   char *parse_point;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
parse_uncompressed_block	stb/deprecated/stb_image.c	/^static int parse_uncompressed_block(zbuf *a)$/;"	f	typeref:typename:int	file:
parse_zlib	stb/deprecated/stb_image.c	/^static int parse_zlib(zbuf *a, int parse_header)$/;"	f	typeref:typename:int	file:
parse_zlib_header	stb/deprecated/stb_image.c	/^static int parse_zlib_header(zbuf *a)$/;"	f	typeref:typename:int	file:
part_size	stb/stb_vorbis.c	/^   uint32 part_size;$/;"	m	struct:__anon008e12ab0808	typeref:typename:uint32	file:
partition_class_list	stb/stb_vorbis.c	/^   uint8 partition_class_list[32]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[32]	file:
partitions	stb/stb_vorbis.c	/^   uint8 partitions;$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8	file:
paste_x	stb/stb_tilemap_editor.h	/^   int pasting, paste_x, paste_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
paste_y	stb/stb_tilemap_editor.h	/^   int pasting, paste_x, paste_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
pasting	stb/stb_tilemap_editor.h	/^   int pasting, paste_x, paste_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
path	stb/deprecated/stb.h	/^   char   * path;           \/\/ full path from passed-in root$/;"	m	struct:__anonfe33527c1308	typeref:typename:char *
path	stb/tools/unicode.c	/^   size_t path;$/;"	m	struct:__anona458f2750408	typeref:typename:size_t	file:
pdata	stb/tests/test_truetype.c	/^stbtt_packedchar pdata[256*2];$/;"	v	typeref:typename:stbtt_packedchar[]
peak_time	stb/stb_hexwave.h	/^   float peak_time;$/;"	m	struct:__anon773b6f930108	typeref:typename:float
peek_decode_initial	stb/stb_vorbis.c	/^static int peek_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start, /;"	f	typeref:typename:int	file:
pending	stb/stb_hexwave.h	/^   HexWaveParameters current, pending;$/;"	m	struct:HexWave	typeref:typename:HexWaveParameters
pending_ffs	stb/deprecated/stb.h	/^   int pending_ffs;$/;"	m	struct:__anonfe33527c2008	typeref:typename:int
pending_literals	stb/deprecated/stb.h	/^   int pending_literals; \/\/ bytes not-quite output but counted in start$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
pending_view_x	stb/tests/caveview/cave_main.c	/^float pending_view_x;$/;"	v	typeref:typename:float
pending_view_z	stb/tests/caveview/cave_main.c	/^float pending_view_z;$/;"	v	typeref:typename:float
performance	stb/tests/resample_test.cpp	/^void performance(int argc, char **argv)$/;"	f	typeref:typename:void
pic_copyval	stb/deprecated/stb_image.c	/^static void pic_copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void	file:
pic_is4	stb/deprecated/stb_image.c	/^static int pic_is4(stbi *s,const char *str)$/;"	f	typeref:typename:int	file:
pic_load	stb/deprecated/stb_image.c	/^static stbi_uc *pic_load(stbi *s,int *px,int *py,int *comp,int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
pic_load2	stb/deprecated/stb_image.c	/^static stbi_uc *pic_load2(stbi *s,int width,int height,int *comp, stbi_uc *result)$/;"	f	typeref:typename:stbi_uc *	file:
pic_packet_t	stb/deprecated/stb_image.c	/^} pic_packet_t;$/;"	t	typeref:struct:__anon9409ffb90e08	file:
pic_readval	stb/deprecated/stb_image.c	/^static stbi_uc *pic_readval(stbi *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *	file:
pic_test	stb/deprecated/stb_image.c	/^static int pic_test(stbi *s)$/;"	f	typeref:typename:int	file:
pixel	stb/tests/resample_test.cpp	/^unsigned int* pixel(unsigned int* buffer, int x, int y, int c, int w, int n)$/;"	f	typeref:typename:unsigned int *
pixel_dist_scale	stb/tests/sdf/sdf_test.c	/^float pixel_dist_scale = 64.0;  \/\/ trades off precision w\/ ability to handle *smaller* sizes$/;"	v	typeref:typename:float
pixels	stb/stb_herringbone_wang_tile.h	/^   unsigned char pixels[1];$/;"	m	struct:__anon412b11070108	typeref:typename:unsigned char[1]
pixels	stb/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anon77ab60dd0808	typeref:typename:unsigned char *
pixels	stb/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned char *
plane	stb/tests/caveview/cave_render.c	/^} plane;$/;"	t	typeref:struct:__anonb6d309d70508	file:
player_zoom	stb/tests/caveview/cave_main.c	/^float player_zoom = 1.0;$/;"	v	typeref:typename:float
png	stb/deprecated/stb_image.c	/^} png;$/;"	t	typeref:struct:__anon9409ffb90c08	file:
point	stb/tests/grid_reachability.c	/^} point;$/;"	t	typeref:struct:__anondb2f75c60108	file:
point_compare	stb/stb_vorbis.c	/^static int STBV_CDECL point_compare(const void *p, const void *q)$/;"	f	typeref:typename:int STBV_CDECL	file:
pointer_to_free	stb/tests/caveview/cave_parse.h	/^   void *pointer_to_free;   $/;"	m	struct:__anonb02522170308	typeref:typename:void *
pointers	stb/deprecated/stb.h	/^   stb__nptr *pointers;$/;"	m	struct:__anonfe33527c0e08	typeref:typename:stb__nptr *
population	stb/deprecated/stb.h	/^   int population;$/;"	m	struct:stb_dupe	typeref:typename:int
pos_x	stb/stb_voxel_render.h	/^   int pos_x,pos_y,pos_z;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
pos_x	stb/tests/caveview/cave_main.c	/^static float pos_x = 10;$/;"	v	typeref:typename:float	file:
pos_y	stb/stb_voxel_render.h	/^   int pos_x,pos_y,pos_z;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
pos_y	stb/tests/caveview/cave_main.c	/^static float pos_y = 10;$/;"	v	typeref:typename:float	file:
pos_z	stb/stb_voxel_render.h	/^   int pos_x,pos_y,pos_z;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
position	render-shapes.cpp	/^    GLfloat position[2];$/;"	m	struct:__anond2ba22070111::Attributes	typeref:typename:GLfloat[2]	file:
position	render-sprites.cpp	/^  GLfloat position[2]; \/\/ location of center in world coordinates$/;"	m	struct:Attributes	typeref:typename:GLfloat[2]	file:
position	render-surface.cpp	/^  GLfloat position[] = { 0, 1, 1, 1, 0, 0, 1, 0 };$/;"	v	namespace:__anon8ac3718c0111	typeref:typename:GLfloat[]
pow2	stb/deprecated/stb.h	/^   unsigned int pow2;$/;"	m	struct:__anonfe33527c2208	typeref:typename:unsigned int
predict_point	stb/stb_vorbis.c	/^static int predict_point(int x, int x0, int x1, int y0, int y1)$/;"	f	typeref:typename:int	file:
preferred_x	stb/stb_textedit.h	/^   float preferred_x; \/\/ this determines where the cursor up\/down tries to seek to along x$/;"	m	struct:__anonb04bb6e60308	typeref:typename:float
prefix	stb/deprecated/stb_image.c	/^   stbi__int16 prefix;$/;"	m	struct:stbi_gif_lzw_struct	typeref:typename:stbi__int16	file:
prefix	stb/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anonc3e085de1208	typeref:typename:stbi__int16
prep_huffman	stb/stb_vorbis.c	/^static __forceinline void prep_huffman(vorb *f)$/;"	f	typeref:typename:void	file:
prepare_threads	stb/tests/caveview/cave_render.c	/^void prepare_threads(void)$/;"	f	typeref:typename:void
prev	stb/deprecated/stb.h	/^   struct stb__span  *next, *prev;$/;"	m	struct:stb__span	typeref:struct:stb__span *
prev	stb/deprecated/stb.h	/^   struct stb__st_nptr **prev;  \/\/ prev pointer with same target, address of 'next' field (or /;"	m	struct:stb__st_nptr	typeref:struct:stb__st_nptr **
prev	stb/stb_leakcheck.h	/^   stb_leakcheck_malloc_info *next,*prev;$/;"	m	struct:malloc_info	typeref:typename:stb_leakcheck_malloc_info *
prev_dt	stb/stb_hexwave.h	/^   float t, prev_dt;$/;"	m	struct:HexWave	typeref:typename:float
prev_first	stb/stb_textedit.h	/^   int prev_first;  \/\/ first char of previous row$/;"	m	struct:__anonb04bb6e60508	typeref:typename:int
prev_link	stb/stb_rect_pack.h	/^   stbrp_node **prev_link;$/;"	m	struct:__anon6e5b45070308	typeref:typename:stbrp_node **
previous_length	stb/stb_vorbis.c	/^   int previous_length;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
previous_window	stb/stb_vorbis.c	/^   float *previous_window[STB_VORBIS_MAX_CHANNELS];$/;"	m	struct:stb_vorbis	typeref:typename:float * []	file:
prevn	stb/deprecated/stb.h	/^   void ** prevn;$/;"	m	struct:__anonfe33527c0608	typeref:typename:void **
prevn	stb/deprecated/stb.h	/^   void ** prevn;$/;"	m	struct:__anonfe33527c0708	typeref:typename:void **
print	stb/tests/caveview/cave_main.c	/^static void print(char *text, ...)$/;"	f	typeref:typename:void	file:
print	stb/tests/oversample/main.c	/^void print(float x, float y, int font, char *text)$/;"	f	typeref:typename:void
print	stb/tests/truetype_test_win32.c	/^void print(float x, float y, char *text)$/;"	f	typeref:typename:void
print_churn_probe_stats	stb/tests/test_ds.c	/^void print_churn_probe_stats(char *str)$/;"	f	typeref:typename:void
print_churn_probe_stats	stb/tests/test_ds_cpp.cpp	/^void print_churn_probe_stats(char *str)$/;"	f	typeref:typename:void
print_segments	stb/tools/easy_font_maker.c	/^void print_segments(segment *s)$/;"	f	typeref:typename:void
print_string	glwrappers.cpp	/^void print_string(float x, float y, const char *text, float r, float g, float b)$/;"	f	typeref:typename:void
print_string	stb/tests/caveview/cave_main.c	/^static void print_string(float x, float y, char *text, float r, float g, float b)$/;"	f	typeref:typename:void	file:
print_text	stb/tests/sdf/sdf_test.c	/^void print_text(float x, float y, char *text, float scale)$/;"	f	typeref:typename:void
print_token	stb/stb_c_lexer.h	/^static void print_token(stb_lexer *lexer)$/;"	f	typeref:typename:void
priority	stb/tests/caveview/cave_render.c	/^   float priority;$/;"	m	struct:__anonb6d309d70208	typeref:typename:float	file:
process_event	stb/tests/caveview/cave_main.c	/^void process_event(SDL_Event *e)$/;"	f	typeref:typename:void
process_frame_header	stb/deprecated/stb_image.c	/^static int process_frame_header(jpeg *z, int scan)$/;"	f	typeref:typename:int	file:
process_h_rect	stb/stb_herringbone_wang_tile.h	/^   stbhw__process_rect *process_h_rect;$/;"	m	struct:stbhw__process	typeref:typename:stbhw__process_rect *
process_marker	stb/deprecated/stb_image.c	/^static int process_marker(jpeg *z, int m)$/;"	f	typeref:typename:int	file:
process_scan_header	stb/deprecated/stb_image.c	/^static int process_scan_header(jpeg *z)$/;"	f	typeref:typename:int	file:
process_sdl_mouse	stb/tests/caveview/cave_main.c	/^void  process_sdl_mouse(SDL_Event *e)$/;"	f	typeref:typename:void
process_tick	stb/tests/caveview/cave_main.c	/^void process_tick(float dt)$/;"	f	typeref:typename:void
process_tick_raw	stb/tests/caveview/cave_main.c	/^void process_tick_raw(float dt)$/;"	f	typeref:typename:void
process_v_rect	stb/stb_herringbone_wang_tile.h	/^   stbhw__process_rect *process_v_rect;$/;"	m	struct:stbhw__process	typeref:typename:stbhw__process_rect *
program	tetris.cpp	/^  unsigned int program;$/;"	m	struct:TetrisImpl	typeref:typename:unsigned int	file:
progressive	stb/stb_image.h	/^   int            progressive;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
project_info	stb/tools/build_matrix.c	/^} project_info;$/;"	t	typeref:struct:__anon97bba3320208	file:
projects	stb/tools/build_matrix.c	/^project_info *projects;$/;"	v	typeref:typename:project_info *
prop_name	stb/tests/tilemap_editor_integration_example.c	/^static char *prop_name(int n, short *tiles)$/;"	f	typeref:typename:char *	file:
prop_range	stb/tests/tilemap_editor_integration_example.c	/^static float prop_range(int n, short *tiles, int is_max)$/;"	f	typeref:typename:float	file:
prop_type	stb/tests/tilemap_editor_integration_example.c	/^static unsigned int prop_type(int n, short *tiles)$/;"	f	typeref:typename:unsigned int	file:
propmode	stb/stb_tilemap_editor.h	/^    int propmode;$/;"	m	struct:stbte_tilemap	typeref:typename:int
props	stb/stb_tilemap_editor.h	/^    float props[STBTE_MAX_TILEMAP_Y][STBTE_MAX_TILEMAP_X][STBTE_MAX_PROPERTIES];$/;"	m	struct:stbte_tilemap	typeref:typename:float[][][]
psd_load	stb/deprecated/stb_image.c	/^static stbi_uc *psd_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
psd_test	stb/deprecated/stb_image.c	/^static int psd_test(stbi *s)$/;"	f	typeref:typename:int	file:
ptr	stb/deprecated/stb.h	/^      void *ptr;$/;"	m	union:stbfile::__anonfe33527c1f0a	typeref:typename:void *
ptr	stb/deprecated/stb.h	/^   void *ptr;   \/\/ address of actual pointer$/;"	m	struct:stb__st_nptr	typeref:typename:void *
ptr	stb/deprecated/stb.h	/^   void *ptr;   \/\/ address of target$/;"	m	struct:stb__st_nptr_target	typeref:typename:void *
push_mode	stb/stb_vorbis.c	/^   uint8  push_mode;$/;"	m	struct:stb_vorbis	typeref:typename:uint8	file:
putbyte	stb/deprecated/stb.h	/^   int (*putbyte)(struct stbfile *, int byte);$/;"	m	struct:stbfile	typeref:typename:int (*)(struct stbfile *,int byte)
putdata	stb/deprecated/stb.h	/^   unsigned int (*putdata)(struct stbfile *, void *block, unsigned int len);$/;"	m	struct:stbfile	typeref:typename:unsigned int (*)(struct stbfile *,void * block,unsigned int len)
pvertices	stb/stb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:stbtt_vertex *
quads_considered	stb/tests/caveview/cave_render.c	/^int quads_considered, quads_rendered;$/;"	v	typeref:typename:int
quads_rendered	stb/tests/caveview/cave_render.c	/^int quads_considered, quads_rendered;$/;"	v	typeref:typename:int
quicktest	stb/tests/test_c_compilation.c	/^int quicktest(void)$/;"	f	typeref:typename:int
quit	stb/tests/caveview/cave_main.c	/^static int quit;$/;"	v	typeref:typename:int	file:
r	render-shapes.h	/^  float r, g, b, a;$/;"	m	struct:Shape	typeref:typename:float
r	stb/stb_voxel_render.h	/^   unsigned char r,g,b;$/;"	m	struct:__anonc1feb0a80508	typeref:typename:unsigned char
rS32	stb/deprecated/rrsprintf.h	/^#define rS32 /;"	d
rS64	stb/deprecated/rrsprintf.h	/^#define rS64 /;"	d
rU16	stb/deprecated/rrsprintf.h	/^#define rU16 /;"	d
rU32	stb/deprecated/rrsprintf.h	/^#define rU32 /;"	d
rU64	stb/deprecated/rrsprintf.h	/^#define rU64 /;"	d
rUINTa	stb/deprecated/rrsprintf.h	/^#define rUINTa /;"	d
rad2deg	stb/deprecated/stb.h	/^   #define rad2deg(/;"	d
range	stb/deprecated/stb.h	/^   unsigned int code, range; \/\/ decode$/;"	m	struct:__anonfe33527c2008	typeref:typename:unsigned int
range_high	stb/deprecated/stb.h	/^   unsigned int range_high;$/;"	m	struct:__anonfe33527c2008	typeref:typename:unsigned int
range_low	stb/deprecated/stb.h	/^   unsigned int range_low;$/;"	m	struct:__anonfe33527c2008	typeref:typename:unsigned int
rangebits	stb/stb_vorbis.c	/^   uint8 rangebits;$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8	file:
rate	stb/stb_vorbis.c	/^   uint16 rate;$/;"	m	struct:__anon008e12ab0508	typeref:typename:uint16	file:
ratio	stb/deprecated/stb_image.c	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
ratio	stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
raw_block	stb/tests/caveview/cave_parse.h	/^} raw_block;$/;"	t	typeref:struct:__anonb02522170108
raw_coeff	stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:void *
raw_data	stb/deprecated/stb_image.c	/^      void *raw_data;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:void *	file:
raw_data	stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:void *
raw_level_time	stb/tests/caveview/cave_main.c	/^int raw_level_time;$/;"	v	typeref:typename:int
raw_mesh	stb/tests/caveview/caveview.h	/^} raw_mesh;$/;"	t	typeref:struct:__anonc22370580108
raw_mouse_x	stb/tests/oversample/main.c	/^int raw_mouse_x, raw_mouse_y;$/;"	v	typeref:typename:int
raw_mouse_y	stb/tests/oversample/main.c	/^int raw_mouse_x, raw_mouse_y;$/;"	v	typeref:typename:int
rb	stb/tests/caveview/cave_parse.h	/^   raw_block rb[16][16][256]; \/\/ [z][x][y] which becomes [y][x][z] in stb$/;"	m	struct:__anonb02522170208	typeref:typename:raw_block[16][16][256]
rc	stb/tests/oversample/stb_wingraph.h	/^   HGLRC rc;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:HGLRC
rc	stb/tests/truetype_test_win32.c	/^HGLRC rc;$/;"	v	typeref:typename:HGLRC
read	stb/deprecated/stb_image.c	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anon9409ffb90208	typeref:typename:int (*)(void * user,char * data,int size)	file:
read	stb/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anonc3e085de0208	typeref:typename:int (*)(void * user,char * data,int size)
read_from_callbacks	stb/deprecated/stb_image.c	/^   int read_from_callbacks;$/;"	m	struct:__anon9409ffb90308	typeref:typename:int	file:
read_from_callbacks	stb/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anonc3e085de0308	typeref:typename:int
read_uint32_be	stb/tests/caveview/cave_parse.c	/^uint32 read_uint32_be(FILE *f)$/;"	f	typeref:typename:uint32
readdir_raw	stb/deprecated/stb.h	/^static char **readdir_raw(char *dir, int return_subdirs, char *mask)$/;"	f	typeref:typename:char **
readdir_raw	stb/tests/prerelease/stb_lib.h	/^static char **readdir_raw(char *dir, int return_subdirs, char *mask)$/;"	f	typeref:typename:char **
real_number	stb/stb_c_lexer.h	/^   double real_number;$/;"	m	struct:__anone321a15d0108	typeref:typename:double
realloc	stb/deprecated/stb.h	/^   #define realloc(/;"	d
realloc	stb/deprecated/stb.h	/^#define realloc /;"	d
realloc	stb/stb_leakcheck.h	/^#define realloc(/;"	d
realloc	stb/stb_vorbis.c	/^   #define realloc(/;"	d	file:
rebuild_adjacency	stb/stb_connected_components.h	/^   unsigned char rebuild_adjacency;$/;"	m	struct:__anonc6c173d30508	typeref:typename:unsigned char
rec_print	stb/tests/stb.c	/^void rec_print(stb_dirtree2 *d, int depth)$/;"	f	typeref:typename:void
rect_height_compare	stb/stb_rect_pack.h	/^static int STBRP__CDECL rect_height_compare(const void *a, const void *b)$/;"	f	typeref:typename:int STBRP__CDECL
rect_original_order	stb/stb_rect_pack.h	/^static int STBRP__CDECL rect_original_order(const void *a, const void *b)$/;"	f	typeref:typename:int STBRP__CDECL
redo_available	stb/stb_tilemap_editor.h	/^    unsigned char redo_available;$/;"	m	struct:stbte_tilemap	typeref:typename:unsigned char
redo_char_point	stb/stb_textedit.h	/^   int undo_char_point, redo_char_point;$/;"	m	struct:__anonb04bb6e60208	typeref:typename:int
redo_len	stb/stb_tilemap_editor.h	/^    int undo_pos, undo_len, redo_len;$/;"	m	struct:stbte_tilemap	typeref:typename:int
redo_point	stb/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anonb04bb6e60208	typeref:typename:short
refcount	stb/tests/caveview/cave_parse.c	/^   int refcount; \/\/ for multi-threading$/;"	m	struct:__anonb02522120108	typeref:typename:int	file:
refcount	stb/tests/caveview/cave_parse.h	/^   int refcount; \/\/ this allows multi-threaded building without wrapping in ANOTHER struct$/;"	m	struct:__anonb02522170308	typeref:typename:int
reference	stb/tests/grid_reachability.c	/^void reference(uint8 *map, int w, int h)$/;"	f	typeref:typename:void
refill_buffer	stb/deprecated/stb_image.c	/^static void refill_buffer(stbi *s)$/;"	f	typeref:typename:void	file:
reflect	stb/stb_hexwave.h	/^   int   reflect;$/;"	m	struct:__anon773b6f930108	typeref:typename:int
region	font.cpp	/^  SDL_Rect region;$/;"	m	struct:FontCharacter	typeref:typename:SDL_Rect	file:
region	stb/tests/caveview/cave_parse.c	/^} region;$/;"	t	typeref:struct:__anonb02522120208	file:
regions	stb/tests/caveview/cave_parse.c	/^region *regions[MAX_MAP_REGIONS][MAX_MAP_REGIONS];$/;"	v	typeref:typename:region * [][]
rehash_threshhold	stb/deprecated/stb.h	/^   int rehash_threshhold;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
release	stb/deprecated/stb.h	/^   stb_semaphore release; \/\/ semaphore wake up waiting threads$/;"	m	struct:stb__sync	typeref:typename:stb_semaphore
relpath	stb/deprecated/stb.h	/^   char *relpath;$/;"	m	struct:stb_dirtree2	typeref:typename:char *
remaining	stb/stb_ds.h	/^  size_t remaining;$/;"	m	struct:stbds_string_arena	typeref:typename:size_t
remap	stb/tests/caveview/cave_mesher.c	/^unsigned char remap[256];$/;"	v	typeref:typename:unsigned char[256]
remap_data	stb/tests/caveview/cave_mesher.c	/^unsigned char remap_data[16][16];$/;"	v	typeref:typename:unsigned char[16][16]
remap_in_place	stb/tests/caveview/cave_mesher.c	/^void remap_in_place(int bt, int rm)$/;"	f	typeref:typename:void
remove	stb/deprecated/stb.h	/^   stb_mutex add, remove;$/;"	m	struct:stb__threadqueue	typeref:typename:stb_mutex
render_caves	stb/tests/caveview/cave_render.c	/^void render_caves(float campos[3])$/;"	f	typeref:typename:void
render_init	stb/tests/caveview/cave_render.c	/^void render_init(void)$/;"	f	typeref:typename:void
render_time	stb/tests/caveview/cave_main.c	/^float render_time;$/;"	v	typeref:typename:float
rendered_font	font.cpp	/^  std::vector<unsigned char> rendered_font;$/;"	m	struct:FontImpl	typeref:typename:std::vector<unsigned char>	file:
renderer	window.cpp	/^  SDL_Renderer* renderer;$/;"	m	struct:WindowImpl	typeref:typename:SDL_Renderer *	file:
replace_fallback_with_codepoint	stb/tools/unicode.c	/^   int  replace_fallback_with_codepoint;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
request_chunk	stb/tests/caveview/cave_render.c	/^int request_chunk(int chunk_x, int chunk_y)$/;"	f	typeref:typename:int
request_cx	stb/tests/caveview/cave_render.c	/^   int request_cx;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
request_cy	stb/tests/caveview/cave_render.c	/^   int request_cy;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
request_received	stb/tests/caveview/cave_render.c	/^   SDL_sem * request_received;$/;"	m	struct:__anonb6d309d70308	typeref:typename:SDL_sem *	file:
resample	stb/deprecated/stb_image.c	/^   resample_row_func resample;$/;"	m	struct:__anon9409ffb90808	typeref:typename:resample_row_func	file:
resample	stb/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anonc3e085de0a08	typeref:typename:resample_row_func
resample_88	stb/tests/resample_test.cpp	/^void resample_88(stbir_filter filter)$/;"	f	typeref:typename:void
resample_row_1	stb/deprecated/stb_image.c	/^static stbi__uint8 *resample_row_1(stbi__uint8 *out, stbi__uint8 *in_near, stbi__uint8 *in_far, /;"	f	typeref:typename:stbi__uint8 *	file:
resample_row_1	stb/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	typeref:typename:stbi_uc *
resample_row_func	stb/deprecated/stb_image.c	/^typedef stbi__uint8 *(*resample_row_func)(stbi__uint8 *out, stbi__uint8 *in0, stbi__uint8 *in1,$/;"	t	typeref:typename:stbi__uint8 * (*)(stbi__uint8 * out,stbi__uint8 * in0,stbi__uint8 * in1,int w,int hs)	file:
resample_row_func	stb/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in0,stbi_uc * in1,int w,int hs)
resample_row_generic	stb/deprecated/stb_image.c	/^static stbi__uint8 *resample_row_generic(stbi__uint8 *out, stbi__uint8 *in_near, stbi__uint8 *in/;"	f	typeref:typename:stbi__uint8 *	file:
resample_row_h_2	stb/deprecated/stb_image.c	/^static stbi__uint8*  resample_row_h_2(stbi__uint8 *out, stbi__uint8 *in_near, stbi__uint8 *in_fa/;"	f	typeref:typename:stbi__uint8 *	file:
resample_row_hv_2	stb/deprecated/stb_image.c	/^static stbi__uint8 *resample_row_hv_2(stbi__uint8 *out, stbi__uint8 *in_near, stbi__uint8 *in_fa/;"	f	typeref:typename:stbi__uint8 *	file:
resample_row_hv_2_kernel	stb/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	m	struct:__anonc3e085de0808	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in_near,stbi_uc * in_far,int w,int hs)
resample_row_v_2	stb/deprecated/stb_image.c	/^static stbi__uint8* resample_row_v_2(stbi__uint8 *out, stbi__uint8 *in_near, stbi__uint8 *in_far/;"	f	typeref:typename:stbi__uint8 *	file:
reserved	stb/stb_connected_components.h	/^   unsigned char reserved;$/;"	m	struct:__anonc6c173d30408	typeref:typename:unsigned char
reset	stb/deprecated/stb_image.c	/^static void reset(jpeg *j)$/;"	f	typeref:typename:void	file:
reset_cache_size	stb/tests/caveview/cave_mesher.c	/^void reset_cache_size(int size)$/;"	f	typeref:typename:void
reset_stats	stb/tests/test_ds.c	/^void reset_stats(void)$/;"	f	typeref:typename:void
reset_stats	stb/tests/test_ds_cpp.cpp	/^void reset_stats(void)$/;"	f	typeref:typename:void
residue_books	stb/stb_vorbis.c	/^   int16 (*residue_books)[8];$/;"	m	struct:__anon008e12ab0808	typeref:typename:int16 (*)[8]	file:
residue_config	stb/stb_vorbis.c	/^   Residue *residue_config;$/;"	m	struct:stb_vorbis	typeref:typename:Residue *	file:
residue_count	stb/stb_vorbis.c	/^   int residue_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
residue_decode	stb/stb_vorbis.c	/^static int residue_decode(vorb *f, Codebook *book, float *target, int offset, int n, int rtype)$/;"	f	typeref:typename:int	file:
residue_types	stb/stb_vorbis.c	/^   uint16 residue_types[64]; \/\/ varies$/;"	m	struct:stb_vorbis	typeref:typename:uint16[64]	file:
resize_image	stb/tests/resample_test.cpp	/^void resize_image(const char* filename, float width_percent, float height_percent, stbir_filter /;"	f	typeref:typename:void
resizer	stb/tests/resample_test.cpp	/^void resizer(int argc, char **argv)$/;"	f	typeref:typename:void
restart_interval	stb/deprecated/stb_image.c	/^   int restart_interval, todo;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
restart_interval	stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
result	stb/deprecated/stb.h	/^   stb_uchar **result;$/;"	m	struct:__anonfe33527c2608	typeref:typename:stb_uchar **
result	stb/tools/unicode.c	/^   table result; \/\/ index into not-returned table$/;"	m	struct:__anona458f2750208	typeref:typename:table	file:
result	stb/tools/unicode.c	/^} result;$/;"	t	typeref:struct:__anona458f2750408	file:
retracted	stb/stb_tilemap_editor.h	/^   float retracted;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:float
return_val	stb/deprecated/stb.h	/^   volatile void **return_val;$/;"	m	struct:__anonfe33527c2308	typeref:typename:volatile void **
retval	stb/deprecated/stb.h	/^   volatile void **retval;$/;"	m	struct:__anonfe33527c2408	typeref:typename:volatile void **
rgb	stb/stb_image.h	/^   int            rgb;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
rgb	stb/stb_voxel_render.h	/^   stbvox_rgb *rgb;$/;"	m	struct:stbvox_input_description	typeref:typename:stbvox_rgb *
right_width	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
ring_buffer	stb/stb_image_resize.h	/^    float* ring_buffer;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
ring_buffer_begin_index	stb/stb_image_resize.h	/^    int ring_buffer_begin_index;    \/\/ first_scanline is at this index in the ring buffer$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
ring_buffer_first_scanline	stb/stb_image_resize.h	/^    int ring_buffer_first_scanline;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
ring_buffer_last_scanline	stb/stb_image_resize.h	/^    int ring_buffer_last_scanline;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
ring_buffer_length_bytes	stb/stb_image_resize.h	/^    int ring_buffer_length_bytes;   \/\/ The length of an individual entry in the ring buffer. T/;"	m	struct:__anonb59f51af0708	typeref:typename:int
ring_buffer_num_entries	stb/stb_image_resize.h	/^    int ring_buffer_num_entries;    \/\/ Total number of entries in the ring buffer.$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
ring_buffer_size	stb/stb_image_resize.h	/^    int ring_buffer_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
rm	stb/tests/caveview/cave_render.c	/^   raw_mesh rm;$/;"	m	struct:__anonb6d309d70308	typeref:typename:raw_mesh	file:
rotate	stb/stb_voxel_render.h	/^   unsigned char *rotate;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
rotate_data	stb/tests/caveview/cave_mesher.c	/^unsigned char rotate_data[4] = { 1,3,2,0 };$/;"	v	typeref:typename:unsigned char[4]
rotate_t	stb/tests/oversample/main.c	/^float rotate_t, translate_t;$/;"	v	typeref:typename:float
rotate_view	stb/tests/caveview/cave_main.c	/^float rotate_view = 0.0;$/;"	v	typeref:typename:float
rotating	stb/tests/oversample/main.c	/^int rotating=0;$/;"	v	typeref:typename:int
rotation	render-sprites.cpp	/^  GLfloat rotation;    \/\/ rotation in radians$/;"	m	struct:Attributes	typeref:typename:GLfloat	file:
rotation_degrees	render-sprites.h	/^  float x, y, rotation_degrees, scale;$/;"	m	struct:Sprite	typeref:typename:float
round2	stb/tests/resample_test.cpp	/^float round2(float f)$/;"	f	typeref:typename:float
row_count_per_page	stb/stb_textedit.h	/^   int row_count_per_page;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:int
rrbot	stb/deprecated/rrsprintf.h	/^static double const rrbot[23]={1e+000,1e+001,1e+002,1e+003,1e+004,1e+005,1e+006,1e+007,1e+008,1e/;"	v	typeref:typename:double const[23]
rrclampcallback	stb/deprecated/rrsprintf.h	/^static char * rrclampcallback( char * buf, void * user, int len )$/;"	f	typeref:typename:char *
rrddmulthi	stb/deprecated/rrsprintf.h	/^#define rrddmulthi(/;"	d
rrddmultlo	stb/deprecated/rrsprintf.h	/^#define rrddmultlo(/;"	d
rrddmultlos	stb/deprecated/rrsprintf.h	/^#define rrddmultlos(/;"	d
rrddrenorm	stb/deprecated/rrsprintf.h	/^#define rrddrenorm(/;"	d
rrddtoS64	stb/deprecated/rrsprintf.h	/^#define rrddtoS64(/;"	d
rrdiglookup	stb/deprecated/rrsprintf.h	/^static char rrdiglookup[201]="000102030405060708091011121314151617181920212223242526272829303132/;"	v	typeref:typename:char[201]
rrnegbot	stb/deprecated/rrsprintf.h	/^static double const rrnegbot[22]={1e-001,1e-002,1e-003,1e-004,1e-005,1e-006,1e-007,1e-008,1e-009/;"	v	typeref:typename:double const[22]
rrnegboterr	stb/deprecated/rrsprintf.h	/^static double const rrnegboterr[22]={-5.551115123125783e-018,-2.0816681711721684e-019,-2.0816681/;"	v	typeref:typename:double const[22]
rrnegtop	stb/deprecated/rrsprintf.h	/^static double const rrnegtop[13]={1e-023,1e-046,1e-069,1e-092,1e-115,1e-138,1e-161,1e-184,1e-207/;"	v	typeref:typename:double const[13]
rrnegtoperr	stb/deprecated/rrsprintf.h	/^static double const rrnegtoperr[13]={3.9565301985100693e-040,-2.299904345391321e-063,3.650620143/;"	v	typeref:typename:double const[13]
rrpot	stb/deprecated/rrsprintf.h	/^static rU64 const rrpot[20]={1,10,100,1000, 10000,100000,1000000,10000000, 100000000,1000000000,/;"	v	typeref:typename:rU64 const[20]
rrraise_to_power10	stb/deprecated/rrsprintf.h	/^static void rrraise_to_power10( double *ohi, double *olo, double d, rS32 power )  \/\/ power can/;"	f	typeref:typename:void
rrreal_to_parts	stb/deprecated/rrsprintf.h	/^static rS32 rrreal_to_parts( rS64 * bits, rS32 * expo, double value )$/;"	f	typeref:typename:rS32
rrreal_to_str	stb/deprecated/rrsprintf.h	/^static rS32 rrreal_to_str( char const * * start, rU32 * len, char *out, rS32 * decimal_pos, doub/;"	f	typeref:typename:rS32
rrtento19th	stb/deprecated/rrsprintf.h	/^#define rrtento19th /;"	d
rrtop	stb/deprecated/rrsprintf.h	/^static double const rrtop[13]={1e+023,1e+046,1e+069,1e+092,1e+115,1e+138,1e+161,1e+184,1e+207,1e/;"	v	typeref:typename:double const[13]
rrtoperr	stb/deprecated/rrsprintf.h	/^static double const rrtoperr[13]={8388608,6.8601809640529717e+028,-7.253143638152921e+052,-4.337/;"	v	typeref:typename:double const[13]
run_command	stb/tools/build_matrix.c	/^int run_command(char *batch_file, char *command)$/;"	f	typeref:typename:int
s	stb/deprecated/stb_image.c	/^   stbi *s;$/;"	m	struct:__anon9409ffb90608	typeref:typename:stbi *	file:
s	stb/deprecated/stb_image.c	/^   stbi *s;$/;"	m	struct:__anon9409ffb90c08	typeref:typename:stbi *	file:
s	stb/stb_hexwave.h	/^   float t,v,s; \/\/ time, value, slope$/;"	m	struct:__anon773b6f930308	typeref:typename:float
s	stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonc3e085de0808	typeref:typename:stbi__context *
s	stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonc3e085de0e08	typeref:typename:stbi__context *
s	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	m	union:stbte__extract_float::__anonbd4d158d120a	typeref:typename:short[2]
s	stb/stb_tilemap_editor.h	/^   union { float f; short s[2]; } converter;$/;"	m	union:stbte__extract_short::__anonbd4d158d130a	typeref:typename:short[2]
s0	atlas.h	/^  float s0, t0, s1, t1; \/\/ Corners in texture coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
s0	stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
s0	stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
s1	atlas.h	/^  float s0, t0, s1, t1; \/\/ Corners in texture coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
s1	stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
s1	stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
safe_len	stb/tools/unicode.c	/^int safe_len(uval *data, int len, uval *end)$/;"	f	typeref:typename:int
sample	stb/tests/sdf/sdf_test.c	/^char *sample = "This is goofy text, size %d!";$/;"	v	typeref:typename:char *
sample_loc	stb/stb_vorbis.c	/^   uint32  sample_loc;  \/\/ granule pos encoded in page$/;"	m	struct:__anon008e12ab0c08	typeref:typename:uint32	file:
sample_rate	stb/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:__anon008e12ab0208	typeref:typename:unsigned int	file:
sample_rate	stb/stb_vorbis.c	/^   unsigned int sample_rate;$/;"	m	struct:stb_vorbis	typeref:typename:unsigned int	file:
sample_test	stb/tests/stb.c	/^int sample_test[3][5] =$/;"	v	typeref:typename:int[3][5]
samples	stb/deprecated/stb.h	/^   unsigned short samples;$/;"	m	struct:__anonfe33527c2108	typeref:typename:unsigned short
samples_output	stb/stb_vorbis.c	/^   uint32 samples_output;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
sb_add	stb/deprecated/stretchy_buffer.h	/^#define sb_add /;"	d
sb_count	stb/deprecated/stretchy_buffer.h	/^#define sb_count /;"	d
sb_free	stb/deprecated/stretchy_buffer.h	/^#define sb_free /;"	d
sb_last	stb/deprecated/stretchy_buffer.h	/^#define sb_last /;"	d
sb_push	stb/deprecated/stretchy_buffer.h	/^#define sb_push /;"	d
scale	render-sprites.h	/^  float x, y, rotation_degrees, scale;$/;"	m	struct:Sprite	typeref:typename:float
scale	stb/stb_vorbis.c	/^  float scale;$/;"	m	struct:__anon008e12ab1008	typeref:typename:float	file:
scale	stb/tests/oversample/main.c	/^float scale[2] = { 24.0f, 14.0f };$/;"	v	typeref:typename:float[2]
scale_texture	stb/tests/caveview/cave_render.c	/^void scale_texture(unsigned char *src, int x, int y, int w, int h)$/;"	f	typeref:typename:void
scan	stb/stb_vorbis.c	/^   CRCscan scan[STB_VORBIS_PUSHDATA_CRC_COUNT];$/;"	m	struct:stb_vorbis	typeref:typename:CRCscan[]	file:
scan_n	stb/deprecated/stb_image.c	/^   int scan_n, order[4];$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
scan_n	stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
screen_x	stb/tests/caveview/cave_main.c	/^int screen_x,screen_y;$/;"	v	typeref:typename:int
screen_x	stb/tests/truetype_test_win32.c	/^int screen_x=1024, screen_y=768;$/;"	v	typeref:typename:int
screen_y	stb/tests/caveview/cave_main.c	/^int screen_x,screen_y;$/;"	v	typeref:typename:int
screen_y	stb/tests/truetype_test_win32.c	/^int screen_x=1024, screen_y=768;$/;"	v	typeref:typename:int
scroll_x	stb/stb_tilemap_editor.h	/^    int scroll_x,scroll_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
scroll_y	stb/stb_tilemap_editor.h	/^    int scroll_x,scroll_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
scrolling	stb/stb_tilemap_editor.h	/^   int scrolling, start_x, start_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
scrollkey	stb/stb_tilemap_editor.h	/^   int shift, scrollkey;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
sdf_size	stb/tests/sdf/sdf_test.c	/^float sdf_size = 32.0;          \/\/ the larger this is, the better large font sizes look$/;"	v	typeref:typename:float
sector_data	stb/tests/caveview/cave_parse.c	/^   uint32 sector_data[NUM_CHUNKS_PER_REGION][NUM_CHUNKS_PER_REGION];$/;"	m	struct:__anonb02522120208	typeref:typename:uint32[][]	file:
seed	stb/stb_ds.h	/^  size_t seed;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
seek_to_sample_coarse	stb/stb_vorbis.c	/^static int seek_to_sample_coarse(stb_vorbis *f, uint32 sample_number)$/;"	f	typeref:typename:int	file:
segment	stb/tools/easy_font_maker.c	/^} segment;$/;"	t	typeref:struct:__anonc58d97050208	file:
segment_count	stb/stb_vorbis.c	/^   int segment_count;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
segments	stb/stb_vorbis.c	/^   uint8 segments[255];$/;"	m	struct:stb_vorbis	typeref:typename:uint8[255]	file:
segments	stb/tools/easy_font_maker.c	/^segment *segments;$/;"	v	typeref:typename:segment *
select_end	stb/stb_textedit.h	/^   int select_end;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:int
select_start	stb/stb_textedit.h	/^   int select_start;          \/\/ selection start point$/;"	m	struct:__anonb04bb6e60308	typeref:typename:int
select_x0	stb/stb_tilemap_editor.h	/^   int has_selection, select_x0, select_y0, select_x1, select_y1;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
select_x1	stb/stb_tilemap_editor.h	/^   int has_selection, select_x0, select_y0, select_x1, select_y1;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
select_y0	stb/stb_tilemap_editor.h	/^   int has_selection, select_x0, select_y0, select_x1, select_y1;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
select_y1	stb/stb_tilemap_editor.h	/^   int has_selection, select_x0, select_y0, select_x1, select_y1;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
selector	stb/stb_voxel_render.h	/^   unsigned char *selector;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
self	atlas.h	/^  std::unique_ptr<AtlasImpl> self;$/;"	m	class:Atlas	typeref:typename:std::unique_ptr<AtlasImpl>
self	font.h	/^  std::unique_ptr<FontImpl> self;$/;"	m	class:Font	typeref:typename:std::unique_ptr<FontImpl>
self	render-shapes.h	/^  std::unique_ptr<RenderShapesImpl> self;$/;"	m	class:RenderShapes	typeref:typename:std::unique_ptr<RenderShapesImpl>
self	render-sprites.h	/^  std::unique_ptr<RenderSpritesImpl> self;$/;"	m	class:RenderSprites	typeref:typename:std::unique_ptr<RenderSpritesImpl>
self	render-surface.h	/^  std::unique_ptr<RenderSurfaceImpl> self;$/;"	m	class:RenderSurface	typeref:typename:std::unique_ptr<RenderSurfaceImpl>
self	tetris.h	/^  std::unique_ptr<TetrisImpl> self;$/;"	m	class:Tetris	typeref:typename:std::unique_ptr<TetrisImpl>
self	window.h	/^  std::unique_ptr<WindowImpl> self;$/;"	m	class:Window	typeref:typename:std::unique_ptr<WindowImpl>
sem	stb/deprecated/stb.h	/^   stb_semaphore sem;$/;"	m	struct:__anonfe33527c2308	typeref:typename:stb_semaphore
sequence_p	stb/stb_vorbis.c	/^   uint8  sequence_p;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint8	file:
serial	stb/stb_vorbis.c	/^   uint32 serial; \/\/ stream serial number for verification$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
set_file_offset	stb/stb_vorbis.c	/^static int set_file_offset(stb_vorbis *f, unsigned int loc)$/;"	f	typeref:typename:int	file:
set_tex2_alpha	stb/tests/caveview/cave_render.c	/^void set_tex2_alpha(float fa)$/;"	f	typeref:typename:void
setup_free	stb/stb_vorbis.c	/^static void setup_free(vorb *f, void *p)$/;"	f	typeref:typename:void	file:
setup_malloc	stb/stb_vorbis.c	/^static void *setup_malloc(vorb *f, int sz)$/;"	f	typeref:typename:void *	file:
setup_memory_required	stb/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:__anon008e12ab0208	typeref:typename:unsigned int	file:
setup_memory_required	stb/stb_vorbis.c	/^   unsigned int setup_memory_required;$/;"	m	struct:stb_vorbis	typeref:typename:unsigned int	file:
setup_offset	stb/stb_vorbis.c	/^   int setup_offset;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
setup_temp_free	stb/stb_vorbis.c	/^static void setup_temp_free(vorb *f, void *p, int sz)$/;"	f	typeref:typename:void	file:
setup_temp_malloc	stb/stb_vorbis.c	/^static void *setup_temp_malloc(vorb *f, int sz)$/;"	f	typeref:typename:void *	file:
setup_temp_memory_required	stb/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:__anon008e12ab0208	typeref:typename:unsigned int	file:
setup_temp_memory_required	stb/stb_vorbis.c	/^   unsigned int setup_temp_memory_required;$/;"	m	struct:stb_vorbis	typeref:typename:unsigned int	file:
setup_uniforms	stb/tests/caveview/cave_render.c	/^void setup_uniforms(float pos[3])$/;"	f	typeref:typename:void
sf	stb/tests/oversample/main.c	/^int sf[6] = { 0,1,2, 0,1,2 };$/;"	v	typeref:typename:int[6]
sh_new_arena	stb/stb_ds.h	/^#define sh_new_arena /;"	d
sh_new_strdup	stb/stb_ds.h	/^#define sh_new_strdup /;"	d
sha1_tests	stb/tests/stb.c	/^} sha1_tests[] =$/;"	v	typeref:struct:__anon9cbc07790308[]
shader	render-shapes.cpp	/^  ShaderProgram shader;$/;"	m	struct:RenderShapesImpl	typeref:typename:ShaderProgram	file:
shader	render-sprites.cpp	/^  ShaderProgram shader;$/;"	m	struct:RenderSpritesImpl	typeref:typename:ShaderProgram	file:
shader	render-surface.cpp	/^  ShaderProgram shader;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:ShaderProgram	file:
shape_layer	main.cpp	/^std::unique_ptr<RenderShapes> shape_layer;$/;"	v	typeref:typename:std::unique_ptr<RenderShapes>
share_window	stb/tests/oversample/stb_wingraph.h	/^   HWND  share_window;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:HWND
shared_args	stb/tools/build_matrix.c	/^char *shared_args;$/;"	v	typeref:typename:char *
shared_link	stb/tools/build_matrix.c	/^char *shared_link;$/;"	v	typeref:typename:char *
shdefault	stb/stb_ds.h	/^#define shdefault /;"	d
shdefaults	stb/stb_ds.h	/^#define shdefaults /;"	d
shdel	stb/stb_ds.h	/^#define shdel /;"	d
shfree	stb/stb_ds.h	/^#define shfree /;"	d
shget	stb/stb_ds.h	/^#define shget /;"	d
shgeti	stb/stb_ds.h	/^#define shgeti /;"	d
shgetp	stb/stb_ds.h	/^#define shgetp /;"	d
shgetp_null	stb/stb_ds.h	/^#define shgetp_null /;"	d
shgets	stb/stb_ds.h	/^#define shgets /;"	d
shift	stb/stb_tilemap_editor.h	/^   int shift, scrollkey;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
shift	stb/tests/oversample/stb_wingraph.h	/^   int shift, ctrl, alt;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
shiftsigned	stb/deprecated/stb_image.c	/^static int shiftsigned(int v, int shift, int bits)$/;"	f	typeref:typename:int	file:
shlen	stb/stb_ds.h	/^#define shlen /;"	d
shlenu	stb/stb_ds.h	/^#define shlenu /;"	d
short_side_len	stb/stb_herringbone_wang_tile.h	/^   int short_side_len; \/\/ rectangles is 2n x n, n = short_side_len$/;"	m	struct:__anon412b11070208	typeref:typename:int
short_side_len	stb/stb_herringbone_wang_tile.h	/^   int short_side_len;$/;"	m	struct:stbhw_tileset	typeref:typename:int
show	stb/stb_divide.h	/^int show=0;$/;"	v	typeref:typename:int
show_grid	stb/stb_tilemap_editor.h	/^   int show_grid, show_links;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
show_links	stb/stb_tilemap_editor.h	/^   int show_grid, show_links;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
show_tex	stb/tests/oversample/main.c	/^int show_tex;$/;"	v	typeref:typename:int
shput	stb/stb_ds.h	/^#define shput /;"	d
shputi	stb/stb_ds.h	/^#define shputi /;"	d
shputs	stb/stb_ds.h	/^#define shputs /;"	d
shrink_threshhold	stb/deprecated/stb.h	/^   int shrink_threshhold;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
side	stb/stb_tilemap_editor.h	/^   int side;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
side_extended	stb/stb_tilemap_editor.h	/^   int side_extended[2];$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int[2]
side_texrot	stb/stb_voxel_render.h	/^   unsigned char *side_texrot;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
signature	stb/deprecated/stb.h	/^   unsigned int signature;$/;"	m	struct:__anonfe33527c0a08	typeref:typename:unsigned int
signature	stb/tests/prerelease/stb_lib.h	/^   unsigned int signature;$/;"	m	struct:__anonb2174fab0308	typeref:typename:unsigned int
single_line	stb/stb_textedit.h	/^   unsigned char single_line;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:unsigned char
size	atlas.cpp	/^  int size;$/;"	m	struct:AtlasImpl	typeref:typename:int	file:
size	stb/deprecated/stb.h	/^   int size, mask;$/;"	m	struct:__anonfe33527c1a08	typeref:typename:int
size	stb/deprecated/stb.h	/^   int size;           \/\/ physical size of buffer in bytes$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
size	stb/deprecated/stb.h	/^   size_t size;$/;"	m	struct:__anonfe33527c1608	typeref:typename:size_t
size	stb/deprecated/stb.h	/^   stb_int64 size;      \/\/ size, max 4GB$/;"	m	struct:__anonfe33527c1408	typeref:typename:stb_int64
size	stb/deprecated/stb.h	/^   unsigned int (*size)(struct stbfile *);$/;"	m	struct:stbfile	typeref:typename:unsigned int (*)(struct stbfile *)
size	stb/deprecated/stb_image.c	/^   stbi__uint8  size[257];$/;"	m	struct:__anon9409ffb90508	typeref:typename:stbi__uint8[257]	file:
size	stb/deprecated/stb_image.c	/^   stbi__uint8  size[288];$/;"	m	struct:__anon9409ffb90908	typeref:typename:stbi__uint8[288]	file:
size	stb/deprecated/stb_image.c	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon9409ffb90e08	typeref:typename:stbi_uc	file:
size	stb/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anonc3e085de0708	typeref:typename:stbi_uc[257]
size	stb/stb_image.h	/^   stbi_uc  size[STBI__ZNSYMS];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:stbi_uc[]
size	stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc3e085de1108	typeref:typename:stbi_uc
size	stb/stb_leakcheck.h	/^   size_t size;$/;"	m	struct:malloc_info	typeref:typename:size_t
size	stb/stb_truetype.h	/^   int size;$/;"	m	struct:__anon77ab60dd0108	typeref:typename:int
size	stb/tests/resample_test.cpp	/^	size_t size;$/;"	m	class:stbir_context	typeref:typename:size_t	file:
size	stb/tools/unicode.c	/^   size_t size;$/;"	m	struct:__anona458f2750408	typeref:typename:size_t	file:
size_for_max_number	stb/tools/unicode.c	/^size_t size_for_max_number(uint32 number)$/;"	f	typeref:typename:size_t
size_for_max_number_aligned	stb/tools/unicode.c	/^size_t size_for_max_number_aligned(uint32 number)$/;"	f	typeref:typename:size_t
size_log2	stb/deprecated/stb.h	/^   int size_log2;$/;"	m	struct:stb_dupe	typeref:typename:int
skip	stb/deprecated/stb_image.c	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anon9409ffb90208	typeref:typename:void (*)(void * user,int n)	file:
skip	stb/deprecated/stb_image.c	/^static void skip(stbi *s, int n)$/;"	f	typeref:typename:void	file:
skip	stb/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anonc3e085de0208	typeref:typename:void (*)(void * user,int n)
skip	stb/stb_vorbis.c	/^static void skip(vorb *z, int n)$/;"	f	typeref:typename:void	file:
skip_missing	stb/stb_truetype.h	/^   int   skip_missing;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
skip_semi	stb/tools/unicode.c	/^char *skip_semi(char *s, int count)$/;"	f	typeref:typename:char *
skylight	stb/tests/caveview/cave_parse.h	/^   unsigned char *skylight[NUM_SEGMENTS];$/;"	m	struct:__anonb02522170308	typeref:typename:unsigned char * []
skylight	stb/tests/caveview/cave_parse.h	/^   unsigned char skylight:4;$/;"	m	struct:__anonb02522170108	typeref:typename:unsigned char:4
slot_count	stb/stb_ds.h	/^  size_t slot_count;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
slot_count_log2	stb/stb_ds.h	/^  size_t slot_count_log2;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
small_bmap	stb/deprecated/stb.h	/^   stb_uint8   small_bmap[16];$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint8[16]
small_sample	stb/tests/sdf/sdf_test.c	/^char *small_sample = "This is goofy text, size %d! Really needs in-shader supersampling to look /;"	v	typeref:typename:char *
sofar	stb/deprecated/stb.h	/^   int sofar;   \/\/ total threads that hit it$/;"	m	struct:stb__sync	typeref:typename:int
solo_layer	stb/stb_tilemap_editor.h	/^    int solo_layer;$/;"	m	struct:stbte_tilemap	typeref:typename:int
sorted_codewords	stb/stb_vorbis.c	/^   uint32 *sorted_codewords;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint32 *	file:
sorted_entries	stb/stb_vorbis.c	/^   int     sorted_entries;$/;"	m	struct:__anon008e12ab0408	typeref:typename:int	file:
sorted_order	stb/stb_vorbis.c	/^   uint8 sorted_order[31*8+2];$/;"	m	struct:__anon008e12ab0608	typeref:typename:uint8[]	file:
sorted_values	stb/stb_vorbis.c	/^   int    *sorted_values;$/;"	m	struct:__anon008e12ab0408	typeref:typename:int *	file:
sources	atlas.cpp	/^  std::vector<SDL_Surface*> sources;$/;"	m	struct:AtlasImpl	typeref:typename:std::vector<SDL_Surface * >	file:
spacing_x	stb/stb_tilemap_editor.h	/^    int spacing_x, spacing_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
spacing_y	stb/stb_tilemap_editor.h	/^    int spacing_x, spacing_y;$/;"	m	struct:stbte_tilemap	typeref:typename:int
sparse	stb/stb_vorbis.c	/^   uint8  sparse;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint8	file:
spec_end	stb/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
spec_start	stb/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
special	stb/tools/unicode.c	/^   uint8 special;$/;"	m	struct:__anona458f2750508	typeref:typename:uint8	file:
split_log2	stb/tools/unicode.c	/^   int   split_log2;$/;"	m	struct:__anona458f2750208	typeref:typename:int	file:
splittable	stb/tools/unicode.c	/^   int  splittable;$/;"	m	struct:__anona458f2750108	typeref:typename:int	file:
sprite_layer	main.cpp	/^std::unique_ptr<RenderSprites> sprite_layer;$/;"	v	typeref:typename:std::unique_ptr<RenderSprites>
sprites	render-shapes.cpp	/^  std::vector<Shape> sprites;$/;"	m	struct:RenderShapesImpl	typeref:typename:std::vector<Shape>	file:
sprites	render-sprites.cpp	/^  std::vector<Sprite> sprites;$/;"	m	struct:RenderSpritesImpl	typeref:typename:std::vector<Sprite>	file:
square	stb/stb_vorbis.c	/^static float square(float x)$/;"	f	typeref:typename:float	file:
srgb	stb/tests/oversample/main.c	/^int srgb=0;$/;"	v	typeref:typename:int
ssize_t	stb/tests/test_sprintf.c	/^typedef ptrdiff_t ssize_t;$/;"	t	typeref:typename:ptrdiff_t	file:
st_stbcc_grid	stb/stb_connected_components.h	/^struct st_stbcc_grid$/;"	s
start	stb/deprecated/stb.h	/^   int                start, len;$/;"	m	struct:stb__span	typeref:typename:int
start	stb/deprecated/stb.h	/^   int start;          \/\/ bytes of data already output$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
start	stb/deprecated/stb.h	/^   stb_mutex start;   \/\/ mutex to prevent starting again before finishing previous$/;"	m	struct:stb__sync	typeref:typename:stb_mutex
start	stb/tests/grid_reachability.c	/^LARGE_INTEGER start;$/;"	v	typeref:typename:LARGE_INTEGER
start	stb/tests/test_ds.c	/^  unsigned __int64 start;$/;"	m	struct:__anon7e6d9c060c08	typeref:typename:unsigned __int64	file:
start_callbacks	stb/deprecated/stb_image.c	/^static void start_callbacks(stbi *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void	file:
start_decoder	stb/stb_vorbis.c	/^static int start_decoder(vorb *f)$/;"	f	typeref:typename:int	file:
start_file	stb/deprecated/stb_image.c	/^static void start_file(stbi *s, FILE *f)$/;"	f	typeref:typename:void	file:
start_mem	stb/deprecated/stb_image.c	/^static void start_mem(stbi *s, stbi__uint8 const *buffer, int len)$/;"	f	typeref:typename:void	file:
start_node	stb/deprecated/stb.h	/^   stb_uint16 start_node;$/;"	m	struct:stb_matcher	typeref:typename:stb_uint16
start_packet	stb/stb_vorbis.c	/^static int start_packet(vorb *f)$/;"	f	typeref:typename:int	file:
start_page	stb/stb_vorbis.c	/^static int start_page(vorb *f)$/;"	f	typeref:typename:int	file:
start_page_no_capturepattern	stb/stb_vorbis.c	/^static int start_page_no_capturepattern(vorb *f)$/;"	f	typeref:typename:int	file:
start_time	stb/tests/caveview/cave_main.c	/^static Uint64 start_time, end_time; \/\/ render time$/;"	v	typeref:typename:Uint64	file:
start_timer	stb/tests/grid_reachability.c	/^void start_timer(char *s)$/;"	f	typeref:typename:void
start_x	stb/deprecated/stb_image.c	/^   int start_x, start_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
start_x	stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
start_x	stb/stb_tilemap_editor.h	/^   int scrolling, start_x, start_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
start_y	stb/deprecated/stb_image.c	/^   int start_x, start_y;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
start_y	stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
start_y	stb/stb_tilemap_editor.h	/^   int scrolling, start_x, start_y;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
started	stb/stb_truetype.h	/^   int started;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:int
stat_out	stb/deprecated/stb.h	/^   stb_bgstat *stat_out;$/;"	m	struct:__anonfe33527c2608	typeref:typename:stb_bgstat *
state	stb/tests/caveview/cave_render.c	/^   int state;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
state	stb/tests/caveview/cave_render.c	/^   int state;$/;"	m	struct:__anonb6d309d70308	typeref:typename:int	file:
state	stb/tests/test_cpp_compilation.cpp	/^   STB_TexteditState state;$/;"	m	struct:__anonfcac0af00108	typeref:typename:STB_TexteditState	file:
state	stb/tests/textedit_sample.c	/^   STB_TexteditState state;$/;"	m	struct:__anon9df40e5c0108	typeref:typename:STB_TexteditState	file:
status	emscripten-shell.html	/^    <div id="status">Downloading...<\/div>$/;"	I
stb	stb/README.md	/^stb$/;"	c
stb	stb/tools/README.header.md	/^stb$/;"	c
stb_	stb/deprecated/stb.h	/^   #define stb_ /;"	d
stb_	stb/deprecated/stb.h	/^void stb_(char *s, ...)$/;"	f	typeref:typename:void
stb__4	stb/deprecated/stb.h	/^typedef struct { char d[4]; } stb__4;$/;"	t	typeref:struct:__anonfe33527c0208
stb__4	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[4]; } stb__4;$/;"	t	typeref:struct:__anonb2174fab0108
stb__8	stb/deprecated/stb.h	/^typedef struct { char d[8]; } stb__8;$/;"	t	typeref:struct:__anonfe33527c0308
stb__8	stb/tests/prerelease/stb_lib.h	/^typedef struct { char d[8]; } stb__8;$/;"	t	typeref:struct:__anonb2174fab0208
stb__As16Bit	stb/stb_dxt.h	/^static unsigned short stb__As16Bit(int r, int g, int b)$/;"	f	typeref:typename:unsigned short
stb__CompressAlphaBlock	stb/stb_dxt.h	/^static void stb__CompressAlphaBlock(unsigned char *dest,unsigned char *src, int stride)$/;"	f	typeref:typename:void
stb__CompressColorBlock	stb/stb_dxt.h	/^static void stb__CompressColorBlock(unsigned char *dest, unsigned char *block, int mode)$/;"	f	typeref:typename:void
stb__Entry	stb/deprecated/stb.h	/^} stb__Entry;$/;"	t	typeref:struct:__anonfe33527c2808
stb__EvalColors	stb/stb_dxt.h	/^static void stb__EvalColors(unsigned char *color,unsigned short c0,unsigned short c1)$/;"	f	typeref:typename:void
stb__FileEntry	stb/deprecated/stb.h	/^} stb__FileEntry;$/;"	t	typeref:struct:__anonfe33527c2a08
stb__From16Bit	stb/stb_dxt.h	/^static void stb__From16Bit(unsigned char *out, unsigned short v)$/;"	f	typeref:typename:void
stb__Lerp13	stb/stb_dxt.h	/^static int stb__Lerp13(int a, int b)$/;"	f	typeref:typename:int
stb__Lerp13RGB	stb/stb_dxt.h	/^static void stb__Lerp13RGB(unsigned char *out, unsigned char *p1, unsigned char *p2)$/;"	f	typeref:typename:void
stb__MatchColorsBlock	stb/stb_dxt.h	/^static unsigned int stb__MatchColorsBlock(unsigned char *block, unsigned char *color)$/;"	f	typeref:typename:unsigned int
stb__Mul8Bit	stb/stb_dxt.h	/^static int stb__Mul8Bit(int a, int b)$/;"	f	typeref:typename:int
stb__OMatch5	stb/stb_dxt.h	/^static const unsigned char stb__OMatch5[256][2] = {$/;"	v	typeref:typename:const unsigned char[256][2]
stb__OMatch6	stb/stb_dxt.h	/^static const unsigned char stb__OMatch6[256][2] = {$/;"	v	typeref:typename:const unsigned char[256][2]
stb__OptimizeColorsBlock	stb/stb_dxt.h	/^static void stb__OptimizeColorsBlock(unsigned char *block, unsigned short *pmax16, unsigned shor/;"	f	typeref:typename:void
stb__Quantize5	stb/stb_dxt.h	/^static unsigned short stb__Quantize5(float x)$/;"	f	typeref:typename:unsigned short
stb__Quantize6	stb/stb_dxt.h	/^static unsigned short stb__Quantize6(float x)$/;"	f	typeref:typename:unsigned short
stb__RefineBlock	stb/stb_dxt.h	/^static int stb__RefineBlock(unsigned char *block, unsigned short *pmax16, unsigned short *pmin16/;"	f	typeref:typename:int
stb__abackpatch	stb/deprecated/stb.h	/^static void stb__abackpatch(stbfile *f, unsigned int where, void *data, unsigned int len)$/;"	f	typeref:typename:void
stb__aclose	stb/deprecated/stb.h	/^static void stb__aclose(stbfile *f)$/;"	f	typeref:typename:void
stb__add_alloc	stb/deprecated/stb.h	/^static void stb__add_alloc(void *p, size_t sz, char *file, int line)$/;"	f	typeref:typename:void
stb__add_edge	stb/deprecated/stb.h	/^static void stb__add_edge(stb_matcher *matcher, int from, int to, int type)$/;"	f	typeref:typename:void
stb__add_epsilon	stb/deprecated/stb.h	/^static void stb__add_epsilon(stb_matcher *matcher, int from, int to)$/;"	f	typeref:typename:void
stb__add_if_inactive	stb/deprecated/stb.h	/^static stb_uint16 * stb__add_if_inactive(stb_matcher *m, stb_uint16 *list, int n)$/;"	f	typeref:typename:stb_uint16 *
stb__add_node	stb/deprecated/stb.h	/^static int stb__add_node(stb_matcher *matcher)$/;"	f	typeref:typename:int
stb__add_section	stb/deprecated/stb.h	/^void stb__add_section(char *buffer, char *data, ptrdiff_t curlen, ptrdiff_t newlen)$/;"	f	typeref:typename:void
stb__add_section	stb/tests/prerelease/stb_lib.h	/^void stb__add_section(char *buffer, char *data, int curlen, int newlen)$/;"	f	typeref:typename:void
stb__alloc	stb/deprecated/stb.h	/^} stb__alloc;$/;"	t	typeref:struct:__anonfe33527c0708
stb__alloc_chunk	stb/deprecated/stb.h	/^static void * stb__alloc_chunk(stb__alloc *src, int size, int align, int pre_align)$/;"	f	typeref:typename:void *
stb__alloc_count	stb/deprecated/stb.h	/^int stb__alloc_count;$/;"	v	typeref:typename:int
stb__alloc_global	stb/deprecated/stb.h	/^static stb__alloc stb__alloc_global =$/;"	v	typeref:typename:stb__alloc
stb__alloc_history	stb/deprecated/stb.h	/^stb_malloc_record stb__alloc_history[STB_MALLOC_HISTORY_COUNT];$/;"	v	typeref:typename:stb_malloc_record[]
stb__alloc_limit	stb/deprecated/stb.h	/^static int stb__alloc_size, stb__alloc_limit, stb__alloc_mask;$/;"	v	typeref:typename:int
stb__alloc_mask	stb/deprecated/stb.h	/^static int stb__alloc_size, stb__alloc_limit, stb__alloc_mask;$/;"	v	typeref:typename:int
stb__alloc_matcher	stb/deprecated/stb.h	/^static stb_matcher *stb__alloc_matcher(void)$/;"	f	typeref:typename:stb_matcher *
stb__alloc_pages	stb/deprecated/stb.h	/^static stb__span *stb__alloc_pages(int num)$/;"	f	typeref:typename:stb__span *
stb__alloc_pages_raw	stb/deprecated/stb.h	/^   #define stb__alloc_pages_raw(/;"	d
stb__alloc_size	stb/deprecated/stb.h	/^static int stb__alloc_size, stb__alloc_limit, stb__alloc_mask;$/;"	v	typeref:typename:int
stb__alloc_span	stb/deprecated/stb.h	/^static stb__span *stb__alloc_span(int pagecount)$/;"	f	typeref:typename:stb__span *
stb__alloc_type	stb/deprecated/stb.h	/^} stb__alloc_type;$/;"	t	typeref:enum:__anonfe33527c0903
stb__allocations	stb/deprecated/stb.h	/^stb_malloc_record *stb__allocations;$/;"	v	typeref:typename:stb_malloc_record *
stb__aputbyte	stb/deprecated/stb.h	/^static int stb__aputbyte(stbfile *f, int ch)$/;"	f	typeref:typename:int
stb__aputdata	stb/deprecated/stb.h	/^static unsigned int stb__aputdata(stbfile *f, void *data, unsigned int len)$/;"	f	typeref:typename:unsigned int
stb__arith_carry	stb/deprecated/stb.h	/^static void stb__arith_carry(stb_arith *a)$/;"	f	typeref:typename:void
stb__arith_flush	stb/deprecated/stb.h	/^static void stb__arith_flush(stb_arith *a)$/;"	f	typeref:typename:void
stb__arith_putbyte	stb/deprecated/stb.h	/^static void stb__arith_putbyte(stb_arith *a, int byte)$/;"	f	typeref:typename:void
stb__arr	stb/deprecated/stb.h	/^} stb__arr;$/;"	t	typeref:struct:__anonfe33527c0a08
stb__arr	stb/tests/prerelease/stb_lib.h	/^} stb__arr;$/;"	t	typeref:struct:__anonb2174fab0308
stb__arr_addlen	stb/deprecated/stb.h	/^  #define stb__arr_addlen /;"	d
stb__arr_addlen	stb/deprecated/stb.h	/^  #define stb__arr_addlen(/;"	d
stb__arr_addlen	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_addlen /;"	d
stb__arr_addlen	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_addlen(/;"	d
stb__arr_addlen_	stb/deprecated/stb.h	/^void stb__arr_addlen_(void **p, int size, int addlen  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arr_addlen_	stb/tests/prerelease/stb_lib.h	/^void stb__arr_addlen_(void **p, int size, int addlen)$/;"	f	typeref:typename:void
stb__arr_context	stb/deprecated/stb.h	/^static void *stb__arr_context;$/;"	v	typeref:typename:void *
stb__arr_copy	stb/deprecated/stb.h	/^#define stb__arr_copy /;"	d
stb__arr_copy	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_copy /;"	d
stb__arr_copy	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_copy(/;"	d
stb__arr_copy_	stb/deprecated/stb.h	/^void * stb__arr_copy_(void *p, int elem_size)$/;"	f	typeref:typename:void *
stb__arr_copy_	stb/tests/prerelease/stb_lib.h	/^void * stb__arr_copy_(void *p, int elem_size)$/;"	f	typeref:typename:void *
stb__arr_deleten	stb/deprecated/stb.h	/^  #define stb__arr_deleten /;"	d
stb__arr_deleten	stb/deprecated/stb.h	/^  #define stb__arr_deleten(/;"	d
stb__arr_deleten	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_deleten /;"	d
stb__arr_deleten	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_deleten(/;"	d
stb__arr_deleten_	stb/deprecated/stb.h	/^void stb__arr_deleten_(void **pp, int size, int i, int n  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arr_deleten_	stb/tests/prerelease/stb_lib.h	/^void stb__arr_deleten_(void **pp, int size, int i, int n)$/;"	f	typeref:typename:void
stb__arr_insertn	stb/deprecated/stb.h	/^  #define stb__arr_insertn /;"	d
stb__arr_insertn	stb/deprecated/stb.h	/^  #define stb__arr_insertn(/;"	d
stb__arr_insertn	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_insertn /;"	d
stb__arr_insertn	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_insertn(/;"	d
stb__arr_insertn_	stb/deprecated/stb.h	/^void stb__arr_insertn_(void **pp, int size, int i, int n  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arr_insertn_	stb/tests/prerelease/stb_lib.h	/^void stb__arr_insertn_(void **pp, int size, int i, int n)$/;"	f	typeref:typename:void
stb__arr_malloc	stb/deprecated/stb.h	/^static void * stb__arr_malloc(int size)$/;"	f	typeref:typename:void *
stb__arr_malloc	stb/tests/prerelease/stb_lib.h	/^static void * stb__arr_malloc(int size)$/;"	f	typeref:typename:void *
stb__arr_setlen	stb/deprecated/stb.h	/^  #define stb__arr_setlen /;"	d
stb__arr_setlen	stb/deprecated/stb.h	/^  #define stb__arr_setlen(/;"	d
stb__arr_setlen	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_setlen /;"	d
stb__arr_setlen	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_setlen(/;"	d
stb__arr_setlen_	stb/deprecated/stb.h	/^void stb__arr_setlen_(void **pp, int size, int newlen  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arr_setlen_	stb/tests/prerelease/stb_lib.h	/^void stb__arr_setlen_(void **pp, int size, int newlen)$/;"	f	typeref:typename:void
stb__arr_setsize	stb/deprecated/stb.h	/^  #define stb__arr_setsize /;"	d
stb__arr_setsize	stb/deprecated/stb.h	/^  #define stb__arr_setsize(/;"	d
stb__arr_setsize	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_setsize /;"	d
stb__arr_setsize	stb/tests/prerelease/stb_lib.h	/^  #define stb__arr_setsize(/;"	d
stb__arr_setsize_	stb/deprecated/stb.h	/^void stb__arr_setsize_(void **pp, int size, int limit  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arr_setsize_	stb/tests/prerelease/stb_lib.h	/^void stb__arr_setsize_(void **pp, int size, int limit)$/;"	f	typeref:typename:void
stb__arrsize_	stb/deprecated/stb.h	/^static void stb__arrsize_(void **pp, int size, int limit, int len  STB__PARAMS)$/;"	f	typeref:typename:void
stb__arrsize_	stb/tests/prerelease/stb_lib.h	/^static void stb__arrsize_(void **pp, int size, int limit, int len)$/;"	f	typeref:typename:void
stb__asize	stb/deprecated/stb.h	/^static unsigned int stb__asize(stbfile *f) { return stb_arr_len(f->buffer); }$/;"	f	typeref:typename:unsigned int
stb__barrier	stb/deprecated/stb.h	/^static unsigned char *stb__barrier;$/;"	v	typeref:typename:unsigned char *
stb__barrier2	stb/deprecated/stb.h	/^static unsigned char *stb__barrier2;$/;"	v	typeref:typename:unsigned char *
stb__barrier3	stb/deprecated/stb.h	/^static unsigned char *stb__barrier3;$/;"	v	typeref:typename:unsigned char *
stb__barrier4	stb/deprecated/stb.h	/^static unsigned char *stb__barrier4;$/;"	v	typeref:typename:unsigned char *
stb__bclose	stb/deprecated/stb.h	/^static void stb__bclose(stbfile *s)$/;"	f	typeref:typename:void
stb__bgetbyte	stb/deprecated/stb.h	/^static int stb__bgetbyte(stbfile *s)$/;"	f	typeref:typename:int
stb__bgetdata	stb/deprecated/stb.h	/^static unsigned int stb__bgetdata(stbfile *s, void *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned int
stb__big32	stb/tests/prerelease/stb_lib.h	/^#define stb__big32(/;"	d
stb__bsize	stb/deprecated/stb.h	/^static unsigned int stb__bsize(stbfile *s) { return (unsigned int) (s->inend  - s->buffer); }$/;"	f	typeref:typename:unsigned int
stb__bst_noparent	stb/deprecated/stb.h	/^#define stb__bst_noparent(/;"	d
stb__bst_parent	stb/deprecated/stb.h	/^#define stb__bst_parent(/;"	d
stb__btell	stb/deprecated/stb.h	/^static unsigned int stb__btell(stbfile *s) { return (unsigned int) (s->indata - s->buffer); }$/;"	f	typeref:typename:unsigned int
stb__calloc	stb/deprecated/stb.h	/^   static void *stb__calloc(size_t n, size_t sz, char *file, int line)$/;"	f	typeref:typename:void *
stb__cfg_dir	stb/deprecated/stb.h	/^static char stb__cfg_dir[512];$/;"	v	typeref:typename:char[512]
stb__cfg_item	stb/deprecated/stb.h	/^} stb__cfg_item;$/;"	t	typeref:struct:__anonfe33527c1208
stb__cfg_sig	stb/deprecated/stb.h	/^static const char *stb__cfg_sig = "sTbCoNfIg!\\0\\0";$/;"	v	typeref:typename:const char *
stb__charcmp	stb/tests/prerelease/stb_lib.h	/^int stb__charcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__charcmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__floatcmpoffset, stb__doublecmpoffset, stb__charcmpoffset;$/;"	v	typeref:typename:int
stb__check	stb/deprecated/stb.h	/^      #define stb__check(/;"	d
stb__check	stb/deprecated/stb.h	/^   #define stb__check(/;"	d
stb__check2	stb/deprecated/stb.h	/^   static void stb__check2(void *p, size_t sz, char *file, int line)$/;"	f	typeref:typename:void
stb__chunk	stb/deprecated/stb.h	/^typedef struct stb__chunk$/;"	s
stb__chunk	stb/deprecated/stb.h	/^} stb__chunk;$/;"	t	typeref:struct:stb__chunk
stb__chunked	stb/deprecated/stb.h	/^} stb__chunked;$/;"	t	typeref:struct:__anonfe33527c0808
stb__chunks	stb/deprecated/stb.h	/^#define stb__chunks(/;"	d
stb__class_base	stb/deprecated/stb.h	/^static unsigned char stb__class_base[32];$/;"	v	typeref:typename:unsigned char[32]
stb__class_shift	stb/deprecated/stb.h	/^static unsigned char stb__class_shift[32];$/;"	v	typeref:typename:unsigned char[32]
stb__clear	stb/deprecated/stb.h	/^static void stb__clear(stb_matcher *m, stb_uint16 *list)$/;"	f	typeref:typename:void
stb__clear_goalcheck	stb/deprecated/stb.h	/^static int stb__clear_goalcheck(stb_matcher *m, stb_uint16 *list)$/;"	f	typeref:typename:int
stb__clex_eof	stb/stb_c_lexer.h	/^static int stb__clex_eof(stb_lexer *lexer)$/;"	f	typeref:typename:int
stb__clex_int	stb/stb_c_lexer.h	/^typedef double     stb__clex_int;$/;"	t	typeref:typename:double
stb__clex_int	stb/stb_c_lexer.h	/^typedef long       stb__clex_int;$/;"	t	typeref:typename:long
stb__clex_iswhite	stb/stb_c_lexer.h	/^static int stb__clex_iswhite(int x)$/;"	f	typeref:typename:int
stb__clex_parse_char	stb/stb_c_lexer.h	/^static int stb__clex_parse_char(char *p, char **q)$/;"	f	typeref:typename:int
stb__clex_parse_float	stb/stb_c_lexer.h	/^static double stb__clex_parse_float(char *p, char **q)$/;"	f	typeref:typename:double
stb__clex_parse_string	stb/stb_c_lexer.h	/^static int stb__clex_parse_string(stb_lexer *lexer, char *p, int type)$/;"	f	typeref:typename:int
stb__clex_parse_suffixes	stb/stb_c_lexer.h	/^static int stb__clex_parse_suffixes(stb_lexer *lexer, long tokenid, char *start, char *cur, cons/;"	f	typeref:typename:int
stb__clex_pow	stb/stb_c_lexer.h	/^static double stb__clex_pow(double base, unsigned int exponent)$/;"	f	typeref:typename:double
stb__clex_token	stb/stb_c_lexer.h	/^static int stb__clex_token(stb_lexer *lexer, int token, char *start, char *end)$/;"	f	typeref:typename:int
stb__coalesce	stb/deprecated/stb.h	/^static stb__span *stb__coalesce(stb__span *a, stb__span *b)$/;"	f	typeref:typename:stb__span *
stb__compare	stb/deprecated/stb.h	/^static stb_compare_func stb__compare;$/;"	v	typeref:typename:stb_compare_func
stb__constant_file_hash	stb/deprecated/stb.h	/^static stb_sdict *stb__constant_file_hash;$/;"	v	typeref:typename:stb_sdict *
stb__constant_get_entry	stb/deprecated/stb.h	/^stb__Entry *stb__constant_get_entry(char *filename, int line, int type)$/;"	f	typeref:typename:stb__Entry *
stb__constant_parse	stb/deprecated/stb.h	/^static void stb__constant_parse(stb__FileEntry *f, int i)$/;"	f	typeref:typename:void
stb__dc_offset	stb/deprecated/stb.h	/^static int stb__dc_offset;$/;"	v	typeref:typename:int
stb__dc_queue	stb/deprecated/stb.h	/^static stb__disk_command stb__dc_queue[STB__MAX_DISK_COMMAND];$/;"	v	typeref:typename:stb__disk_command[]
stb__dealloc_pages_raw	stb/deprecated/stb.h	/^   #define stb__dealloc_pages_raw(/;"	d
stb__define_sort	stb/deprecated/stb.h	/^#define stb__define_sort(/;"	d
stb__dircount	stb/deprecated/stb.h	/^static int stb__dircount, stb__dircount_mask, stb__showfile;$/;"	v	typeref:typename:int
stb__dircount_mask	stb/deprecated/stb.h	/^static int stb__dircount, stb__dircount_mask, stb__showfile;$/;"	v	typeref:typename:int
stb__dirtree_add_dir	stb/deprecated/stb.h	/^static void stb__dirtree_add_dir(char *path, time_t last, stb_dirtree *active)$/;"	f	typeref:typename:void
stb__dirtree_add_file	stb/deprecated/stb.h	/^static void stb__dirtree_add_file(char *name, int dir, stb_int64 size, time_t last, stb_dirtree /;"	f	typeref:typename:void
stb__dirtree_free_raw	stb/deprecated/stb.h	/^static void stb__dirtree_free_raw(stb_dirtree *d)$/;"	f	typeref:typename:void
stb__dirtree_load_db	stb/deprecated/stb.h	/^static void stb__dirtree_load_db(char *filename, stb_dirtree *data, char *dir)$/;"	f	typeref:typename:void
stb__dirtree_save_db	stb/deprecated/stb.h	/^static void stb__dirtree_save_db(char *filename, stb_dirtree *data, char *root)$/;"	f	typeref:typename:void
stb__dirtree_scandir	stb/deprecated/stb.h	/^static void stb__dirtree_scandir(char *path, time_t last_time, stb_dirtree *active)$/;"	f	typeref:typename:void
stb__dirtree_update_db	stb/deprecated/stb.h	/^static int stb__dirtree_update_db(stb_dirtree *db, stb_dirtree *active)$/;"	f	typeref:typename:int
stb__disk_command	stb/deprecated/stb.h	/^} stb__disk_command;$/;"	t	typeref:struct:__anonfe33527c2608
stb__diskio	stb/deprecated/stb.h	/^static stb_workqueue *stb__diskio;$/;"	v	typeref:typename:stb_workqueue *
stb__diskio_mutex	stb/deprecated/stb.h	/^static stb_mutex stb__diskio_mutex;$/;"	v	typeref:typename:stb_mutex
stb__div	stb/stb_divide.h	/^   #define stb__div(/;"	d
stb__div	stb/stb_divide.h	/^   int stb__div(int v1, int v2)$/;"	f	typeref:typename:int
stb__double_constant	stb/deprecated/stb.h	/^double stb__double_constant(char *file, int line, double x)$/;"	f	typeref:typename:double
stb__doublecmp	stb/deprecated/stb.h	/^int stb__doublecmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__doublecmp	stb/tests/prerelease/stb_lib.h	/^int stb__doublecmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__doublecmpoffset	stb/deprecated/stb.h	/^static int stb__floatcmpoffset, stb__doublecmpoffset;$/;"	v	typeref:typename:int
stb__doublecmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__floatcmpoffset, stb__doublecmpoffset, stb__charcmpoffset;$/;"	v	typeref:typename:int
stb__dout	stb/deprecated/stb.h	/^static stb_uchar *stb__dout;$/;"	v	typeref:typename:stb_uchar *
stb__dupe_compare	stb/deprecated/stb.h	/^static int stb__dupe_compare(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__eps_closure	stb/deprecated/stb.h	/^static stb_uint16 * stb__eps_closure(stb_matcher *m, stb_uint16 *list)$/;"	f	typeref:typename:stb_uint16 *
stb__fbackpatch	stb/deprecated/stb.h	/^static void stb__fbackpatch(stbfile *f, unsigned int where, void *buffer, unsigned int len)$/;"	f	typeref:typename:void
stb__fclose	stb/deprecated/stb.h	/^static void         stb__fclose(stbfile *f) { fclose(f->f); }$/;"	f	typeref:typename:void
stb__fclose2	stb/deprecated/stb.h	/^static void stb__fclose2(stbfile *f)$/;"	f	typeref:typename:void
stb__fgetbyte	stb/deprecated/stb.h	/^static int stb__fgetbyte(stbfile *f) { return fgetc(f->f); }$/;"	f	typeref:typename:int
stb__fgetdata	stb/deprecated/stb.h	/^static unsigned int stb__fgetdata(stbfile *f, void *buffer, unsigned int len) { return (unsigned/;"	f	typeref:typename:unsigned int
stb__file	stb/deprecated/stb.h	/^static char *stb__file;$/;"	v	typeref:typename:char *
stb__file_data	stb/deprecated/stb.h	/^} stb__file_data;$/;"	t	typeref:struct:__anonfe33527c1108
stb__files	stb/deprecated/stb.h	/^static stb_ptrmap *stb__files;$/;"	v	typeref:typename:stb_ptrmap *
stb__find_qstring	stb/deprecated/stb.h	/^static int stb__find_qstring(char *candidate, char *qstring, int qlen, int insensitive)$/;"	f	typeref:typename:int
stb__find_qstring	stb/tests/prerelease/stb_lib.h	/^static int stb__find_qstring(char *candidate, char *qstring, int qlen, int insensitive)$/;"	f	typeref:typename:int
stb__firstpage	stb/deprecated/stb.h	/^static int stb__firstpage, stb__lastpage;$/;"	v	typeref:typename:int
stb__floatcmp	stb/deprecated/stb.h	/^int stb__floatcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__floatcmp	stb/tests/prerelease/stb_lib.h	/^int stb__floatcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__floatcmpoffset	stb/deprecated/stb.h	/^static int stb__floatcmpoffset, stb__doublecmpoffset;$/;"	v	typeref:typename:int
stb__floatcmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__floatcmpoffset, stb__doublecmpoffset, stb__charcmpoffset;$/;"	v	typeref:typename:int
stb__fopen	stb/deprecated/stb.h	/^   #define stb__fopen(/;"	d
stb__fopen	stb/tests/prerelease/stb_lib.h	/^   #define stb__fopen(/;"	d
stb__fputbyte	stb/deprecated/stb.h	/^static int stb__fputbyte(stbfile *f, int ch) { return fputc(ch, f->f)==0; }$/;"	f	typeref:typename:int
stb__fputdata	stb/deprecated/stb.h	/^static unsigned int stb__fputdata(stbfile *f, void *buffer, unsigned int len) { return (unsigned/;"	f	typeref:typename:unsigned int
stb__free	stb/deprecated/stb.h	/^   void stb__free(void *p, char *file, int line)$/;"	f	typeref:typename:void
stb__free_final	stb/deprecated/stb.h	/^   static void stb__free_final(void *p)$/;"	f	typeref:typename:void
stb__free_span	stb/deprecated/stb.h	/^static void stb__free_span(stb__span *s)$/;"	f	typeref:typename:void
stb__from_utf8	stb/deprecated/stb.h	/^stb__wchar *stb__from_utf8(const char *str)$/;"	f	typeref:typename:stb__wchar *
stb__from_utf8	stb/tests/prerelease/stb_lib.h	/^stb__wchar *stb__from_utf8(char *str)$/;"	f	typeref:typename:stb__wchar *
stb__from_utf8_alt	stb/deprecated/stb.h	/^stb__wchar *stb__from_utf8_alt(const char *str)$/;"	f	typeref:typename:stb__wchar *
stb__from_utf8_alt	stb/tests/prerelease/stb_lib.h	/^stb__wchar *stb__from_utf8_alt(char *str)$/;"	f	typeref:typename:stb__wchar *
stb__fsize	stb/deprecated/stb.h	/^static unsigned int stb__fsize(stbfile *f) { return (unsigned int) stb_filelen(f->f); }$/;"	f	typeref:typename:unsigned int
stb__ftell	stb/deprecated/stb.h	/^static unsigned int stb__ftell(stbfile *f) { return (unsigned int) ftell(f->f); }$/;"	f	typeref:typename:unsigned int
stb__get16	stb/deprecated/stb.h	/^#define stb__get16(/;"	d
stb__get16	stb/tests/prerelease/stb_lib.h	/^   #define stb__get16(/;"	d
stb__get16_slow	stb/tests/prerelease/stb_lib.h	/^#define stb__get16_slow(/;"	d
stb__get_context	stb/deprecated/stb.h	/^static stb__alloc * stb__get_context(void *context)$/;"	f	typeref:typename:stb__alloc *
stb__get_dfa_node	stb/deprecated/stb.h	/^stb_int16 stb__get_dfa_node(stb_matcher *m, stb_uint16 *list)$/;"	f	typeref:typename:stb_int16
stb__get_nonempty_sizeclass	stb/deprecated/stb.h	/^stb__span *stb__get_nonempty_sizeclass(int c)$/;"	f	typeref:typename:stb__span *
stb__get_sourcefile_path	stb/deprecated/stb.h	/^char *stb__get_sourcefile_path(char *file)$/;"	f	typeref:typename:char *
stb__grow_alloc	stb/deprecated/stb.h	/^static void stb__grow_alloc(void)$/;"	f	typeref:typename:void
stb__hashfind	stb/deprecated/stb.h	/^static int stb__hashfind(void *p)$/;"	f	typeref:typename:int
stb__hashsize	stb/deprecated/stb.h	/^static  stb_uint stb__hashsize = 32768;$/;"	v	typeref:typename:stb_uint
stb__hc	stb/deprecated/stb.h	/^#define stb__hc(/;"	d
stb__hc2	stb/deprecated/stb.h	/^#define stb__hc2(/;"	d
stb__hc3	stb/deprecated/stb.h	/^#define stb__hc3(/;"	d
stb__history_pos	stb/deprecated/stb.h	/^int stb__history_pos;$/;"	v	typeref:typename:int
stb__historyfind	stb/deprecated/stb.h	/^static int stb__historyfind(void *p)$/;"	f	typeref:typename:int
stb__identify	stb/deprecated/stb.h	/^static stb__alloc_type stb__identify(void *p)$/;"	f	typeref:typename:stb__alloc_type
stb__in2	stb/deprecated/stb.h	/^#define stb__in2(/;"	d
stb__in3	stb/deprecated/stb.h	/^#define stb__in3(/;"	d
stb__in4	stb/deprecated/stb.h	/^#define stb__in4(/;"	d
stb__init_sizeclass	stb/deprecated/stb.h	/^static void stb__init_sizeclass(void)$/;"	f	typeref:typename:void
stb__insert_alloc	stb/deprecated/stb.h	/^static void stb__insert_alloc(stb__alloc *src, stb__alloc *s)$/;"	f	typeref:typename:void
stb__insert_nochild	stb/deprecated/stb.h	/^static void stb__insert_nochild(stb__alloc *src, stb__nochildren *s)$/;"	f	typeref:typename:void
stb__int_constant	stb/deprecated/stb.h	/^int    stb__int_constant(char *file, int line, int x)$/;"	f	typeref:typename:int
stb__intcmp	stb/deprecated/stb.h	/^int stb__intcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__intcmp	stb/tests/prerelease/stb_lib.h	/^int stb__intcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__intcmpoffset	stb/deprecated/stb.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__intcmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__intcmprev	stb/deprecated/stb.h	/^int stb__intcmprev(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__introspect	stb/deprecated/stb.h	/^void stb__introspect(char *filename)$/;"	f	typeref:typename:void
stb__io_add	stb/deprecated/stb.h	/^int stb__io_add(char *fname, FILE *f, int off, int len, stb_uchar *out, stb_uchar **result, int /;"	f	typeref:typename:int
stb__io_error	stb/deprecated/stb.h	/^static void * stb__io_error(stb__disk_command *dc)$/;"	f	typeref:typename:void *
stb__io_init	stb/deprecated/stb.h	/^void stb__io_init(void)$/;"	f	typeref:typename:void
stb__io_task	stb/deprecated/stb.h	/^static void * stb__io_task(void *p)$/;"	f	typeref:typename:void *
stb__lastpage	stb/deprecated/stb.h	/^static int stb__firstpage, stb__lastpage;$/;"	v	typeref:typename:int
stb__lex_reset	stb/deprecated/stb.h	/^static void stb__lex_reset(stb_matcher *matcher)$/;"	f	typeref:typename:void
stb__line	stb/deprecated/stb.h	/^static int   stb__line;$/;"	v	typeref:typename:int
stb__lit	stb/deprecated/stb.h	/^static void stb__lit(stb_uchar *data, stb_uint length)$/;"	f	typeref:typename:void
stb__log_active	stb/deprecated/stb.h	/^static int stb__log_active=1, stb__log_fileline=1;$/;"	v	typeref:typename:int
stb__log_fileline	stb/deprecated/stb.h	/^static int stb__log_active=1, stb__log_fileline=1;$/;"	v	typeref:typename:int
stb__log_filename	stb/deprecated/stb.h	/^const char *stb__log_filename = "stb.log";$/;"	v	typeref:typename:const char *
stb__log_filename	stb/deprecated/stb.h	/^const char *stb__log_filename = "temp.log";$/;"	v	typeref:typename:const char *
stb__malloc	stb/deprecated/stb.h	/^   void * stb__malloc(size_t sz, char *file, int line)$/;"	f	typeref:typename:void *
stb__malloc_failure	stb/deprecated/stb.h	/^   int stb__malloc_failure;$/;"	v	typeref:typename:int
stb__malloc_final	stb/deprecated/stb.h	/^   static void *stb__malloc_final(size_t sz)$/;"	f	typeref:typename:void *
stb__malloc_iter	stb/deprecated/stb.h	/^   static int stb__malloc_wait=(1 << 30), stb__malloc_next_wait = (1 << 30), stb__malloc_iter;$/;"	v	typeref:typename:int
stb__malloc_next_wait	stb/deprecated/stb.h	/^   static int stb__malloc_wait=(1 << 30), stb__malloc_next_wait = (1 << 30), stb__malloc_iter;$/;"	v	typeref:typename:int
stb__malloc_wait	stb/deprecated/stb.h	/^   static int stb__malloc_wait=(1 << 30), stb__malloc_next_wait = (1 << 30), stb__malloc_iter;$/;"	v	typeref:typename:int
stb__match	stb/deprecated/stb.h	/^static void stb__match(stb_uchar *data, stb_uint length)$/;"	f	typeref:typename:void
stb__match_qstring	stb/deprecated/stb.h	/^static int stb__match_qstring(char *candidate, char *qstring, int qlen, int insensitive)$/;"	f	typeref:typename:int
stb__match_qstring	stb/tests/prerelease/stb_lib.h	/^static int stb__match_qstring(char *candidate, char *qstring, int qlen, int insensitive)$/;"	f	typeref:typename:int
stb__matcher_dfa	stb/deprecated/stb.h	/^static int stb__matcher_dfa(stb_matcher *m, char *str_c, int *len)$/;"	f	typeref:typename:int
stb__memcmp	stb/deprecated/stb.h	/^int stb__memcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__memcmpoffset	stb/deprecated/stb.h	/^static int stb__memcmpoffset, stb__memcmpsize;$/;"	v	typeref:typename:int
stb__memcmpsize	stb/deprecated/stb.h	/^static int stb__memcmpoffset, stb__memcmpsize;$/;"	v	typeref:typename:int
stb__memory_leaf	stb/deprecated/stb.h	/^} stb__memory_leaf;$/;"	t	typeref:struct:__anonfe33527c0e08
stb__memory_node	stb/deprecated/stb.h	/^} stb__memory_node;$/;"	t	typeref:struct:__anonfe33527c0f08
stb__memtab_root	stb/deprecated/stb.h	/^stb__memory_node *stb__memtab_root[STB__NPTR_ROOT_NUM];$/;"	v	typeref:typename:stb__memory_node * []
stb__midpoints5	stb/stb_dxt.h	/^static const float stb__midpoints5[32] = {$/;"	v	typeref:typename:const float[32]
stb__midpoints6	stb/stb_dxt.h	/^static const float stb__midpoints6[64] = {$/;"	v	typeref:typename:const float[64]
stb__mod	stb/stb_divide.h	/^   #define stb__mod(/;"	d
stb__mod	stb/stb_divide.h	/^   int stb__mod(int v1, int v2)$/;"	f	typeref:typename:int
stb__mt_buffer	stb/deprecated/stb.h	/^unsigned int stb__mt_buffer[STB__MT_LEN];$/;"	v	typeref:typename:unsigned int[]
stb__mt_buffer	stb/tests/prerelease/stb_lib.h	/^unsigned long stb__mt_buffer[STB__MT_LEN];$/;"	v	typeref:typename:unsigned long[]
stb__mt_index	stb/deprecated/stb.h	/^int stb__mt_index = STB__MT_LEN*sizeof(int)+1;$/;"	v	typeref:typename:int
stb__mt_index	stb/tests/prerelease/stb_lib.h	/^int stb__mt_index = STB__MT_LEN*sizeof(unsigned long)+1;$/;"	v	typeref:typename:int
stb__nc	stb/deprecated/stb.h	/^      #define stb__nc(/;"	d
stb__nobackpatch	stb/deprecated/stb.h	/^static void stb__nobackpatch(stbfile *f, unsigned int where, void *buffer, unsigned int len) { a/;"	f	typeref:typename:void
stb__nochildren	stb/deprecated/stb.h	/^} stb__nochildren;$/;"	t	typeref:struct:__anonfe33527c0608
stb__nogetbyte	stb/deprecated/stb.h	/^static int stb__nogetbyte(stbfile *f) { assert(0); return -1; }$/;"	f	typeref:typename:int
stb__nogetdata	stb/deprecated/stb.h	/^static unsigned int stb__nogetdata(stbfile *f, void *buffer, unsigned int len) { assert(0); retu/;"	f	typeref:typename:unsigned int
stb__noputbyte	stb/deprecated/stb.h	/^static int stb__noputbyte(stbfile *f, int ch) { assert(0); return 0; }$/;"	f	typeref:typename:int
stb__noputdata	stb/deprecated/stb.h	/^static unsigned int stb__noputdata(stbfile *f, void *buffer, unsigned int len) { assert(0); retu/;"	f	typeref:typename:unsigned int
stb__nptr	stb/deprecated/stb.h	/^} stb__nptr;$/;"	t	typeref:struct:stb__st_nptr
stb__nptr_alloc	stb/deprecated/stb.h	/^static void * stb__nptr_alloc(int size)$/;"	f	typeref:typename:void *
stb__nptr_block	stb/deprecated/stb.h	/^void stb__nptr_block(void *address, int len, void (*function)(stb__memory_leaf *f, int datum, vo/;"	f	typeref:typename:void
stb__nptr_delete_pointers	stb/deprecated/stb.h	/^static void stb__nptr_delete_pointers(stb__memory_leaf *f, int offset, void *start, void *end)$/;"	f	typeref:typename:void
stb__nptr_delete_targets	stb/deprecated/stb.h	/^static void stb__nptr_delete_targets(stb__memory_leaf *f, int offset, void *start, void *end)$/;"	f	typeref:typename:void
stb__nptr_find_leaf	stb/deprecated/stb.h	/^static stb__memory_leaf *stb__nptr_find_leaf(void *mem)$/;"	f	typeref:typename:stb__memory_leaf *
stb__nptr_find_pointer	stb/deprecated/stb.h	/^static stb__nptr *stb__nptr_find_pointer(void *ptr, int force)$/;"	f	typeref:typename:stb__nptr *
stb__nptr_find_target	stb/deprecated/stb.h	/^static stb__nptr_target *stb__nptr_find_target(void *target, int force)$/;"	f	typeref:typename:stb__nptr_target *
stb__nptr_free	stb/deprecated/stb.h	/^static void stb__nptr_free(void *p)$/;"	f	typeref:typename:void
stb__nptr_make_leaf	stb/deprecated/stb.h	/^static stb__memory_leaf *stb__nptr_make_leaf(void *mem)$/;"	f	typeref:typename:stb__memory_leaf *
stb__nptr_move_pointers	stb/deprecated/stb.h	/^static void stb__nptr_move_pointers(stb__memory_leaf *f, int offset, void *start, void *end)$/;"	f	typeref:typename:void
stb__nptr_move_targets	stb/deprecated/stb.h	/^static void stb__nptr_move_targets(stb__memory_leaf *f, int offset, void *start, void *end)$/;"	f	typeref:typename:void
stb__nptr_target	stb/deprecated/stb.h	/^} stb__nptr_target;$/;"	t	typeref:struct:stb__st_nptr_target
stb__open_temp_file	stb/deprecated/stb.h	/^static FILE *stb__open_temp_file(char *temp_name, char *src_name, const char *mode)$/;"	f	typeref:typename:FILE *
stb__opt	stb/deprecated/stb.h	/^static int stb__opt(stb_matcher *m, int n)$/;"	f	typeref:typename:int
stb__optimize	stb/deprecated/stb.h	/^static void stb__optimize(stb_matcher *m)$/;"	f	typeref:typename:void
stb__out	stb/deprecated/stb.h	/^static stb_uchar *stb__out;$/;"	v	typeref:typename:stb_uchar *
stb__outbytes	stb/deprecated/stb.h	/^static stb_uint   stb__outbytes;$/;"	v	typeref:typename:stb_uint
stb__outfile	stb/deprecated/stb.h	/^static FILE      *stb__outfile;$/;"	v	typeref:typename:FILE *
stb__page_address	stb/deprecated/stb.h	/^#define stb__page_address(/;"	d
stb__page_number	stb/deprecated/stb.h	/^#define stb__page_number(/;"	d
stb__page_shift	stb/deprecated/stb.h	/^#define stb__page_shift /;"	d
stb__page_size	stb/deprecated/stb.h	/^#define stb__page_size /;"	d
stb__pages_for_class	stb/deprecated/stb.h	/^static unsigned char stb__pages_for_class[STB__MAX_SIZE_CLASSES];$/;"	v	typeref:typename:unsigned char[]
stb__parent	stb/deprecated/stb.h	/^#define stb__parent(/;"	d
stb__perfect_prehash	stb/deprecated/stb.h	/^static void stb__perfect_prehash(stb_perfect *p, stb_uint x, stb_uint16 *a, stb_uint16 *b)$/;"	f	typeref:typename:void
stb__perfect_rand	stb/deprecated/stb.h	/^static unsigned long stb__perfect_rand(void)$/;"	f	typeref:typename:unsigned long
stb__prevn	stb/deprecated/stb.h	/^static void *** stb__prevn(void *p)$/;"	f	typeref:typename:void ***
stb__print	stb/deprecated/stb.h	/^static void stb__print(char *s)$/;"	f	typeref:typename:void
stb__print_one	stb/deprecated/stb.h	/^static void stb__print_one(void *handle, char *s, ptrdiff_t  len)$/;"	f	typeref:typename:void
stb__ptrpair	stb/deprecated/stb.h	/^} stb__ptrpair;$/;"	t	typeref:struct:__anonfe33527c0d08
stb__ptrpair_del	stb/deprecated/stb.h	/^static stb__ptrpair stb__ptrpair_del   = { (void *) 2, (void *) 2 };$/;"	v	typeref:typename:stb__ptrpair
stb__ptrpair_empty	stb/deprecated/stb.h	/^static stb__ptrpair stb__ptrpair_empty = { (void *) 1, (void *) 1 };$/;"	v	typeref:typename:stb__ptrpair
stb__qsort_strcmp	stb/deprecated/stb.h	/^int stb__qsort_strcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__qsort_strcmp	stb/tests/prerelease/stb_lib.h	/^int stb__qsort_strcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__qsort_stricmp	stb/deprecated/stb.h	/^int stb__qsort_stricmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__qsort_stricmp	stb/tests/prerelease/stb_lib.h	/^int stb__qsort_stricmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__rand_seed	stb/deprecated/stb.h	/^static unsigned int  stb__rand_seed=0;$/;"	v	typeref:typename:unsigned int
stb__rand_seed	stb/tests/prerelease/stb_lib.h	/^static unsigned long stb__rand_seed=0;$/;"	v	typeref:typename:unsigned long
stb__realloc	stb/deprecated/stb.h	/^   void * stb__realloc(void *p, size_t sz, char *file, int line)$/;"	f	typeref:typename:void *
stb__realloc_final	stb/deprecated/stb.h	/^   static void *stb__realloc_final(void *p, size_t sz, size_t old_sz)$/;"	f	typeref:typename:void *
stb__realloc_raw	stb/deprecated/stb.h	/^static void * stb__realloc_raw(void *p, int sz)$/;"	f	typeref:typename:void *
stb__rec_max	stb/deprecated/stb.h	/^int stb__rec_max=0x7fffffff;$/;"	v	typeref:typename:int
stb__rec_max	stb/tests/prerelease/stb_lib.h	/^int stb__rec_max=0x7fffffff;$/;"	v	typeref:typename:int
stb__record_fileline	stb/deprecated/stb.h	/^int  stb__record_fileline(const char *f, int n)$/;"	f	typeref:typename:int
stb__reg_parse	stb/deprecated/stb.h	/^static char *stb__reg_parse(stb_matcher *matcher, int start, char *regex, stb_uint16 *end)$/;"	f	typeref:typename:char *
stb__reg_parse_alt	stb/deprecated/stb.h	/^static char *stb__reg_parse_alt(stb_matcher *matcher, int start, char *regex, stb_uint16 *end)$/;"	f	typeref:typename:char *
stb__remove_alloc	stb/deprecated/stb.h	/^static void stb__remove_alloc(int n, char *file, int line)$/;"	f	typeref:typename:void
stb__renorm_decoder	stb/deprecated/stb.h	/^static void stb__renorm_decoder(stb_arith *a)$/;"	f	typeref:typename:void
stb__renorm_encoder	stb/deprecated/stb.h	/^static void stb__renorm_encoder(stb_arith *a)$/;"	f	typeref:typename:void
stb__running_adler	stb/deprecated/stb.h	/^static stb_uint32 stb__running_adler;$/;"	v	typeref:typename:stb_uint32
stb__sbgrow	stb/deprecated/stretchy_buffer.h	/^#define stb__sbgrow(/;"	d
stb__sbgrowf	stb/deprecated/stretchy_buffer.h	/^static void * stb__sbgrowf(void *arr, int increment, int itemsize)$/;"	f	typeref:typename:void *
stb__sbm	stb/deprecated/stretchy_buffer.h	/^#define stb__sbm(/;"	d
stb__sbmaybegrow	stb/deprecated/stretchy_buffer.h	/^#define stb__sbmaybegrow(/;"	d
stb__sbn	stb/deprecated/stretchy_buffer.h	/^#define stb__sbn(/;"	d
stb__sbneedgrow	stb/deprecated/stretchy_buffer.h	/^#define stb__sbneedgrow(/;"	d
stb__sbraw	stb/deprecated/stretchy_buffer.h	/^#define stb__sbraw(/;"	d
stb__set_span_for_page	stb/deprecated/stb.h	/^static void stb__set_span_for_page(stb__span *s)$/;"	f	typeref:typename:void
stb__setchunks	stb/deprecated/stb.h	/^#define stb__setchunks(/;"	d
stb__setparent	stb/deprecated/stb.h	/^#define stb__setparent(/;"	d
stb__sha1	stb/deprecated/stb.h	/^static void stb__sha1(stb_uchar *chunk, stb_uint h[5])$/;"	f	typeref:typename:void
stb__sha1	stb/tests/prerelease/stb_lib.h	/^static void stb__sha1(stb_uchar *chunk, stb_uint h[5])$/;"	f	typeref:typename:void
stb__showfile	stb/deprecated/stb.h	/^static int stb__dircount, stb__dircount_mask, stb__showfile;$/;"	v	typeref:typename:int
stb__signature	stb/deprecated/stb.h	/^static char stb__signature[12] = { 's', 'T', 'b', 'D', 'i', 'R', 't', 'R', 'e', 'E', '0', '2' };$/;"	v	typeref:typename:char[12]
stb__size_for_class	stb/deprecated/stb.h	/^static           int stb__size_for_class[STB__MAX_SIZE_CLASSES];$/;"	v	typeref:typename:int[]
stb__sizeclass	stb/deprecated/stb.h	/^static int stb__sizeclass(size_t sz)$/;"	f	typeref:typename:int
stb__slot	stb/deprecated/stb.h	/^} stb__slot;$/;"	t	typeref:struct:__anonfe33527c0c08
stb__slot_compare	stb/deprecated/stb.h	/^static int stb__slot_compare(const void *p, const void *q)$/;"	f	typeref:typename:int
stb__smemset	stb/deprecated/stb.h	/^#define stb__smemset(/;"	d
stb__sort_chunks	stb/deprecated/stb.h	/^static void stb__sort_chunks(stb__alloc *src)$/;"	f	typeref:typename:void
stb__source_path	stb/deprecated/stb.h	/^char *stb__source_path;$/;"	v	typeref:typename:char *
stb__span	stb/deprecated/stb.h	/^typedef struct stb__span$/;"	s
stb__span	stb/deprecated/stb.h	/^} stb__span;  \/\/ 24$/;"	t	typeref:struct:stb__span
stb__span_alloc	stb/deprecated/stb.h	/^static stb__span *stb__span_alloc(void)$/;"	f	typeref:typename:stb__span *
stb__span_end	stb/deprecated/stb.h	/^static stb__span *stb__span_first, *stb__span_end;$/;"	v	typeref:typename:stb__span *
stb__span_first	stb/deprecated/stb.h	/^static stb__span *stb__span_first, *stb__span_end;$/;"	v	typeref:typename:stb__span *
stb__span_for_page	stb/deprecated/stb.h	/^static stb__span **stb__span_for_page;$/;"	v	typeref:typename:stb__span **
stb__span_free	stb/deprecated/stb.h	/^static stb__span *stb__span_free=NULL;$/;"	v	typeref:typename:stb__span *
stb__spanlist	stb/deprecated/stb.h	/^static stb__span *stb__spanlist[512];$/;"	v	typeref:typename:stb__span * [512]
stb__spanlist_add	stb/deprecated/stb.h	/^static void stb__spanlist_add(int n, stb__span *s)$/;"	f	typeref:typename:void
stb__spanlist_unlink	stb/deprecated/stb.h	/^static void stb__spanlist_unlink(stb__span *s)$/;"	f	typeref:typename:void
stb__splitpath_raw	stb/deprecated/stb.h	/^static char *stb__splitpath_raw(char *buffer, char *path, int flag)$/;"	f	typeref:typename:char *
stb__splitpath_raw	stb/tests/prerelease/stb_lib.h	/^static char *stb__splitpath_raw(char *buffer, char *path, int flag)$/;"	f	typeref:typename:char *
stb__st_nptr	stb/deprecated/stb.h	/^typedef struct stb__st_nptr$/;"	s
stb__st_nptr_target	stb/deprecated/stb.h	/^typedef struct stb__st_nptr_target$/;"	s
stb__stat	stb/deprecated/stb.h	/^   #define stb__stat /;"	d
stb__stat	stb/tests/prerelease/stb_lib.h	/^   #define stb__stat /;"	d
stb__strchr	stb/stb_c_lexer.h	/^static const char *stb__strchr(const char *str, int ch)$/;"	f	typeref:typename:const char *
stb__strcmpoffset	stb/deprecated/stb.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__strcmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__strdup	stb/deprecated/stb.h	/^   char * stb__strdup(char *s, char *file, int line)$/;"	f	typeref:typename:char *
stb__string_constant	stb/deprecated/stb.h	/^char * stb__string_constant(char *file, int line, char *x)$/;"	f	typeref:typename:char *
stb__sync	stb/deprecated/stb.h	/^struct stb__sync$/;"	s
stb__sync_release	stb/deprecated/stb.h	/^void stb__sync_release(stb_sync s)$/;"	f	typeref:typename:void
stb__t1	stb/deprecated/stb.h	/^volatile float stb__t1=1, stb__t2;$/;"	v	typeref:typename:volatile float
stb__t2	stb/deprecated/stb.h	/^volatile float stb__t1=1, stb__t2;$/;"	v	typeref:typename:volatile float
stb__temp	stb/deprecated/stb.h	/^void * stb__temp(void *b, int b_sz, int want_sz)$/;"	f	typeref:typename:void *
stb__testsize16	stb/deprecated/stb.h	/^   typedef char stb__testsize16[sizeof(int16)==2];$/;"	t	typeref:typename:char[sizeof (int16)==2]
stb__testsize2_16	stb/deprecated/stb.h	/^typedef char stb__testsize2_16[sizeof(stb_uint16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint16)==2?1:-1]
stb__testsize2_16	stb/tests/prerelease/stb_lib.h	/^typedef char stb__testsize2_16[sizeof(stb_uint16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint16)==2?1:-1]
stb__testsize2_32	stb/deprecated/stb.h	/^typedef char stb__testsize2_32[sizeof(stb_uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint32)==4?1:-1]
stb__testsize2_32	stb/tests/prerelease/stb_lib.h	/^typedef char stb__testsize2_32[sizeof(stb_uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint32)==4?1:-1]
stb__testsize2_64	stb/deprecated/stb.h	/^typedef char stb__testsize2_64[sizeof(stb_uint64)==8 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint64)==8?1:-1]
stb__testsize2_64	stb/tests/prerelease/stb_lib.h	/^typedef char stb__testsize2_64[sizeof(stb_uint64)==8 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uint64)==8?1:-1]
stb__testsize2_ptr	stb/deprecated/stb.h	/^typedef char stb__testsize2_ptr[sizeof(char *) == 4];$/;"	t	typeref:typename:char[sizeof (char *)==4]
stb__testsize2_ptr	stb/deprecated/stb.h	/^typedef char stb__testsize2_ptr[sizeof(char *) == 8];$/;"	t	typeref:typename:char[sizeof (char *)==8]
stb__testsize2_uinta	stb/deprecated/stb.h	/^typedef char stb__testsize2_uinta[sizeof(stb_uinta)==sizeof(char*) ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stb_uinta)==sizeof (char *)?1:-1]
stb__testsize32	stb/deprecated/stb.h	/^   typedef char stb__testsize32[sizeof(int32)==4];$/;"	t	typeref:typename:char[sizeof (int32)==4]
stb__thread	stb/deprecated/stb.h	/^} stb__thread;$/;"	t	typeref:struct:__anonfe33527c2308
stb__thread_run	stb/deprecated/stb.h	/^static void stb__thread_run(void *t)$/;"	f	typeref:typename:void
stb__thread_sleep	stb/deprecated/stb.h	/^static void   stb__thread_sleep(int ms)          { Sleep(ms); }$/;"	f	typeref:typename:void
stb__thread_workloop	stb/deprecated/stb.h	/^static void *stb__thread_workloop(void *p)$/;"	f	typeref:typename:void *
stb__threadmutex	stb/deprecated/stb.h	/^static stb_mutex stb__threadmutex, stb__workmutex;$/;"	v	typeref:typename:stb_mutex
stb__threadmutex_init	stb/deprecated/stb.h	/^static void stb__threadmutex_init(void)$/;"	f	typeref:typename:void
stb__threadq_add_raw	stb/deprecated/stb.h	/^int stb__threadq_add_raw(stb_threadqueue *tq2, void *input, int block)$/;"	f	typeref:typename:int
stb__threadq_get_raw	stb/deprecated/stb.h	/^int stb__threadq_get_raw(stb_threadqueue *tq2, void *output, int block)$/;"	f	typeref:typename:int
stb__threadq_grow	stb/deprecated/stb.h	/^int stb__threadq_grow(volatile stb_threadqueue *tq)$/;"	f	typeref:typename:int
stb__threadqueue	stb/deprecated/stb.h	/^struct stb__threadqueue$/;"	s
stb__to_utf8	stb/deprecated/stb.h	/^char *stb__to_utf8(const stb__wchar *str)$/;"	f	typeref:typename:char *
stb__to_utf8	stb/tests/prerelease/stb_lib.h	/^char *stb__to_utf8(stb__wchar *str)$/;"	f	typeref:typename:char *
stb__tq_wrap	stb/deprecated/stb.h	/^static int stb__tq_wrap(volatile stb_threadqueue *z, int p)$/;"	f	typeref:typename:int
stb__try_chunk	stb/deprecated/stb.h	/^static void * stb__try_chunk(stb__chunk *c, int size, int align, int pre_align)$/;"	f	typeref:typename:void *
stb__ucharcmp	stb/deprecated/stb.h	/^int stb__ucharcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__ucharcmp	stb/tests/prerelease/stb_lib.h	/^int stb__ucharcmp(const void *a, const void *b)$/;"	f	typeref:typename:int
stb__ucharcmpoffset	stb/deprecated/stb.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__ucharcmpoffset	stb/tests/prerelease/stb_lib.h	/^static int stb__intcmpoffset, stb__ucharcmpoffset, stb__strcmpoffset;$/;"	v	typeref:typename:int
stb__update_page_range	stb/deprecated/stb.h	/^static void stb__update_page_range(int first, int last)$/;"	f	typeref:typename:void
stb__varlen_xform	stb/deprecated/stb.h	/^#define stb__varlen_xform(/;"	d
stb__wait	stb/deprecated/stb.h	/^#define stb__wait(/;"	d
stb__wait	stb/deprecated/stb.h	/^static void stb__wait(int n)$/;"	f	typeref:typename:void
stb__wchar	stb/deprecated/stb.h	/^typedef unsigned short stb__wchar;$/;"	t	typeref:typename:unsigned short
stb__wchar	stb/tests/prerelease/stb_lib.h	/^typedef unsigned short stb__wchar;$/;"	t	typeref:typename:unsigned short
stb__wild_parse	stb/deprecated/stb.h	/^static char *stb__wild_parse(stb_matcher *matcher, int start, char *str, stb_uint16 *end)$/;"	f	typeref:typename:char *
stb__wildmatch_raw	stb/deprecated/stb.h	/^int stb__wildmatch_raw(char *expr, char *candidate, int search, int insensitive)$/;"	f	typeref:typename:int
stb__wildmatch_raw	stb/tests/prerelease/stb_lib.h	/^int stb__wildmatch_raw(char *expr, char *candidate, int search, int insensitive)$/;"	f	typeref:typename:int
stb__wildmatch_raw2	stb/deprecated/stb.h	/^int stb__wildmatch_raw2(char *expr, char *candidate, int search, int insensitive)$/;"	f	typeref:typename:int
stb__wildmatch_raw2	stb/tests/prerelease/stb_lib.h	/^int stb__wildmatch_raw2(char *expr, char *candidate, int search, int insensitive)$/;"	f	typeref:typename:int
stb__window	stb/deprecated/stb.h	/^static int stb__window = 0x40000; \/\/ 256K$/;"	v	typeref:typename:int
stb__windows	stb/deprecated/stb.h	/^   #define stb__windows(/;"	d
stb__windows	stb/tests/prerelease/stb_lib.h	/^   #define stb__windows(/;"	d
stb__work_global	stb/deprecated/stb.h	/^static stb_workqueue *stb__work_global;$/;"	v	typeref:typename:stb_workqueue *
stb__work_maxitems	stb/deprecated/stb.h	/^static int stb__work_maxitems = STB_THREADQUEUE_DYNAMIC;$/;"	v	typeref:typename:int
stb__work_raw	stb/deprecated/stb.h	/^static int stb__work_raw(stb_workqueue *q, stb_thread_func f, void *d, volatile void **return_co/;"	f	typeref:typename:int
stb__workinfo	stb/deprecated/stb.h	/^} stb__workinfo;$/;"	t	typeref:struct:__anonfe33527c2408
stb__workmutex	stb/deprecated/stb.h	/^static stb_mutex stb__threadmutex, stb__workmutex;$/;"	v	typeref:typename:stb_mutex
stb__workq_numthreads	stb/deprecated/stb.h	/^static void stb__workq_numthreads(stb_workqueue *q, int n)$/;"	f	typeref:typename:void
stb__workqueue	stb/deprecated/stb.h	/^struct stb__workqueue$/;"	s
stb__write	stb/deprecated/stb.h	/^static void stb__write(unsigned char v)$/;"	f	typeref:typename:void
stb_adler32	stb/deprecated/stb.h	/^stb_uint stb_adler32(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)$/;"	f	typeref:typename:stb_uint
stb_adler32	stb/tests/prerelease/stb_lib.h	/^stb_uint stb_adler32(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)$/;"	f	typeref:typename:stb_uint
stb_adler32_old	stb/tests/stb.c	/^stb_uint stb_adler32_old(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)$/;"	f	typeref:typename:stb_uint
stb_alloc_alignment	stb/deprecated/stb.h	/^int stb_alloc_alignment   = -16;$/;"	v	typeref:typename:int
stb_alloc_chunk_size	stb/deprecated/stb.h	/^int stb_alloc_chunk_size  = 65536;$/;"	v	typeref:typename:int
stb_alloc_count_alloc	stb/deprecated/stb.h	/^int stb_alloc_count_alloc = 0;$/;"	v	typeref:typename:int
stb_alloc_count_free	stb/deprecated/stb.h	/^int stb_alloc_count_free  = 0;$/;"	v	typeref:typename:int
stb_append_to_file	stb/deprecated/stb.h	/^void stb_append_to_file(char *filename, char *s, ...)$/;"	f	typeref:typename:void
stb_arith	stb/deprecated/stb.h	/^} stb_arith;$/;"	t	typeref:struct:__anonfe33527c2008
stb_arith_decode_advance	stb/deprecated/stb.h	/^void stb_arith_decode_advance(stb_arith *a, unsigned int totalfreq, unsigned int freq, unsigned /;"	f	typeref:typename:void
stb_arith_decode_advance_log2	stb/deprecated/stb.h	/^void stb_arith_decode_advance_log2(stb_arith *a, unsigned int totalfreq2, unsigned int freq, uns/;"	f	typeref:typename:void
stb_arith_decode_close	stb/deprecated/stb.h	/^stbfile *stb_arith_decode_close(stb_arith *a)$/;"	f	typeref:typename:stbfile *
stb_arith_decode_value	stb/deprecated/stb.h	/^unsigned int stb_arith_decode_value(stb_arith *a, unsigned int totalfreq)$/;"	f	typeref:typename:unsigned int
stb_arith_decode_value_log2	stb/deprecated/stb.h	/^unsigned int stb_arith_decode_value_log2(stb_arith *a, unsigned int totalfreq2)$/;"	f	typeref:typename:unsigned int
stb_arith_encode	stb/deprecated/stb.h	/^void stb_arith_encode(stb_arith *a, unsigned int totalfreq, unsigned int freq, unsigned int cumf/;"	f	typeref:typename:void
stb_arith_encode_close	stb/deprecated/stb.h	/^stbfile *stb_arith_encode_close(stb_arith *a)$/;"	f	typeref:typename:stbfile *
stb_arith_encode_log2	stb/deprecated/stb.h	/^void stb_arith_encode_log2(stb_arith *a, unsigned int totalfreq2, unsigned int freq, unsigned in/;"	f	typeref:typename:void
stb_arith_init_encode	stb/deprecated/stb.h	/^void stb_arith_init_encode(stb_arith *a, stbfile *out)$/;"	f	typeref:typename:void
stb_arith_symstate	stb/deprecated/stb.h	/^} stb_arith_symstate;$/;"	t	typeref:struct:__anonfe33527c2208
stb_arith_symstate_item	stb/deprecated/stb.h	/^} stb_arith_symstate_item;$/;"	t	typeref:struct:__anonfe33527c2108
stb_arr__addn	stb/deprecated/stb.h	/^#define stb_arr__addn(/;"	d
stb_arr__addn	stb/tests/prerelease/stb_lib.h	/^#define stb_arr__addn(/;"	d
stb_arr__grow	stb/deprecated/stb.h	/^#define stb_arr__grow(/;"	d
stb_arr__grow	stb/tests/prerelease/stb_lib.h	/^#define stb_arr__grow(/;"	d
stb_arr_add	stb/deprecated/stb.h	/^#define stb_arr_add(/;"	d
stb_arr_add	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_add(/;"	d
stb_arr_addn	stb/deprecated/stb.h	/^#define stb_arr_addn(/;"	d
stb_arr_addn	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_addn(/;"	d
stb_arr_atleast	stb/deprecated/stb.h	/^#define stb_arr_atleast(/;"	d
stb_arr_atleast	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_atleast(/;"	d
stb_arr_check	stb/deprecated/stb.h	/^#define stb_arr_check(/;"	d
stb_arr_check	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_check(/;"	d
stb_arr_check2	stb/deprecated/stb.h	/^#define stb_arr_check2(/;"	d
stb_arr_check2	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_check2(/;"	d
stb_arr_copy	stb/deprecated/stb.h	/^#define stb_arr_copy(/;"	d
stb_arr_copy	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_copy(/;"	d
stb_arr_delete	stb/deprecated/stb.h	/^#define stb_arr_delete(/;"	d
stb_arr_delete	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_delete(/;"	d
stb_arr_deleten	stb/deprecated/stb.h	/^#define stb_arr_deleten(/;"	d
stb_arr_deleten	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_deleten(/;"	d
stb_arr_empty	stb/deprecated/stb.h	/^#define stb_arr_empty(/;"	d
stb_arr_empty	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_empty(/;"	d
stb_arr_end	stb/deprecated/stb.h	/^#define stb_arr_end(/;"	d
stb_arr_end	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_end(/;"	d
stb_arr_fastdelete	stb/deprecated/stb.h	/^#define stb_arr_fastdelete(/;"	d
stb_arr_fastdelete	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_fastdelete(/;"	d
stb_arr_for	stb/deprecated/stb.h	/^#define stb_arr_for(/;"	d
stb_arr_for	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_for(/;"	d
stb_arr_free	stb/deprecated/stb.h	/^#define stb_arr_free(/;"	d
stb_arr_free	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_free(/;"	d
stb_arr_free_	stb/deprecated/stb.h	/^void stb_arr_free_(void **pp)$/;"	f	typeref:typename:void
stb_arr_free_	stb/tests/prerelease/stb_lib.h	/^void stb_arr_free_(void **pp)$/;"	f	typeref:typename:void
stb_arr_insert	stb/deprecated/stb.h	/^#define stb_arr_insert(/;"	d
stb_arr_insert	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_insert(/;"	d
stb_arr_insertn	stb/deprecated/stb.h	/^#define stb_arr_insertn(/;"	d
stb_arr_insertn	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_insertn(/;"	d
stb_arr_last	stb/deprecated/stb.h	/^#define stb_arr_last(/;"	d
stb_arr_last	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_last(/;"	d
stb_arr_lastn	stb/deprecated/stb.h	/^#define stb_arr_lastn(/;"	d
stb_arr_lastn	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_lastn(/;"	d
stb_arr_len	stb/deprecated/stb.h	/^#define stb_arr_len(/;"	d
stb_arr_len	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_len(/;"	d
stb_arr_len2	stb/deprecated/stb.h	/^#define stb_arr_len2(/;"	d
stb_arr_len2	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_len2(/;"	d
stb_arr_makevalid	stb/deprecated/stb.h	/^#define stb_arr_makevalid(/;"	d
stb_arr_makevalid	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_makevalid(/;"	d
stb_arr_malloc	stb/deprecated/stb.h	/^void stb_arr_malloc(void **target, void *context)$/;"	f	typeref:typename:void
stb_arr_malloc	stb/tests/prerelease/stb_lib.h	/^void stb_arr_malloc(void **target, void *context)$/;"	f	typeref:typename:void
stb_arr_malloc_parent	stb/deprecated/stb.h	/^void *stb_arr_malloc_parent(void *p)$/;"	f	typeref:typename:void *
stb_arr_pop	stb/deprecated/stb.h	/^#define stb_arr_pop(/;"	d
stb_arr_pop	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_pop(/;"	d
stb_arr_push	stb/deprecated/stb.h	/^#define stb_arr_push(/;"	d
stb_arr_push	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_push(/;"	d
stb_arr_setlen	stb/deprecated/stb.h	/^#define stb_arr_setlen(/;"	d
stb_arr_setlen	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_setlen(/;"	d
stb_arr_setsize	stb/deprecated/stb.h	/^#define stb_arr_setsize(/;"	d
stb_arr_setsize	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_setsize(/;"	d
stb_arr_signature	stb/deprecated/stb.h	/^#define stb_arr_signature /;"	d
stb_arr_signature	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_signature /;"	d
stb_arr_storage	stb/deprecated/stb.h	/^#define stb_arr_storage(/;"	d
stb_arr_storage	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_storage(/;"	d
stb_arr_valid	stb/deprecated/stb.h	/^#define stb_arr_valid(/;"	d
stb_arr_valid	stb/tests/prerelease/stb_lib.h	/^#define stb_arr_valid(/;"	d
stb_array_block_alloc	stb/deprecated/stb.h	/^void **stb_array_block_alloc(int count, int blocksize)$/;"	f	typeref:typename:void **
stb_arrcount	stb/deprecated/stb.h	/^#define stb_arrcount(/;"	d
stb_arrcount	stb/tests/prerelease/stb_lib.h	/^#define stb_arrcount(/;"	d
stb_arrcurmax	stb/deprecated/stb.h	/^#define stb_arrcurmax(/;"	d
stb_arrcurmax	stb/tests/prerelease/stb_lib.h	/^#define stb_arrcurmax(/;"	d
stb_arrcurmax2	stb/deprecated/stb.h	/^#define stb_arrcurmax2(/;"	d
stb_arrcurmax2	stb/tests/prerelease/stb_lib.h	/^#define stb_arrcurmax2(/;"	d
stb_arrhead	stb/deprecated/stb.h	/^#define stb_arrhead(/;"	d
stb_arrhead	stb/tests/prerelease/stb_lib.h	/^#define stb_arrhead(/;"	d
stb_arrhead2	stb/deprecated/stb.h	/^#define stb_arrhead2(/;"	d
stb_arrhead2	stb/tests/prerelease/stb_lib.h	/^#define stb_arrhead2(/;"	d
stb_backpatch	stb/deprecated/stb.h	/^void stb_backpatch(stbfile *f, unsigned int tell, void *buffer, unsigned int len)$/;"	f	typeref:typename:void
stb_barrier	stb/deprecated/stb.h	/^void stb_barrier(void)$/;"	f	typeref:typename:void
stb_bgio_read	stb/deprecated/stb.h	/^int stb_bgio_read(char *filename, int offset, int len, stb_uchar **result, int *olen)$/;"	f	typeref:typename:int
stb_bgio_read_to	stb/deprecated/stb.h	/^int stb_bgio_read_to(char *filename, int offset, int len, stb_uchar *buffer, int *olen)$/;"	f	typeref:typename:int
stb_bgio_readf	stb/deprecated/stb.h	/^int stb_bgio_readf(FILE *f, int offset, int len, stb_uchar **result, int *olen)$/;"	f	typeref:typename:int
stb_bgio_readf_to	stb/deprecated/stb.h	/^int stb_bgio_readf_to(FILE *f, int offset, int len, stb_uchar *buffer, int *olen)$/;"	f	typeref:typename:int
stb_bgio_stat	stb/deprecated/stb.h	/^STB_EXTERN int stb_bgio_stat    (char *filename, stb_bgstat *result)$/;"	f	typeref:typename:STB_EXTERN int
stb_bgstat	stb/deprecated/stb.h	/^} stb_bgstat;$/;"	t	typeref:struct:__anonfe33527c2508
stb_big16	stb/deprecated/stb.h	/^#define stb_big16(/;"	d
stb_big32	stb/deprecated/stb.h	/^#define stb_big32(/;"	d
stb_bitcount	stb/deprecated/stb.h	/^int stb_bitcount(unsigned int a)$/;"	f	typeref:typename:int
stb_bitreverse	stb/deprecated/stb.h	/^unsigned int stb_bitreverse(unsigned int n)$/;"	f	typeref:typename:unsigned int
stb_bitreverse8	stb/deprecated/stb.h	/^unsigned int stb_bitreverse8(unsigned char n)$/;"	f	typeref:typename:unsigned int
stb_bitset	stb/deprecated/stb.h	/^typedef stb_uint32 stb_bitset;$/;"	t	typeref:typename:stb_uint32
stb_bitset_clearall	stb/deprecated/stb.h	/^#define stb_bitset_clearall(/;"	d
stb_bitset_clearbit	stb/deprecated/stb.h	/^#define stb_bitset_clearbit(/;"	d
stb_bitset_disjoint	stb/deprecated/stb.h	/^int stb_bitset_disjoint(stb_bitset *p0, stb_bitset *p1, int len)$/;"	f	typeref:typename:int
stb_bitset_disjoint_0	stb/deprecated/stb.h	/^int stb_bitset_disjoint_0(stb_bitset *p0, stb_bitset *p1, int len)$/;"	f	typeref:typename:int
stb_bitset_eq	stb/deprecated/stb.h	/^int stb_bitset_eq(stb_bitset *p0, stb_bitset *p1, int len)$/;"	f	typeref:typename:int
stb_bitset_getlist	stb/deprecated/stb.h	/^int *stb_bitset_getlist(stb_bitset *out, int start, int end)$/;"	f	typeref:typename:int *
stb_bitset_new	stb/deprecated/stb.h	/^stb_bitset *stb_bitset_new(int value, int len)$/;"	f	typeref:typename:stb_bitset *
stb_bitset_setall	stb/deprecated/stb.h	/^#define stb_bitset_setall(/;"	d
stb_bitset_setbit	stb/deprecated/stb.h	/^#define stb_bitset_setbit(/;"	d
stb_bitset_subset	stb/deprecated/stb.h	/^int stb_bitset_subset(stb_bitset *bigger, stb_bitset *smaller, int len)$/;"	f	typeref:typename:int
stb_bitset_testbit	stb/deprecated/stb.h	/^#define stb_bitset_testbit(/;"	d
stb_bitset_union	stb/deprecated/stb.h	/^stb_bitset *stb_bitset_union(stb_bitset *p0, stb_bitset *p1, int len)$/;"	f	typeref:typename:stb_bitset *
stb_bitset_unioneq_changed	stb/deprecated/stb.h	/^int stb_bitset_unioneq_changed(stb_bitset *p0, stb_bitset *p1, int len)$/;"	f	typeref:typename:int
stb_box_face_vertex_axis_side	stb/deprecated/stb.h	/^int stb_box_face_vertex_axis_side(int face_number, int vertex_number, int axis)$/;"	f	typeref:typename:int
stb_bst	stb/deprecated/stb.h	/^#define stb_bst(/;"	d
stb_bst_base	stb/deprecated/stb.h	/^#define stb_bst_base(/;"	d
stb_bst_fields	stb/deprecated/stb.h	/^#define stb_bst_fields(/;"	d
stb_bst_fields_parent	stb/deprecated/stb.h	/^#define stb_bst_fields_parent(/;"	d
stb_bst_find	stb/deprecated/stb.h	/^#define stb_bst_find(/;"	d
stb_bst_parent	stb/deprecated/stb.h	/^#define stb_bst_parent(/;"	d
stb_bst_raw	stb/deprecated/stb.h	/^#define stb_bst_raw(/;"	d
stb_bucket_create2	stb/deprecated/stb.h	/^static stb_ps_bucket *stb_bucket_create2(void *v0, void *v1)$/;"	f	typeref:typename:stb_ps_bucket *
stb_bucket_create3	stb/deprecated/stb.h	/^static stb_ps_bucket * stb_bucket_create3(void **v)$/;"	f	typeref:typename:stb_ps_bucket *
stb_bucket_free	stb/deprecated/stb.h	/^static void stb_bucket_free(stb_ps_bucket *b)$/;"	f	typeref:typename:void
stb_c_lexer_get_location	stb/stb_c_lexer.h	/^void stb_c_lexer_get_location(const stb_lexer *lexer, const char *where, stb_lex_location *loc)$/;"	f	typeref:typename:void
stb_c_lexer_get_token	stb/stb_c_lexer.h	/^int stb_c_lexer_get_token(stb_lexer *lexer)$/;"	f	typeref:typename:int
stb_c_lexer_init	stb/stb_c_lexer.h	/^void stb_c_lexer_init(stb_lexer *lexer, const char *input_stream, const char *input_stream_end, /;"	f	typeref:typename:void
stb_cfg	stb/deprecated/stb.h	/^typedef struct stb_cfg_st stb_cfg;$/;"	t	typeref:struct:stb_cfg_st
stb_cfg_close	stb/deprecated/stb.h	/^void stb_cfg_close(stb_cfg *z)$/;"	f	typeref:typename:void
stb_cfg_delete	stb/deprecated/stb.h	/^int stb_cfg_delete(stb_cfg *z, char *key)$/;"	f	typeref:typename:int
stb_cfg_open	stb/deprecated/stb.h	/^STB_EXTERN stb_cfg * stb_cfg_open(char *config, const char *mode)$/;"	f	typeref:typename:STB_EXTERN stb_cfg *
stb_cfg_read	stb/deprecated/stb.h	/^int stb_cfg_read(stb_cfg *z, char *key, void *value, int len)$/;"	f	typeref:typename:int
stb_cfg_read_string	stb/deprecated/stb.h	/^int stb_cfg_read_string(stb_cfg *z, char *key, char *value, int len)$/;"	f	typeref:typename:int
stb_cfg_set_directory	stb/deprecated/stb.h	/^STB_EXTERN void stb_cfg_set_directory(char *dir)$/;"	f	typeref:typename:STB_EXTERN void
stb_cfg_st	stb/deprecated/stb.h	/^struct stb_cfg_st$/;"	s
stb_cfg_write	stb/deprecated/stb.h	/^void stb_cfg_write(stb_cfg *z, char *key, void *value, int len)$/;"	f	typeref:typename:void
stb_cfg_write_string	stb/deprecated/stb.h	/^void stb_cfg_write_string(stb_cfg *z, char *key, char *value)$/;"	f	typeref:typename:void
stb_charcmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_charcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_clamp	stb/deprecated/stb.h	/^#define stb_clamp(/;"	d
stb_close	stb/deprecated/stb.h	/^void stb_close(stbfile *f)$/;"	f	typeref:typename:void
stb_compare_func	stb/deprecated/stb.h	/^typedef int (*stb_compare_func)(void *a, void *b);$/;"	t	typeref:typename:int (*)(void * a,void * b)
stb_compress	stb/deprecated/stb.h	/^stb_uint stb_compress(stb_uchar *out, stb_uchar *input, stb_uint length)$/;"	f	typeref:typename:stb_uint
stb_compress_bc4_block	stb/stb_dxt.h	/^void stb_compress_bc4_block(unsigned char *dest, const unsigned char *src)$/;"	f	typeref:typename:void
stb_compress_bc5_block	stb/stb_dxt.h	/^void stb_compress_bc5_block(unsigned char *dest, const unsigned char *src)$/;"	f	typeref:typename:void
stb_compress_chunk	stb/deprecated/stb.h	/^static int stb_compress_chunk(stb_uchar *history,$/;"	f	typeref:typename:int
stb_compress_dxt_block	stb/stb_dxt.h	/^void stb_compress_dxt_block(unsigned char *dest, const unsigned char *src, int alpha, int mode)$/;"	f	typeref:typename:void
stb_compress_hashsize	stb/deprecated/stb.h	/^void stb_compress_hashsize(unsigned int y)$/;"	f	typeref:typename:void
stb_compress_inner	stb/deprecated/stb.h	/^static int stb_compress_inner(stb_uchar *input, stb_uint length)$/;"	f	typeref:typename:int
stb_compress_intofile	stb/deprecated/stb.h	/^int stb_compress_intofile(FILE *f, char *input, unsigned int length)$/;"	f	typeref:typename:int
stb_compress_stream_end	stb/deprecated/stb.h	/^void stb_compress_stream_end(int close)$/;"	f	typeref:typename:void
stb_compress_stream_start	stb/deprecated/stb.h	/^int stb_compress_stream_start(FILE *f)$/;"	f	typeref:typename:int
stb_compress_streaming_end	stb/deprecated/stb.h	/^static int stb_compress_streaming_end(void)$/;"	f	typeref:typename:int
stb_compress_streaming_start	stb/deprecated/stb.h	/^static int stb_compress_streaming_start(void)$/;"	f	typeref:typename:int
stb_compress_tofile	stb/deprecated/stb.h	/^int stb_compress_tofile(char *filename, char *input, unsigned int length)$/;"	f	typeref:typename:int
stb_compress_window	stb/deprecated/stb.h	/^void stb_compress_window(int z)$/;"	f	typeref:typename:void
stb_copy	stb/deprecated/stb.h	/^void *stb_copy(void *p, size_t sz)$/;"	f	typeref:typename:void *
stb_copyfile	stb/deprecated/stb.h	/^int stb_copyfile(char *src, char *dest)$/;"	f	typeref:typename:int
stb_copyfile	stb/tests/prerelease/stb_lib.h	/^int stb_copyfile(char *src, char *dest)$/;"	f	typeref:typename:int
stb_crc32	stb/deprecated/stb.h	/^stb_uint stb_crc32(unsigned char *buffer, stb_uint len)$/;"	f	typeref:typename:stb_uint
stb_crc32	stb/tests/prerelease/stb_lib.h	/^stb_uint stb_crc32(unsigned char *buffer, stb_uint len)$/;"	f	typeref:typename:stb_uint
stb_crc32_block	stb/deprecated/stb.h	/^stb_uint stb_crc32_block(stb_uint crc, unsigned char *buffer, stb_uint len)$/;"	f	typeref:typename:stb_uint
stb_crc32_block	stb/tests/prerelease/stb_lib.h	/^stb_uint stb_crc32_block(stb_uint crc, unsigned char *buffer, stb_uint len)$/;"	f	typeref:typename:stb_uint
stb_create_thread	stb/deprecated/stb.h	/^stb_thread stb_create_thread(stb_thread_func f, void *d)$/;"	f	typeref:typename:stb_thread
stb_create_thread2	stb/deprecated/stb.h	/^stb_thread stb_create_thread2(stb_thread_func f, void *d, volatile void **return_code, stb_semap/;"	f	typeref:typename:stb_thread
stb_create_thread_raw	stb/deprecated/stb.h	/^static stb_thread stb_create_thread_raw(stb_thread_func f, void *d, volatile void **return_code,/;"	f	typeref:typename:stb_thread
stb_cubic_bezier_1d	stb/deprecated/stb.h	/^float stb_cubic_bezier_1d(float t, float p0, float p1, float p2, float p3)$/;"	f	typeref:typename:float
stb_declare_hash	stb/deprecated/stb.h	/^#define stb_declare_hash(/;"	d
stb_declare_hash	stb/tests/prerelease/stb_lib.h	/^#define stb_declare_hash(/;"	d
stb_declare_sort	stb/deprecated/stb.h	/^#define stb_declare_sort(/;"	d
stb_decompress	stb/deprecated/stb.h	/^stb_uint stb_decompress(stb_uchar *output, stb_uchar *i, stb_uint length)$/;"	f	typeref:typename:stb_uint
stb_decompress_fromfile	stb/deprecated/stb.h	/^char *stb_decompress_fromfile(char *filename, unsigned int *len)$/;"	f	typeref:typename:char *
stb_decompress_length	stb/deprecated/stb.h	/^stb_uint stb_decompress_length(stb_uchar *input)$/;"	f	typeref:typename:stb_uint
stb_decompress_token	stb/deprecated/stb.h	/^static stb_uchar *stb_decompress_token(stb_uchar *i)$/;"	f	typeref:typename:stb_uchar *
stb_define_hash	stb/deprecated/stb.h	/^#define stb_define_hash(/;"	d
stb_define_hash	stb/tests/prerelease/stb_lib.h	/^#define stb_define_hash(/;"	d
stb_define_hash_base	stb/deprecated/stb.h	/^#define stb_define_hash_base(/;"	d
stb_define_hash_base	stb/tests/prerelease/stb_lib.h	/^#define stb_define_hash_base(/;"	d
stb_define_hash_vnull	stb/deprecated/stb.h	/^#define stb_define_hash_vnull(/;"	d
stb_define_hash_vnull	stb/tests/prerelease/stb_lib.h	/^#define stb_define_hash_vnull(/;"	d
stb_define_sort	stb/deprecated/stb.h	/^#define stb_define_sort(/;"	d
stb_define_sort_static	stb/deprecated/stb.h	/^#define stb_define_sort_static(/;"	d
stb_delete_directory_recursive	stb/deprecated/stb.h	/^void stb_delete_directory_recursive(char *dir)$/;"	f	typeref:typename:void
stb_delete_directory_recursive	stb/tests/prerelease/stb_lib.h	/^void stb_delete_directory_recursive(char *dir)$/;"	f	typeref:typename:void
stb_destroy_thread	stb/deprecated/stb.h	/^void          stb_destroy_thread(stb_thread t)   { TerminateThread(t,0); }$/;"	f	typeref:typename:void
stb_dfa	stb/deprecated/stb.h	/^} stb_dfa;$/;"	t	typeref:struct:__anonfe33527c1b08
stb_dir_is_prefix	stb/deprecated/stb.h	/^int stb_dir_is_prefix(char *dir, int dirlen, char *file)$/;"	f	typeref:typename:int
stb_dirtree	stb/deprecated/stb.h	/^} stb_dirtree;$/;"	t	typeref:struct:__anonfe33527c1508
stb_dirtree2	stb/deprecated/stb.h	/^struct stb_dirtree2$/;"	s
stb_dirtree2	stb/deprecated/stb.h	/^typedef struct stb_dirtree2 stb_dirtree2;$/;"	t	typeref:struct:stb_dirtree2
stb_dirtree2_from_files	stb/deprecated/stb.h	/^stb_dirtree2 *stb_dirtree2_from_files(char **filelist, int count)$/;"	f	typeref:typename:stb_dirtree2 *
stb_dirtree2_from_files_relative	stb/deprecated/stb.h	/^stb_dirtree2 *stb_dirtree2_from_files_relative(char *src, char **filelist, int count)$/;"	f	typeref:typename:stb_dirtree2 *
stb_dirtree_db_add_dir	stb/deprecated/stb.h	/^void stb_dirtree_db_add_dir(stb_dirtree *active, char *path, time_t last)$/;"	f	typeref:typename:void
stb_dirtree_db_add_file	stb/deprecated/stb.h	/^void stb_dirtree_db_add_file(stb_dirtree *active, char *name, int dir, stb_int64 size, time_t la/;"	f	typeref:typename:void
stb_dirtree_db_read	stb/deprecated/stb.h	/^void stb_dirtree_db_read(stb_dirtree *target, char *filename, char *dir)$/;"	f	typeref:typename:void
stb_dirtree_db_write	stb/deprecated/stb.h	/^void stb_dirtree_db_write(stb_dirtree *target, char *filename, char *dir)$/;"	f	typeref:typename:void
stb_dirtree_dir	stb/deprecated/stb.h	/^} stb_dirtree_dir;$/;"	t	typeref:struct:__anonfe33527c1308
stb_dirtree_file	stb/deprecated/stb.h	/^} stb_dirtree_file;$/;"	t	typeref:struct:__anonfe33527c1408
stb_dirtree_free	stb/deprecated/stb.h	/^void stb_dirtree_free(stb_dirtree *d)$/;"	f	typeref:typename:void
stb_dirtree_get	stb/deprecated/stb.h	/^stb_dirtree *stb_dirtree_get(char *dir)$/;"	f	typeref:typename:stb_dirtree *
stb_dirtree_get_dir	stb/deprecated/stb.h	/^stb_dirtree *stb_dirtree_get_dir(char *dir, char *cache_dir)$/;"	f	typeref:typename:stb_dirtree *
stb_dirtree_get_with_file	stb/deprecated/stb.h	/^stb_dirtree *stb_dirtree_get_with_file(char *dir, char *cache_file)$/;"	f	typeref:typename:stb_dirtree *
stb_div_eucl	stb/stb_divide.h	/^int stb_div_eucl(int v1, int v2)$/;"	f	typeref:typename:int
stb_div_floor	stb/stb_divide.h	/^int stb_div_floor(int v1, int v2)$/;"	f	typeref:typename:int
stb_div_trunc	stb/stb_divide.h	/^int stb_div_trunc(int v1, int v2)$/;"	f	typeref:typename:int
stb_doublecmp	stb/deprecated/stb.h	/^int (*stb_doublecmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_doublecmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_doublecmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_dupe	stb/deprecated/stb.h	/^struct stb_dupe$/;"	s
stb_dupe	stb/deprecated/stb.h	/^typedef struct stb_dupe stb_dupe;$/;"	t	typeref:struct:stb_dupe
stb_dupe_add	stb/deprecated/stb.h	/^void stb_dupe_add(stb_dupe *sd, void *item)$/;"	f	typeref:typename:void
stb_dupe_create	stb/deprecated/stb.h	/^stb_dupe *stb_dupe_create(stb_hash_func hash, stb_compare_func eq, int size,$/;"	f	typeref:typename:stb_dupe *
stb_dupe_finish	stb/deprecated/stb.h	/^void stb_dupe_finish(stb_dupe *sd)$/;"	f	typeref:typename:void
stb_dupe_free	stb/deprecated/stb.h	/^void stb_dupe_free(stb_dupe *sd)$/;"	f	typeref:typename:void
stb_dupe_numsets	stb/deprecated/stb.h	/^int stb_dupe_numsets(stb_dupe *sd)$/;"	f	typeref:typename:int
stb_dupe_set	stb/deprecated/stb.h	/^void **stb_dupe_set(stb_dupe *sd, int num)$/;"	f	typeref:typename:void **
stb_dupe_set_count	stb/deprecated/stb.h	/^int stb_dupe_set_count(stb_dupe *sd, int num)$/;"	f	typeref:typename:int
stb_duplower	stb/deprecated/stb.h	/^char *stb_duplower(char *s)$/;"	f	typeref:typename:char *
stb_duplower	stb/tests/prerelease/stb_lib.h	/^char *stb_duplower(char *s)$/;"	f	typeref:typename:char *
stb_dupreplace	stb/deprecated/stb.h	/^char *stb_dupreplace(char *src, char *find, char *replace)$/;"	f	typeref:typename:char *
stb_dupreplace	stb/tests/prerelease/stb_lib.h	/^char *stb_dupreplace(char *src, char *find, char *replace)$/;"	f	typeref:typename:char *
stb_easy_font_charinfo	stb/stb_easy_font.h	/^} stb_easy_font_charinfo[96] = {$/;"	v	typeref:struct:stb_easy_font_info_struct[96]
stb_easy_font_color	stb/stb_easy_font.h	/^} stb_easy_font_color;$/;"	t	typeref:struct:__anon673bf3e30108
stb_easy_font_draw_segs	stb/stb_easy_font.h	/^static int stb_easy_font_draw_segs(float x, float y, unsigned char *segs, int num_segs, int vert/;"	f	typeref:typename:int
stb_easy_font_height	stb/stb_easy_font.h	/^static int stb_easy_font_height(char *text)$/;"	f	typeref:typename:int
stb_easy_font_hseg	stb/stb_easy_font.h	/^static unsigned char stb_easy_font_hseg[214] = {$/;"	v	typeref:typename:unsigned char[214]
stb_easy_font_info_struct	stb/stb_easy_font.h	/^static struct stb_easy_font_info_struct {$/;"	s
stb_easy_font_print	stb/stb_easy_font.h	/^static int stb_easy_font_print(float x, float y, const char *text, unsigned char color[4], void /;"	f	typeref:typename:int
stb_easy_font_spacing	stb/stb_easy_font.h	/^static void stb_easy_font_spacing(float spacing)$/;"	f	typeref:typename:void
stb_easy_font_spacing_val	stb/stb_easy_font.h	/^static float stb_easy_font_spacing_val = 0;$/;"	v	typeref:typename:float
stb_easy_font_vseg	stb/stb_easy_font.h	/^static unsigned char stb_easy_font_vseg[253] = {$/;"	v	typeref:typename:unsigned char[253]
stb_easy_font_width	stb/stb_easy_font.h	/^static int stb_easy_font_width(char *text)$/;"	f	typeref:typename:int
stb_fatal	stb/deprecated/stb.h	/^   #define stb_fatal /;"	d
stb_fatal	stb/deprecated/stb.h	/^void stb_fatal(const char *s, ...)$/;"	f	typeref:typename:void
stb_fatal	stb/tests/prerelease/stb_lib.h	/^void stb_fatal(char *s, ...)$/;"	f	typeref:typename:void
stb_fclose	stb/deprecated/stb.h	/^int     stb_fclose(FILE *f, int keep)$/;"	f	typeref:typename:int
stb_fcmp	stb/deprecated/stb.h	/^int stb_fcmp(char *s1, char *s2)$/;"	f	typeref:typename:int
stb_fcmp	stb/tests/prerelease/stb_lib.h	/^int stb_fcmp(char *s1, char *s2)$/;"	f	typeref:typename:int
stb_fcmp_core	stb/deprecated/stb.h	/^static int stb_fcmp_core(FILE *f, FILE *g)$/;"	f	typeref:typename:int
stb_fcmp_core	stb/tests/prerelease/stb_lib.h	/^static int stb_fcmp_core(FILE *f, FILE *g)$/;"	f	typeref:typename:int
stb_feq	stb/deprecated/stb.h	/^int stb_feq(char *s1, char *s2)$/;"	f	typeref:typename:int
stb_feq	stb/tests/prerelease/stb_lib.h	/^int stb_feq(char *s1, char *s2)$/;"	f	typeref:typename:int
stb_fexists	stb/deprecated/stb.h	/^int stb_fexists(char *filename)$/;"	f	typeref:typename:int
stb_fexists	stb/tests/prerelease/stb_lib.h	/^int stb_fexists(char *filename)$/;"	f	typeref:typename:int
stb_fget_ranged	stb/deprecated/stb.h	/^int     stb_fget_ranged(FILE *f, int b, stb_uint n)$/;"	f	typeref:typename:int
stb_fget_string	stb/deprecated/stb.h	/^char *stb_fget_string(FILE *f, void *p)$/;"	f	typeref:typename:char *
stb_fget_varlen	stb/deprecated/stb.h	/^int     stb_fget_varlen(FILE *f)$/;"	f	typeref:typename:int
stb_fget_varlen64	stb/deprecated/stb.h	/^stb_uint64   stb_fget_varlen64(FILE *f)$/;"	f	typeref:typename:stb_uint64
stb_fget_varlenu	stb/deprecated/stb.h	/^unsigned int stb_fget_varlenu(FILE *f)$/;"	f	typeref:typename:unsigned int
stb_fgetc	stb/deprecated/stb.h	/^#define stb_fgetc(/;"	d
stb_fgetc	stb/tests/prerelease/stb_lib.h	/^#define stb_fgetc(/;"	d
stb_fgets	stb/deprecated/stb.h	/^char * stb_fgets(char *buffer, int buflen, FILE *f)$/;"	f	typeref:typename:char *
stb_fgets	stb/tests/prerelease/stb_lib.h	/^char * stb_fgets(char *buffer, int buflen, FILE *f)$/;"	f	typeref:typename:char *
stb_fgets_malloc	stb/deprecated/stb.h	/^char * stb_fgets_malloc(FILE *f)$/;"	f	typeref:typename:char *
stb_fgets_malloc	stb/tests/prerelease/stb_lib.h	/^char * stb_fgets_malloc(FILE *f)$/;"	f	typeref:typename:char *
stb_file	stb/deprecated/stb.h	/^void *stb_file(char *filename, size_t *length)$/;"	f	typeref:typename:void *
stb_file	stb/tests/prerelease/stb_lib.h	/^void *stb_file(char *filename, size_t *length)$/;"	f	typeref:typename:void *
stb_file_max	stb/deprecated/stb.h	/^void *  stb_file_max(char *filename, size_t *length)$/;"	f	typeref:typename:void *
stb_filec	stb/deprecated/stb.h	/^#define stb_filec /;"	d
stb_filec	stb/tests/prerelease/stb_lib.h	/^#define stb_filec /;"	d
stb_filelen	stb/deprecated/stb.h	/^size_t  stb_filelen(FILE *f)$/;"	f	typeref:typename:size_t
stb_filelen	stb/tests/prerelease/stb_lib.h	/^size_t  stb_filelen(FILE *f)$/;"	f	typeref:typename:size_t
stb_fileu	stb/deprecated/stb.h	/^#define stb_fileu /;"	d
stb_fileu	stb/tests/prerelease/stb_lib.h	/^#define stb_fileu /;"	d
stb_filewrite	stb/deprecated/stb.h	/^int stb_filewrite(char *filename, void *data, size_t length)$/;"	f	typeref:typename:int
stb_filewrite	stb/tests/prerelease/stb_lib.h	/^int stb_filewrite(char *filename, void *data, size_t length)$/;"	f	typeref:typename:int
stb_filewritestr	stb/deprecated/stb.h	/^int stb_filewritestr(char *filename, char *data)$/;"	f	typeref:typename:int
stb_filewritestr	stb/tests/prerelease/stb_lib.h	/^int stb_filewritestr(char *filename, char *data)$/;"	f	typeref:typename:int
stb_fixpath	stb/deprecated/stb.h	/^void stb_fixpath(char *path)$/;"	f	typeref:typename:void
stb_fixpath	stb/tests/prerelease/stb_lib.h	/^void stb_fixpath(char *path)$/;"	f	typeref:typename:void
stb_float_eq	stb/deprecated/stb.h	/^int stb_float_eq(float x, float y, float delta, int max_ulps)$/;"	f	typeref:typename:int
stb_floatcmp	stb/deprecated/stb.h	/^int (*stb_floatcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_floatcmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_floatcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_fopen	stb/deprecated/stb.h	/^FILE *  stb_fopen(char *filename, const char *mode)$/;"	f	typeref:typename:FILE *
stb_force_uniprocessor	stb/deprecated/stb.h	/^void stb_force_uniprocessor(void)$/;"	f	typeref:typename:void
stb_fput_ranged	stb/deprecated/stb.h	/^void    stb_fput_ranged(FILE *f, int v, int b, stb_uint n)$/;"	f	typeref:typename:void
stb_fput_string	stb/deprecated/stb.h	/^void stb_fput_string(FILE *f, char *s)$/;"	f	typeref:typename:void
stb_fput_varlen	stb/deprecated/stb.h	/^void    stb_fput_varlen(FILE *f, int v) { stb_fput_varlenu(f, stb__varlen_xform(v)); }$/;"	f	typeref:typename:void
stb_fput_varlen64	stb/deprecated/stb.h	/^void    stb_fput_varlen64(FILE *f, stb_uint64 v)$/;"	f	typeref:typename:void
stb_fput_varlenu	stb/deprecated/stb.h	/^void    stb_fput_varlenu(FILE *f, unsigned int z)$/;"	f	typeref:typename:void
stb_frand	stb/deprecated/stb.h	/^double stb_frand(void)$/;"	f	typeref:typename:double
stb_frand	stb/tests/prerelease/stb_lib.h	/^double stb_frand(void)$/;"	f	typeref:typename:double
stb_frandLCG	stb/deprecated/stb.h	/^double stb_frandLCG(void)$/;"	f	typeref:typename:double
stb_frandLCG	stb/tests/prerelease/stb_lib.h	/^double stb_frandLCG(void)$/;"	f	typeref:typename:double
stb_free	stb/deprecated/stb.h	/^void stb_free(void *p)$/;"	f	typeref:typename:void
stb_from_utf8	stb/deprecated/stb.h	/^stb__wchar * stb_from_utf8(stb__wchar *buffer, const char *ostr, int n)$/;"	f	typeref:typename:stb__wchar *
stb_from_utf8	stb/tests/prerelease/stb_lib.h	/^stb__wchar * stb_from_utf8(stb__wchar *buffer, char *ostr, int n)$/;"	f	typeref:typename:stb__wchar *
stb_ftimestamp	stb/deprecated/stb.h	/^time_t stb_ftimestamp(char *filename)$/;"	f	typeref:typename:time_t
stb_ftimestamp	stb/tests/prerelease/stb_lib.h	/^time_t stb_ftimestamp(char *filename)$/;"	f	typeref:typename:time_t
stb_fullpath	stb/deprecated/stb.h	/^int stb_fullpath(char *abs, int abs_size, char *rel)$/;"	f	typeref:typename:int
stb_fullpath	stb/tests/prerelease/stb_lib.h	/^int stb_fullpath(char *abs, int abs_size, char *rel)$/;"	f	typeref:typename:int
stb_fwrite32	stb/deprecated/stb.h	/^void stb_fwrite32(FILE *f, stb_uint32 x)$/;"	f	typeref:typename:void
stb_getc	stb/deprecated/stb.h	/^unsigned int stb_getc(stbfile *f) { return f->getbyte(f); }$/;"	f	typeref:typename:unsigned int
stb_getdata	stb/deprecated/stb.h	/^unsigned int stb_getdata(stbfile *f, void *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned int
stb_getopt	stb/deprecated/stb.h	/^char **stb_getopt(int *argc, char **argv)$/;"	f	typeref:typename:char **
stb_getopt_free	stb/deprecated/stb.h	/^void   stb_getopt_free(char **opts)$/;"	f	typeref:typename:void
stb_getopt_param	stb/deprecated/stb.h	/^char **stb_getopt_param(int *argc, char **argv, char *param)$/;"	f	typeref:typename:char **
stb_glprog_error	stb/tests/caveview/stb_glprog.h	/^static void stb_glprog_error(char *error, int error_buflen, char *str1, char *str2, char *str3)$/;"	f	typeref:typename:void
stb_glprog_init	stb/tests/caveview/stb_glprog.h	/^static void stb_glprog_init(void)$/;"	f	typeref:typename:void
stb_hash	stb/deprecated/stb.h	/^unsigned int stb_hash(char *str)$/;"	f	typeref:typename:unsigned int
stb_hash	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hash(char *str)$/;"	f	typeref:typename:unsigned int
stb_hash2	stb/deprecated/stb.h	/^unsigned int stb_hash2(char *str, unsigned int *hash2_ptr)$/;"	f	typeref:typename:unsigned int
stb_hash2	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hash2(char *str, unsigned int *hash2_ptr)$/;"	f	typeref:typename:unsigned int
stb_hash_fast	stb/deprecated/stb.h	/^unsigned int stb_hash_fast(void *p, int len)$/;"	f	typeref:typename:unsigned int
stb_hash_fast	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hash_fast(void *p, int len)$/;"	f	typeref:typename:unsigned int
stb_hash_func	stb/deprecated/stb.h	/^typedef int (*stb_hash_func)(void *a, unsigned int seed);$/;"	t	typeref:typename:int (*)(void * a,unsigned int seed)
stb_hash_number	stb/deprecated/stb.h	/^unsigned int stb_hash_number(unsigned int hash)$/;"	f	typeref:typename:unsigned int
stb_hash_number	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hash_number(unsigned int hash)$/;"	f	typeref:typename:unsigned int
stb_hashlen	stb/deprecated/stb.h	/^unsigned int stb_hashlen(char *str, int len)$/;"	f	typeref:typename:unsigned int
stb_hashlen	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hashlen(char *str, int len)$/;"	f	typeref:typename:unsigned int
stb_hashptr	stb/deprecated/stb.h	/^unsigned int stb_hashptr(void *p)$/;"	f	typeref:typename:unsigned int
stb_hashptr	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_hashptr(void *p)$/;"	f	typeref:typename:unsigned int
stb_highbit8	stb/deprecated/stb.h	/^int stb_highbit8(unsigned int n)$/;"	f	typeref:typename:int
stb_idict_new_size	stb/deprecated/stb.h	/^stb_idict * stb_idict_new_size(int size)$/;"	f
stb_idict_new_size	stb/tests/prerelease/stb_lib.h	/^stb_idict * stb_idict_new_size(unsigned int size)$/;"	f
stb_idict_remove_all	stb/deprecated/stb.h	/^void stb_idict_remove_all(stb_idict *e)$/;"	f	typeref:typename:void
stb_idict_remove_all	stb/tests/prerelease/stb_lib.h	/^void stb_idict_remove_all(stb_idict *e)$/;"	f	typeref:typename:void
stb_image_write_test	stb/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (stbiw_uint32)==4?1:-1]
stb_include_append	stb/stb_include.h	/^static char *stb_include_append(char *str, size_t *curlen, char *addstr, size_t addlen)$/;"	f	typeref:typename:char *
stb_include_append_include	stb/stb_include.h	/^static include_info *stb_include_append_include(include_info *array, int len, int offset, int en/;"	f	typeref:typename:include_info *
stb_include_file	stb/stb_include.h	/^char *stb_include_file(char *filename, char *inject, char *path_to_includes, char error[256])$/;"	f	typeref:typename:char *
stb_include_find_includes	stb/stb_include.h	/^static int stb_include_find_includes(char *text, include_info **plist)$/;"	f	typeref:typename:int
stb_include_free_includes	stb/stb_include.h	/^static void stb_include_free_includes(include_info *array, int len)$/;"	f	typeref:typename:void
stb_include_isspace	stb/stb_include.h	/^static int stb_include_isspace(int ch)$/;"	f	typeref:typename:int
stb_include_itoa	stb/stb_include.h	/^static void stb_include_itoa(char str[9], int n)$/;"	f	typeref:typename:void
stb_include_load_file	stb/stb_include.h	/^static char *stb_include_load_file(char *filename, size_t *plen)$/;"	f	typeref:typename:char *
stb_include_string	stb/stb_include.h	/^char *stb_include_string(char *str, char *inject, char *path_to_includes, char *filename, char e/;"	f	typeref:typename:char *
stb_include_strings	stb/stb_include.h	/^char *stb_include_strings(char **strs, int count, char *inject, char *path_to_includes, char *fi/;"	f	typeref:typename:char *
stb_int16	stb/deprecated/stb.h	/^typedef          short stb_int16;$/;"	t	typeref:typename:short
stb_int16	stb/tests/prerelease/stb_lib.h	/^typedef          short stb_int16;$/;"	t	typeref:typename:short
stb_int32	stb/deprecated/stb.h	/^  typedef          int   stb_int32;$/;"	t	typeref:typename:int
stb_int32	stb/deprecated/stb.h	/^  typedef          long  stb_int32;$/;"	t	typeref:typename:long
stb_int32	stb/tests/prerelease/stb_lib.h	/^  typedef          int   stb_int32;$/;"	t	typeref:typename:int
stb_int32	stb/tests/prerelease/stb_lib.h	/^  typedef          long  stb_int32;$/;"	t	typeref:typename:long
stb_int64	stb/deprecated/stb.h	/^  typedef          __int64 stb_int64;$/;"	t	typeref:typename:__int64
stb_int64	stb/deprecated/stb.h	/^  typedef          long long stb_int64;$/;"	t	typeref:typename:long long
stb_int64	stb/tests/prerelease/stb_lib.h	/^  typedef          __int64 stb_int64;$/;"	t	typeref:typename:__int64
stb_int64	stb/tests/prerelease/stb_lib.h	/^  typedef          long long stb_int64;$/;"	t	typeref:typename:long long
stb_int8	stb/deprecated/stb.h	/^typedef   signed char  stb_int8;$/;"	t	typeref:typename:signed char
stb_int8	stb/tests/prerelease/stb_lib.h	/^typedef   signed char  stb_int8;$/;"	t	typeref:typename:signed char
stb_inta	stb/deprecated/stb.h	/^typedef stb_int32  stb_inta;$/;"	t	typeref:typename:stb_int32
stb_inta	stb/deprecated/stb.h	/^typedef stb_int64  stb_inta;$/;"	t	typeref:typename:stb_int64
stb_intcmp	stb/deprecated/stb.h	/^int (*stb_intcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_intcmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_intcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_intcmprev	stb/deprecated/stb.h	/^int (*stb_intcmprev(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_is_pow2	stb/deprecated/stb.h	/^int stb_is_pow2(size_t n)$/;"	f	typeref:typename:int
stb_is_prime	stb/deprecated/stb.h	/^int stb_is_prime(unsigned int m)$/;"	f	typeref:typename:int
stb_ischar	stb/deprecated/stb.h	/^int stb_ischar(char c, char *set)$/;"	f	typeref:typename:int
stb_keep_if_different	stb/deprecated/stb.h	/^   stb_keep_if_different = 2,$/;"	e	enum:__anonfe33527c1003
stb_keep_no	stb/deprecated/stb.h	/^   stb_keep_no = 0,$/;"	e	enum:__anonfe33527c1003
stb_keep_yes	stb/deprecated/stb.h	/^   stb_keep_yes = 1,$/;"	e	enum:__anonfe33527c1003
stb_leakcheck_dumpmem	stb/stb_leakcheck.h	/^void stb_leakcheck_dumpmem(void)$/;"	f	typeref:typename:void
stb_leakcheck_free	stb/stb_leakcheck.h	/^void stb_leakcheck_free(void *ptr)$/;"	f	typeref:typename:void
stb_leakcheck_malloc	stb/stb_leakcheck.h	/^void *stb_leakcheck_malloc(size_t sz, const char *file, int line)$/;"	f	typeref:typename:void *
stb_leakcheck_malloc_info	stb/stb_leakcheck.h	/^typedef struct malloc_info stb_leakcheck_malloc_info;$/;"	t	typeref:struct:malloc_info
stb_leakcheck_realloc	stb/stb_leakcheck.h	/^void *stb_leakcheck_realloc(void *ptr, size_t sz, const char *file, int line)$/;"	f	typeref:typename:void *
stb_lerp	stb/deprecated/stb.h	/^#define stb_lerp(/;"	d
stb_lerp	stb/tests/prerelease/stb_lib.h	/^#define stb_lerp(/;"	d
stb_lex	stb/deprecated/stb.h	/^int stb_lex(stb_matcher *m, char *str, int *len)$/;"	f	typeref:typename:int
stb_lex_item	stb/deprecated/stb.h	/^int stb_lex_item(stb_matcher *matcher, const char *regex, int result)$/;"	f	typeref:typename:int
stb_lex_item_wild	stb/deprecated/stb.h	/^int stb_lex_item_wild(stb_matcher *matcher, const char *regex, int result)$/;"	f	typeref:typename:int
stb_lex_location	stb/stb_c_lexer.h	/^} stb_lex_location;$/;"	t	typeref:struct:__anone321a15d0208
stb_lex_matcher	stb/deprecated/stb.h	/^stb_matcher *stb_lex_matcher(void)$/;"	f	typeref:typename:stb_matcher *
stb_lexer	stb/stb_c_lexer.h	/^} stb_lexer;$/;"	t	typeref:struct:__anone321a15d0108
stb_linear_controller	stb/deprecated/stb.h	/^void stb_linear_controller(float *curpos, float target_pos, float acc, float deacc, float dt)$/;"	f	typeref:typename:void
stb_linear_remap	stb/deprecated/stb.h	/^#define stb_linear_remap(/;"	d
stb_linear_remap	stb/deprecated/stb.h	/^double stb_linear_remap(double x, double x_min, double x_max,$/;"	f	typeref:typename:double
stb_linear_remap	stb/tests/prerelease/stb_lib.h	/^#define stb_linear_remap(/;"	d
stb_linear_remap	stb/tests/prerelease/stb_lib.h	/^double stb_linear_remap(double x, double x_min, double x_max,$/;"	f	typeref:typename:double
stb_little16	stb/deprecated/stb.h	/^#define stb_little16(/;"	d
stb_little32	stb/deprecated/stb.h	/^#define stb_little32(/;"	d
stb_log	stb/deprecated/stb.h	/^   #define stb_log /;"	d
stb_log	stb/deprecated/stb.h	/^void stb_log(int active)$/;"	f	typeref:typename:void
stb_log2_ceil	stb/deprecated/stb.h	/^int stb_log2_ceil(size_t n)$/;"	f	typeref:typename:int
stb_log2_floor	stb/deprecated/stb.h	/^int stb_log2_floor(size_t n)$/;"	f	typeref:typename:int
stb_log_fileline	stb/deprecated/stb.h	/^void stb_log_fileline(int active)$/;"	f	typeref:typename:void
stb_log_name	stb/deprecated/stb.h	/^void stb_log_name(char *s)$/;"	f	typeref:typename:void
stb_lowbit8	stb/deprecated/stb.h	/^int stb_lowbit8(unsigned int n)$/;"	f	typeref:typename:int
stb_malloc	stb/deprecated/stb.h	/^   int stb_malloc;$/;"	m	struct:__anonfe33527c0a08	typeref:typename:int
stb_malloc	stb/deprecated/stb.h	/^void *stb_malloc(void *context, size_t size)$/;"	f	typeref:typename:void *
stb_malloc_check_counter	stb/deprecated/stb.h	/^   void stb_malloc_check_counter(int init_delay, int rep_delay)$/;"	f	typeref:typename:void
stb_malloc_checkall	stb/deprecated/stb.h	/^   void stb_malloc_checkall(void) { }$/;"	f	typeref:typename:void
stb_malloc_checkall	stb/deprecated/stb.h	/^   void stb_malloc_checkall(void)$/;"	f	typeref:typename:void
stb_malloc_global	stb/deprecated/stb.h	/^void *stb_malloc_global(size_t size)$/;"	f	typeref:typename:void *
stb_malloc_leaf	stb/deprecated/stb.h	/^void *stb_malloc_leaf(void *context, size_t size)$/;"	f	typeref:typename:void *
stb_malloc_nofree	stb/deprecated/stb.h	/^void *stb_malloc_nofree(void *context, size_t size)$/;"	f	typeref:typename:void *
stb_malloc_raw	stb/deprecated/stb.h	/^void *stb_malloc_raw(void *context, size_t size)$/;"	f	typeref:typename:void *
stb_malloc_record	stb/deprecated/stb.h	/^} stb_malloc_record;$/;"	t	typeref:struct:__anonfe33527c1608
stb_malloc_string	stb/deprecated/stb.h	/^char *stb_malloc_string(void *context, size_t size)$/;"	f	typeref:typename:char *
stb_malloc_validate	stb/deprecated/stb.h	/^void stb_malloc_validate(void *p, void *parent)$/;"	f	typeref:typename:void
stb_matcher	stb/deprecated/stb.h	/^struct stb_matcher$/;"	s
stb_matcher	stb/deprecated/stb.h	/^typedef struct stb_matcher stb_matcher;$/;"	t	typeref:struct:stb_matcher
stb_matcher_find	stb/deprecated/stb.h	/^int stb_matcher_find(stb_matcher *m, char *str)$/;"	f	typeref:typename:int
stb_matcher_free	stb/deprecated/stb.h	/^void stb_matcher_free(stb_matcher *f)$/;"	f	typeref:typename:void
stb_matcher_match	stb/deprecated/stb.h	/^int stb_matcher_match(stb_matcher *m, char *str)$/;"	f	typeref:typename:int
stb_matchlen	stb/deprecated/stb.h	/^static unsigned int stb_matchlen(stb_uchar *m1, stb_uchar *m2, stb_uint maxlen)$/;"	f	typeref:typename:unsigned int
stb_max	stb/deprecated/stb.h	/^#define stb_max(/;"	d
stb_mcheck	stb/deprecated/stb.h	/^      #define stb_mcheck(/;"	d
stb_mcheck	stb/deprecated/stb.h	/^   int stb_mcheck(void *p)$/;"	f	typeref:typename:int
stb_mcheck_all	stb/deprecated/stb.h	/^   void stb_mcheck_all(void)$/;"	f	typeref:typename:void
stb_memcmp	stb/deprecated/stb.h	/^int (*stb_memcmp(int offset, int size))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_min	stb/deprecated/stb.h	/^#define stb_min(/;"	d
stb_mktemp	stb/tests/prerelease/stb_lib.h	/^  #define stb_mktemp /;"	d
stb_mod_eucl	stb/stb_divide.h	/^int stb_mod_eucl(int v1, int v2)$/;"	f	typeref:typename:int
stb_mod_floor	stb/stb_divide.h	/^int stb_mod_floor(int v1, int v2)$/;"	f	typeref:typename:int
stb_mod_trunc	stb/stb_divide.h	/^int stb_mod_trunc(int v1, int v2)$/;"	f	typeref:typename:int
stb_mprintf	stb/deprecated/stb.h	/^char *stb_mprintf(const char *fmt, ...)$/;"	f	typeref:typename:char *
stb_mutex	stb/deprecated/stb.h	/^typedef void *stb_mutex;$/;"	t	typeref:typename:void *
stb_mutex_begin	stb/deprecated/stb.h	/^void      stb_mutex_begin(stb_mutex m)   { stb__wait(500); if (m) stb_sem_waitfor(m); }$/;"	f	typeref:typename:void
stb_mutex_begin	stb/deprecated/stb.h	/^void stb_mutex_begin(void *p)$/;"	f	typeref:typename:void
stb_mutex_delete	stb/deprecated/stb.h	/^void      stb_mutex_delete(stb_mutex m)  { stb_sem_delete (m);      }$/;"	f	typeref:typename:void
stb_mutex_delete	stb/deprecated/stb.h	/^void stb_mutex_delete(void *p)$/;"	f	typeref:typename:void
stb_mutex_end	stb/deprecated/stb.h	/^void      stb_mutex_end(stb_mutex m)     { if (m) stb_sem_release(m); stb__wait(500); }$/;"	f	typeref:typename:void
stb_mutex_end	stb/deprecated/stb.h	/^void stb_mutex_end(void *p)$/;"	f	typeref:typename:void
stb_mutex_new	stb/deprecated/stb.h	/^stb_mutex stb_mutex_new(void)            { return stb_sem_new_extra(1,1); }$/;"	f	typeref:typename:stb_mutex
stb_mutex_new	stb/deprecated/stb.h	/^void *stb_mutex_new(void)$/;"	f	typeref:typename:void *
stb_newell_normal	stb/deprecated/stb.h	/^void stb_newell_normal(float *normal, int num_vert, float **vert, int normalize)$/;"	f	typeref:typename:void
stb_nfa_edge	stb/deprecated/stb.h	/^} stb_nfa_edge;$/;"	t	typeref:struct:__anonfe33527c1c08
stb_nfa_node	stb/deprecated/stb.h	/^} stb_nfa_node;$/;"	t	typeref:struct:__anonfe33527c1d08
stb_not_crap	stb/deprecated/stb.h	/^static int stb_not_crap(int best, int dist)$/;"	f	typeref:typename:int
stb_nptr_didfree	stb/deprecated/stb.h	/^void stb_nptr_didfree(void *address_being_freed, int len)$/;"	f	typeref:typename:void
stb_nptr_didset	stb/deprecated/stb.h	/^void stb_nptr_didset(void *address_of_pointer)$/;"	f	typeref:typename:void
stb_nptr_free	stb/deprecated/stb.h	/^void stb_nptr_free(void *address_being_freed, int len)$/;"	f	typeref:typename:void
stb_nptr_move	stb/deprecated/stb.h	/^void stb_nptr_move(void *new_address, void *old_address)$/;"	f	typeref:typename:void
stb_nptr_realloc	stb/deprecated/stb.h	/^void stb_nptr_realloc(void *new_address, void *old_address, int len)$/;"	f	typeref:typename:void
stb_nptr_recache	stb/deprecated/stb.h	/^void stb_nptr_recache(void)$/;"	f	typeref:typename:void
stb_nptr_set	stb/deprecated/stb.h	/^void stb_nptr_set(void *address_of_pointer, void *value_to_write)$/;"	f	typeref:typename:void
stb_open	stb/deprecated/stb.h	/^stbfile *stb_open(char *filename, char *mode)$/;"	f	typeref:typename:stbfile *
stb_open_inbuffer	stb/deprecated/stb.h	/^stbfile *stb_open_inbuffer(void *buffer, unsigned int len)$/;"	f	typeref:typename:stbfile *
stb_open_inbuffer_free	stb/deprecated/stb.h	/^stbfile *stb_open_inbuffer_free(void *buffer, unsigned int len)$/;"	f	typeref:typename:stbfile *
stb_open_outbuffer	stb/deprecated/stb.h	/^stbfile *stb_open_outbuffer(unsigned char **update_on_close)$/;"	f	typeref:typename:stbfile *
stb_openf	stb/deprecated/stb.h	/^stbfile *stb_openf(FILE *f)$/;"	f	typeref:typename:stbfile *
stb_out	stb/deprecated/stb.h	/^#define stb_out(/;"	d
stb_out2	stb/deprecated/stb.h	/^static void stb_out2(stb_uint v)$/;"	f	typeref:typename:void
stb_out3	stb/deprecated/stb.h	/^static void stb_out3(stb_uint v) { stb_out(v >> 16); stb_out(v >> 8); stb_out(v); }$/;"	f	typeref:typename:void
stb_out4	stb/deprecated/stb.h	/^static void stb_out4(stb_uint v) { stb_out(v >> 24); stb_out(v >> 16);$/;"	f	typeref:typename:void
stb_out_backpatch	stb/deprecated/stb.h	/^static void stb_out_backpatch(size_t id, stb_uint value)$/;"	f	typeref:typename:void
stb_out_backpatch_id	stb/deprecated/stb.h	/^static size_t stb_out_backpatch_id(void)$/;"	f	typeref:typename:size_t
stb_p_fopen	stb/deprecated/stb.h	/^#define stb_p_fopen /;"	d
stb_p_fopen	stb/deprecated/stb.h	/^static FILE * stb_p_fopen(const char *filename, const char *mode)$/;"	f	typeref:typename:FILE *
stb_p_mktemp	stb/deprecated/stb.h	/^#define stb_p_mktemp(/;"	d
stb_p_size	stb/deprecated/stb.h	/^#define stb_p_size(/;"	d
stb_p_sprintf	stb/deprecated/stb.h	/^#define stb_p_sprintf /;"	d
stb_p_strcpy_s	stb/deprecated/stb.h	/^#define stb_p_strcpy_s(/;"	d
stb_p_strcpy_s	stb/deprecated/stb.h	/^static char *stb_p_strcpy_s(char *a, size_t size, const char *b)$/;"	f	typeref:typename:char *
stb_p_strdup	stb/deprecated/stb.h	/^#define stb_p_strdup /;"	d
stb_p_stricmp	stb/deprecated/stb.h	/^#define stb_p_stricmp /;"	d
stb_p_strncpy_s	stb/deprecated/stb.h	/^#define stb_p_strncpy_s(/;"	d
stb_p_strncpy_s	stb/deprecated/stb.h	/^static char *stb_p_strncpy_s(char *a, size_t size, const char *b, size_t count)$/;"	f	typeref:typename:char *
stb_p_strnicmp	stb/deprecated/stb.h	/^#define stb_p_strnicmp /;"	d
stb_p_vsnprintf	stb/deprecated/stb.h	/^#define stb_p_vsnprintf /;"	d
stb_p_wfopen	stb/deprecated/stb.h	/^#define stb_p_wfopen /;"	d
stb_p_wfopen	stb/deprecated/stb.h	/^static FILE * stb_p_wfopen(const wchar_t *filename, const wchar_t *mode)$/;"	f	typeref:typename:FILE *
stb_perfect	stb/deprecated/stb.h	/^} stb_perfect;$/;"	t	typeref:struct:__anonfe33527c0b08
stb_perfect_create	stb/deprecated/stb.h	/^int stb_perfect_create(stb_perfect *p, unsigned int *v, int n)$/;"	f	typeref:typename:int
stb_perfect_destroy	stb/deprecated/stb.h	/^void stb_perfect_destroy(stb_perfect *p)$/;"	f	typeref:typename:void
stb_perfect_hash	stb/deprecated/stb.h	/^int stb_perfect_hash(stb_perfect *p, unsigned int x)$/;"	f	typeref:typename:int
stb_perfect_hash_max_failures	stb/deprecated/stb.h	/^int stb_perfect_hash_max_failures;$/;"	v	typeref:typename:int
stb_plural	stb/deprecated/stb.h	/^const char *stb_plural(int n)$/;"	f	typeref:typename:const char *
stb_plural	stb/tests/prerelease/stb_lib.h	/^const char *stb_plural(int n)$/;"	f	typeref:typename:const char *
stb_pointer_array_free	stb/deprecated/stb.h	/^void stb_pointer_array_free(void *q, int len)$/;"	f	typeref:typename:void
stb_power_of_two_nearest_prime	stb/deprecated/stb.h	/^unsigned int stb_power_of_two_nearest_prime(int n)$/;"	f	typeref:typename:unsigned int
stb_prefix	stb/deprecated/stb.h	/^int stb_prefix(char *s, char *t)$/;"	f	typeref:typename:int
stb_prefix	stb/tests/prerelease/stb_lib.h	/^int stb_prefix(char *s, char *t)$/;"	f	typeref:typename:int
stb_prefix_count	stb/deprecated/stb.h	/^int stb_prefix_count(char *s, char *t)$/;"	f	typeref:typename:int
stb_prefix_count	stb/tests/prerelease/stb_lib.h	/^int stb_prefix_count(char *s, char *t)$/;"	f	typeref:typename:int
stb_prefixi	stb/deprecated/stb.h	/^#define stb_prefixi(/;"	d
stb_prefixi	stb/tests/prerelease/stb_lib.h	/^#define stb_prefixi(/;"	d
stb_probe	stb/deprecated/stb.h	/^int stb_probe(stb_search *s, int compare, int *result)$/;"	f	typeref:typename:int
stb_probe_guess	stb/deprecated/stb.h	/^static int stb_probe_guess(stb_search *s, int *result)$/;"	f	typeref:typename:int
stb_processor_count	stb/deprecated/stb.h	/^int stb_processor_count(void)$/;"	f	typeref:typename:int
stb_ps	stb/deprecated/stb.h	/^typedef struct stb_ps stb_ps;$/;"	t	typeref:struct:stb_ps
stb_ps_add	stb/deprecated/stb.h	/^stb_ps *  stb_ps_add   (stb_ps *ps, void *value)$/;"	f	typeref:typename:stb_ps *
stb_ps_array	stb/deprecated/stb.h	/^} stb_ps_array;$/;"	t	typeref:struct:__anonfe33527c1908
stb_ps_array_max	stb/deprecated/stb.h	/^static int stb_ps_array_max = 13;$/;"	v	typeref:typename:int
stb_ps_bucket	stb/deprecated/stb.h	/^} stb_ps_bucket;$/;"	t	typeref:struct:__anonfe33527c1808
stb_ps_copy	stb/deprecated/stb.h	/^stb_ps *stb_ps_copy(stb_ps *ps)$/;"	f	typeref:typename:stb_ps *
stb_ps_count	stb/deprecated/stb.h	/^int stb_ps_count (stb_ps *ps)$/;"	f	typeref:typename:int
stb_ps_delete	stb/deprecated/stb.h	/^void stb_ps_delete(stb_ps *ps)$/;"	f	typeref:typename:void
stb_ps_empty	stb/deprecated/stb.h	/^#define stb_ps_empty(/;"	d
stb_ps_enum	stb/deprecated/stb.h	/^int stb_ps_enum(stb_ps *ps, void *data, int (*func)(void *value, void *data))$/;"	f	typeref:typename:int
stb_ps_eq	stb/deprecated/stb.h	/^int stb_ps_eq(stb_ps *p0, stb_ps *p1)$/;"	f	typeref:typename:int
stb_ps_fastlist	stb/deprecated/stb.h	/^void ** stb_ps_fastlist(stb_ps *ps, int *count)$/;"	f	typeref:typename:void **
stb_ps_fastlist_valid	stb/deprecated/stb.h	/^#define stb_ps_fastlist_valid(/;"	d
stb_ps_find	stb/deprecated/stb.h	/^int stb_ps_find(stb_ps *ps, void *value)$/;"	f	typeref:typename:int
stb_ps_getlist	stb/deprecated/stb.h	/^void ** stb_ps_getlist(stb_ps *ps, int *count)$/;"	f	typeref:typename:void **
stb_ps_hash	stb/deprecated/stb.h	/^} stb_ps_hash;$/;"	t	typeref:struct:__anonfe33527c1a08
stb_ps_makehash	stb/deprecated/stb.h	/^static stb_ps_hash *stb_ps_makehash(int size, int old_size, void **old_data)$/;"	f	typeref:typename:stb_ps_hash *
stb_ps_remove	stb/deprecated/stb.h	/^stb_ps *stb_ps_remove(stb_ps *ps, void *value)$/;"	f	typeref:typename:stb_ps *
stb_ps_remove_any	stb/deprecated/stb.h	/^stb_ps *stb_ps_remove_any(stb_ps *ps, void **value)$/;"	f	typeref:typename:stb_ps *
stb_ps_subset	stb/deprecated/stb.h	/^int stb_ps_subset(stb_ps *bigger, stb_ps *smaller)$/;"	f	typeref:typename:int
stb_ps_writelist	stb/deprecated/stb.h	/^int stb_ps_writelist(stb_ps *ps, void **list, int size )$/;"	f	typeref:typename:int
stb_ptrmap_delete	stb/deprecated/stb.h	/^void stb_ptrmap_delete(stb_ptrmap *e, void (*free_func)(void *))$/;"	f	typeref:typename:void
stb_ptrmap_delete	stb/tests/prerelease/stb_lib.h	/^void stb_ptrmap_delete(stb_ptrmap *e, void (*free_func)(void *))$/;"	f	typeref:typename:void
stb_ptrmap_new	stb/deprecated/stb.h	/^stb_ptrmap *stb_ptrmap_new(void)$/;"	f
stb_ptrmap_new	stb/tests/prerelease/stb_lib.h	/^stb_ptrmap *stb_ptrmap_new(void)$/;"	f
stb_putc	stb/deprecated/stb.h	/^int stb_putc(stbfile *f, int ch)  { return f->putbyte(f, ch); }$/;"	f	typeref:typename:int
stb_putdata	stb/deprecated/stb.h	/^unsigned int stb_putdata(stbfile *f, void *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned int
stb_qsort_strcmp	stb/deprecated/stb.h	/^int (*stb_qsort_strcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_qsort_strcmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_qsort_strcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_qsort_stricmp	stb/deprecated/stb.h	/^int (*stb_qsort_stricmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_qsort_stricmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_qsort_stricmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_quadratic_controller	stb/deprecated/stb.h	/^float stb_quadratic_controller(float target_pos, float curpos, float maxvel, float maxacc, float/;"	f	typeref:typename:float
stb_rand	stb/deprecated/stb.h	/^unsigned int stb_rand()$/;"	f	typeref:typename:unsigned int
stb_rand	stb/tests/prerelease/stb_lib.h	/^unsigned long stb_rand()$/;"	f	typeref:typename:unsigned long
stb_randLCG	stb/deprecated/stb.h	/^unsigned int  stb_randLCG(void)$/;"	f	typeref:typename:unsigned int
stb_randLCG	stb/tests/prerelease/stb_lib.h	/^unsigned long stb_randLCG(void)$/;"	f	typeref:typename:unsigned long
stb_randLCG_explicit	stb/deprecated/stb.h	/^unsigned int  stb_randLCG_explicit(unsigned int seed)$/;"	f	typeref:typename:unsigned int
stb_randLCG_explicit	stb/tests/prerelease/stb_lib.h	/^unsigned long stb_randLCG_explicit(unsigned long seed)$/;"	f	typeref:typename:unsigned long
stb_rand_define	stb/deprecated/stb.h	/^#define stb_rand_define(/;"	d
stb_readdir_files	stb/deprecated/stb.h	/^char **stb_readdir_files  (char *dir) { return readdir_raw(dir, 0, NULL); }$/;"	f	typeref:typename:char **
stb_readdir_files	stb/tests/prerelease/stb_lib.h	/^char **stb_readdir_files  (char *dir) { return readdir_raw(dir, 0, NULL); }$/;"	f	typeref:typename:char **
stb_readdir_files_mask	stb/deprecated/stb.h	/^char **stb_readdir_files_mask(char *dir, char *wild) { return readdir_raw(dir, 0, wild); }$/;"	f	typeref:typename:char **
stb_readdir_files_mask	stb/tests/prerelease/stb_lib.h	/^char **stb_readdir_files_mask(char *dir, char *wild) { return readdir_raw(dir, 0, wild); }$/;"	f	typeref:typename:char **
stb_readdir_free	stb/deprecated/stb.h	/^void stb_readdir_free(char **files)$/;"	f	typeref:typename:void
stb_readdir_free	stb/tests/prerelease/stb_lib.h	/^void stb_readdir_free(char **files)$/;"	f	typeref:typename:void
stb_readdir_rec	stb/deprecated/stb.h	/^static char **stb_readdir_rec(char **sofar, char *dir, char *filespec)$/;"	f	typeref:typename:char **
stb_readdir_rec	stb/tests/prerelease/stb_lib.h	/^static char **stb_readdir_rec(char **sofar, char *dir, char *filespec)$/;"	f	typeref:typename:char **
stb_readdir_recursive	stb/deprecated/stb.h	/^char **stb_readdir_recursive(char *dir, char *filespec)$/;"	f	typeref:typename:char **
stb_readdir_recursive	stb/tests/prerelease/stb_lib.h	/^char **stb_readdir_recursive(char *dir, char *filespec)$/;"	f	typeref:typename:char **
stb_readdir_subdirs	stb/deprecated/stb.h	/^char **stb_readdir_subdirs(char *dir) { return readdir_raw(dir, 1, NULL); }$/;"	f	typeref:typename:char **
stb_readdir_subdirs	stb/tests/prerelease/stb_lib.h	/^char **stb_readdir_subdirs(char *dir) { return readdir_raw(dir, 1, NULL); }$/;"	f	typeref:typename:char **
stb_readdir_subdirs_mask	stb/deprecated/stb.h	/^char **stb_readdir_subdirs_mask(char *dir, char *wild) { return readdir_raw(dir, 1, wild); }$/;"	f	typeref:typename:char **
stb_readdir_subdirs_mask	stb/tests/prerelease/stb_lib.h	/^char **stb_readdir_subdirs_mask(char *dir, char *wild) { return readdir_raw(dir, 1, wild); }$/;"	f	typeref:typename:char **
stb_realloc	stb/deprecated/stb.h	/^void *stb_realloc(void *ptr, size_t newsize)$/;"	f	typeref:typename:void *
stb_realloc_c	stb/deprecated/stb.h	/^void *stb_realloc_c(void *context, void *ptr, size_t newsize)$/;"	f	typeref:typename:void *
stb_reassign	stb/deprecated/stb.h	/^void stb_reassign(void *new_context, void *ptr)$/;"	f	typeref:typename:void
stb_reg_close	stb/deprecated/stb.h	/^void stb_reg_close(void *reg)$/;"	f	typeref:typename:void
stb_reg_open	stb/deprecated/stb.h	/^void *stb_reg_open(const char *mode, const char *where)$/;"	f	typeref:typename:void *
stb_reg_read	stb/deprecated/stb.h	/^int stb_reg_read(void *zreg, const char *str, void *data, unsigned long len)$/;"	f	typeref:typename:int
stb_reg_read_string	stb/deprecated/stb.h	/^int stb_reg_read_string(void *zreg, const char *str, char *data, int len)$/;"	f	typeref:typename:int
stb_reg_write	stb/deprecated/stb.h	/^void stb_reg_write(void *zreg, const char *str, const void *data, unsigned long len)$/;"	f	typeref:typename:void
stb_reg_write_string	stb/deprecated/stb.h	/^void stb_reg_write_string(void *zreg, const char *str, const char *data)$/;"	f	typeref:typename:void
stb_regex	stb/deprecated/stb.h	/^int stb_regex(char *regex, char *str)$/;"	f	typeref:typename:int
stb_regex_matcher	stb/deprecated/stb.h	/^stb_matcher *stb_regex_matcher(char *regex)$/;"	f	typeref:typename:stb_matcher *
stb_rehash	stb/deprecated/stb.h	/^#define stb_rehash(/;"	d
stb_rehash	stb/tests/prerelease/stb_lib.h	/^#define stb_rehash(/;"	d
stb_rehash_improved	stb/deprecated/stb.h	/^unsigned int stb_rehash_improved(unsigned int v)$/;"	f	typeref:typename:unsigned int
stb_rehash_improved	stb/tests/prerelease/stb_lib.h	/^unsigned int stb_rehash_improved(unsigned int v)$/;"	f	typeref:typename:unsigned int
stb_rename	stb/deprecated/stb.h	/^  #define stb_rename /;"	d
stb_rename	stb/deprecated/stb.h	/^  #define stb_rename(/;"	d
stb_rename	stb/tests/prerelease/stb_lib.h	/^  #define stb_rename /;"	d
stb_rename	stb/tests/prerelease/stb_lib.h	/^  #define stb_rename(/;"	d
stb_replacedir	stb/deprecated/stb.h	/^char *stb_replacedir(char *output, char *src, char *dir)$/;"	f	typeref:typename:char *
stb_replacedir	stb/tests/prerelease/stb_lib.h	/^char *stb_replacedir(char *output, char *src, char *dir)$/;"	f	typeref:typename:char *
stb_replaceext	stb/deprecated/stb.h	/^char *stb_replaceext(char *output, char *src, char *ext)$/;"	f	typeref:typename:char *
stb_replaceext	stb/tests/prerelease/stb_lib.h	/^char *stb_replaceext(char *output, char *src, char *ext)$/;"	f	typeref:typename:char *
stb_replaceinplace	stb/deprecated/stb.h	/^void stb_replaceinplace(char *src, char *find, char *replace)$/;"	f	typeref:typename:void
stb_replaceinplace	stb/tests/prerelease/stb_lib.h	/^void stb_replaceinplace(char *src, char *find, char *replace)$/;"	f	typeref:typename:void
stb_reverse	stb/deprecated/stb.h	/^void stb_reverse(void *p, size_t n, size_t sz)$/;"	f	typeref:typename:void
stb_reverse	stb/tests/prerelease/stb_lib.h	/^void stb_reverse(void *p, size_t n, size_t sz)$/;"	f	typeref:typename:void
stb_sb_add	stb/deprecated/stretchy_buffer.h	/^#define stb_sb_add(/;"	d
stb_sb_count	stb/deprecated/stretchy_buffer.h	/^#define stb_sb_count(/;"	d
stb_sb_free	stb/deprecated/stretchy_buffer.h	/^#define stb_sb_free(/;"	d
stb_sb_last	stb/deprecated/stretchy_buffer.h	/^#define stb_sb_last(/;"	d
stb_sb_push	stb/deprecated/stretchy_buffer.h	/^#define stb_sb_push(/;"	d
stb_scalloc	stb/deprecated/stb.h	/^void *stb_scalloc(size_t n, size_t sz)$/;"	f	typeref:typename:void *
stb_sdict__copy	stb/deprecated/stb.h	/^#define stb_sdict__copy(/;"	d
stb_sdict__dispose	stb/deprecated/stb.h	/^#define stb_sdict__dispose(/;"	d
stb_sdict_change	stb/deprecated/stb.h	/^void * stb_sdict_change(stb_sdict *d, char *str, void *p)$/;"	f	typeref:typename:void *
stb_sdict_change	stb/tests/prerelease/stb_lib.h	/^void * stb_sdict_change(stb_sdict *d, char *str, void *p)$/;"	f	typeref:typename:void *
stb_sdict_copy	stb/deprecated/stb.h	/^stb_sdict* stb_sdict_copy(stb_sdict *old)$/;"	f	typeref:typename:stb_sdict *
stb_sdict_copy	stb/tests/prerelease/stb_lib.h	/^stb_sdict* stb_sdict_copy(stb_sdict *old)$/;"	f	typeref:typename:stb_sdict *
stb_sdict_count	stb/deprecated/stb.h	/^int stb_sdict_count(stb_sdict *a)$/;"	f	typeref:typename:stb_define_hash_base (STB_noprefix,stb_sdict,void * arena;,stb_sdict_,stb_sdictinternal_,0.85f,char *,NULL,STB_SDEL,stb_sdict__copy,stb_sdict__dispose,STB_safecompare,!strcmp,STB_equal,return stb_hash (k);,void *,STB_nullvalue,NULL)int
stb_sdict_count	stb/tests/prerelease/stb_lib.h	/^int stb_sdict_count(stb_sdict *a)$/;"	f	typeref:typename:stb_define_hash_base (STB_noprefix,stb_sdict,STB_nofields,stb_sdict_,stb_sdictinternal_,0.85f,char *,NULL,STB_SDEL,strdup,free,STB_safecompare,!strcmp,STB_equal,return stb_hash (k);,void *,STB_nullvalue,NULL)int
stb_sdict_delete	stb/deprecated/stb.h	/^void stb_sdict_delete(stb_sdict *d)$/;"	f	typeref:typename:void
stb_sdict_delete	stb/tests/prerelease/stb_lib.h	/^void stb_sdict_delete(stb_sdict *d)$/;"	f	typeref:typename:void
stb_sdict_for	stb/deprecated/stb.h	/^#define stb_sdict_for(/;"	d
stb_sdict_for	stb/tests/prerelease/stb_lib.h	/^#define stb_sdict_for(/;"	d
stb_sdict_internal_key	stb/deprecated/stb.h	/^char* stb_sdict_internal_key(stb_sdict *a, int n)$/;"	f	typeref:typename:char *
stb_sdict_internal_key	stb/tests/prerelease/stb_lib.h	/^char* stb_sdict_internal_key(stb_sdict *a, int n)$/;"	f	typeref:typename:char *
stb_sdict_internal_limit	stb/deprecated/stb.h	/^int stb_sdict_internal_limit(stb_sdict *a)$/;"	f	typeref:typename:int
stb_sdict_internal_limit	stb/tests/prerelease/stb_lib.h	/^int stb_sdict_internal_limit(stb_sdict *a)$/;"	f	typeref:typename:int
stb_sdict_internal_value	stb/deprecated/stb.h	/^void* stb_sdict_internal_value(stb_sdict *a, int n)$/;"	f	typeref:typename:void *
stb_sdict_internal_value	stb/tests/prerelease/stb_lib.h	/^void* stb_sdict_internal_value(stb_sdict *a, int n)$/;"	f	typeref:typename:void *
stb_sdict_new	stb/deprecated/stb.h	/^stb_sdict * stb_sdict_new(int use_arena)$/;"	f	typeref:typename:stb_sdict *
stb_sdict_new	stb/tests/prerelease/stb_lib.h	/^stb_sdict * stb_sdict_new(void)$/;"	f	typeref:typename:stb_sdict *
stb_search	stb/deprecated/stb.h	/^} stb_search;$/;"	t	typeref:struct:__anonfe33527c0408
stb_search_binary	stb/deprecated/stb.h	/^int stb_search_binary(stb_search *s, int minv, int maxv, int find_smallest)$/;"	f	typeref:typename:int
stb_search_open	stb/deprecated/stb.h	/^int stb_search_open(stb_search *s, int minv, int find_smallest)$/;"	f	typeref:typename:int
stb_sem_delete	stb/deprecated/stb.h	/^void          stb_sem_delete(stb_semaphore s)    { if (s != NULL) CloseHandle(s); }$/;"	f	typeref:typename:void
stb_sem_new	stb/deprecated/stb.h	/^stb_semaphore stb_sem_new(int maxv)                {return CreateSemaphoreA(NULL,0,maxv,NULL); }$/;"	f	typeref:typename:stb_semaphore
stb_sem_new_extra	stb/deprecated/stb.h	/^stb_semaphore stb_sem_new_extra(int maxv,int start){return CreateSemaphoreA(NULL,start,maxv,NULL/;"	f	typeref:typename:stb_semaphore
stb_sem_release	stb/deprecated/stb.h	/^void          stb_sem_release(stb_semaphore s)   { ReleaseSemaphore(s,1,NULL); }$/;"	f	typeref:typename:void
stb_sem_waitfor	stb/deprecated/stb.h	/^void          stb_sem_waitfor(stb_semaphore s)   { WaitForSingleObject(s, 0xffffffff); } \/\/ IN/;"	f	typeref:typename:void
stb_semaphore	stb/deprecated/stb.h	/^typedef void *stb_semaphore;$/;"	t	typeref:typename:void *
stb_sfree	stb/deprecated/stb.h	/^void stb_sfree(void *p)$/;"	f	typeref:typename:void
stb_sha1	stb/deprecated/stb.h	/^void stb_sha1(stb_uchar output[20], stb_uchar *buffer, stb_uint len)$/;"	f	typeref:typename:void
stb_sha1	stb/tests/prerelease/stb_lib.h	/^void stb_sha1(stb_uchar output[20], stb_uchar *buffer, stb_uint len)$/;"	f	typeref:typename:void
stb_sha1_file	stb/deprecated/stb.h	/^int stb_sha1_file(stb_uchar output[20], char *file)$/;"	f	typeref:typename:int
stb_sha1_file	stb/tests/prerelease/stb_lib.h	/^int stb_sha1_file(stb_uchar output[20], char *file)$/;"	f	typeref:typename:int
stb_sha1_readable	stb/deprecated/stb.h	/^void stb_sha1_readable(char display[27], unsigned char sha[20])$/;"	f	typeref:typename:void
stb_shorten_path_readable	stb/deprecated/stb.h	/^char * stb_shorten_path_readable(char *path, int len)$/;"	f	typeref:typename:char *
stb_shorten_path_readable	stb/tests/prerelease/stb_lib.h	/^char * stb_shorten_path_readable(char *path, int len)$/;"	f	typeref:typename:char *
stb_shuffle	stb/deprecated/stb.h	/^void stb_shuffle(void *p, size_t n, size_t sz, unsigned int seed)$/;"	f	typeref:typename:void
stb_shuffle	stb/tests/prerelease/stb_lib.h	/^void stb_shuffle(void *p, size_t n, size_t sz, unsigned long seed)$/;"	f	typeref:typename:void
stb_size	stb/deprecated/stb.h	/^unsigned int stb_size(stbfile *f) { return f->size(f); }$/;"	f	typeref:typename:unsigned int
stb_size_ranged	stb/deprecated/stb.h	/^int     stb_size_ranged(int b, stb_uint n)$/;"	f	typeref:typename:int
stb_size_varlen	stb/deprecated/stb.h	/^int stb_size_varlen(int v) { return stb_size_varlenu(stb__varlen_xform(v)); }$/;"	f	typeref:typename:int
stb_size_varlen64	stb/deprecated/stb.h	/^int stb_size_varlen64(stb_uint64 v)$/;"	f	typeref:typename:int
stb_size_varlenu	stb/deprecated/stb.h	/^int stb_size_varlenu(unsigned int v)$/;"	f	typeref:typename:int
stb_skipnewline	stb/deprecated/stb.h	/^char *stb_skipnewline(char *s)$/;"	f	typeref:typename:char *
stb_skipnewline	stb/tests/prerelease/stb_lib.h	/^char *stb_skipnewline(char *s)$/;"	f	typeref:typename:char *
stb_skipwhite	stb/deprecated/stb.h	/^char *stb_skipwhite(char *s)$/;"	f	typeref:typename:char *
stb_skipwhite	stb/tests/prerelease/stb_lib.h	/^char *stb_skipwhite(char *s)$/;"	f	typeref:typename:char *
stb_smalloc	stb/deprecated/stb.h	/^void *stb_smalloc(size_t sz)$/;"	f	typeref:typename:void *
stb_smoothstep	stb/deprecated/stb.h	/^float stb_smoothstep(float t)$/;"	f	typeref:typename:float
stb_snprintf	stb/deprecated/stb.h	/^int stb_snprintf(char *s, size_t n, const char *fmt, ...)$/;"	f	typeref:typename:int
stb_snprintf	stb/tests/prerelease/stb_lib.h	/^int stb_snprintf(char *s, size_t n, const char *fmt, ...)$/;"	f	typeref:typename:int
stb_source_path	stb/deprecated/stb.h	/^void stb_source_path(char *path)$/;"	f	typeref:typename:void
stb_sparse_ptr_matrix_free	stb/deprecated/stb.h	/^void stb_sparse_ptr_matrix_free(stb_spmatrix *z)$/;"	f	typeref:typename:void
stb_sparse_ptr_matrix_get	stb/deprecated/stb.h	/^void *stb_sparse_ptr_matrix_get(stb_spmatrix *z, void *a, void *b, int create)$/;"	f	typeref:typename:void *
stb_sparse_ptr_matrix_new	stb/deprecated/stb.h	/^stb_spmatrix *stb_sparse_ptr_matrix_new(int val_size)$/;"	f
stb_splitpath	stb/deprecated/stb.h	/^char *stb_splitpath(char *output, char *src, int flag)$/;"	f	typeref:typename:char *
stb_splitpath	stb/tests/prerelease/stb_lib.h	/^char *stb_splitpath(char *output, char *src, int flag)$/;"	f	typeref:typename:char *
stb_splitpath_flag	stb/deprecated/stb.h	/^enum stb_splitpath_flag$/;"	g
stb_splitpath_flag	stb/tests/prerelease/stb_lib.h	/^enum stb_splitpath_flag$/;"	g
stb_splitpathdup	stb/deprecated/stb.h	/^char *stb_splitpathdup(char *src, int flag)$/;"	f	typeref:typename:char *
stb_splitpathdup	stb/tests/prerelease/stb_lib.h	/^char *stb_splitpathdup(char *src, int flag)$/;"	f	typeref:typename:char *
stb_spmatrix	stb/deprecated/stb.h	/^typedef struct stb__st_stb_spmatrix stb_spmatrix;$/;"	t	typeref:struct:stb__st_stb_spmatrix
stb_sprintf	stb/deprecated/stb.h	/^char *stb_sprintf(const char *fmt, ...)$/;"	f	typeref:typename:char *
stb_sprintf	stb/tests/prerelease/stb_lib.h	/^char *stb_sprintf(const char *fmt, ...)$/;"	f	typeref:typename:char *
stb_srand	stb/deprecated/stb.h	/^void stb_srand(unsigned int seed)$/;"	f	typeref:typename:void
stb_srand	stb/tests/prerelease/stb_lib.h	/^void stb_srand(unsigned long seed)$/;"	f	typeref:typename:void
stb_srandLCG	stb/deprecated/stb.h	/^unsigned int  stb_srandLCG(unsigned int seed)$/;"	f	typeref:typename:unsigned int
stb_srandLCG	stb/tests/prerelease/stb_lib.h	/^unsigned long stb_srandLCG(unsigned long seed)$/;"	f	typeref:typename:unsigned long
stb_srealloc	stb/deprecated/stb.h	/^void *stb_srealloc(void *p, size_t sz)$/;"	f	typeref:typename:void *
stb_ssize	stb/deprecated/stb.h	/^int stb_ssize(void *p)$/;"	f	typeref:typename:int
stb_sstrdup	stb/deprecated/stb.h	/^char *stb_sstrdup(char *s)$/;"	f	typeref:typename:char *
stb_strchr2	stb/deprecated/stb.h	/^char *stb_strchr2(char *s, char x, char y)$/;"	f	typeref:typename:char *
stb_strchr2	stb/tests/prerelease/stb_lib.h	/^char *stb_strchr2(char *s, char x, char y)$/;"	f	typeref:typename:char *
stb_strdup	stb/deprecated/stb.h	/^char *stb_strdup(char *str, void *pool)$/;"	f	typeref:typename:char *
stb_strichr	stb/deprecated/stb.h	/^char *stb_strichr(char *s, char t)$/;"	f	typeref:typename:char *
stb_strichr	stb/tests/prerelease/stb_lib.h	/^char *stb_strichr(char *s, char t)$/;"	f	typeref:typename:char *
stb_stricmp	stb/deprecated/stb.h	/^   #define stb_stricmp(/;"	d
stb_stricmp	stb/tests/prerelease/stb_lib.h	/^   #define stb_stricmp(/;"	d
stb_stringfile	stb/deprecated/stb.h	/^char ** stb_stringfile(char *filename, int *plen)$/;"	f	typeref:typename:char **
stb_stringfile	stb/tests/prerelease/stb_lib.h	/^char ** stb_stringfile(char *filename, int *plen)$/;"	f	typeref:typename:char **
stb_stringfile_trimmed	stb/deprecated/stb.h	/^char ** stb_stringfile_trimmed(char *name, int *len, char comment)$/;"	f	typeref:typename:char **
stb_strip_final_slash	stb/deprecated/stb.h	/^char *stb_strip_final_slash(char *t)$/;"	f	typeref:typename:char *
stb_strip_final_slash_regardless	stb/deprecated/stb.h	/^char *stb_strip_final_slash_regardless(char *t)$/;"	f	typeref:typename:char *
stb_stristr	stb/deprecated/stb.h	/^char *stb_stristr(char *s, char *t)$/;"	f	typeref:typename:char *
stb_stristr	stb/tests/prerelease/stb_lib.h	/^char *stb_stristr(char *s, char *t)$/;"	f	typeref:typename:char *
stb_strncpy	stb/deprecated/stb.h	/^char *stb_strncpy(char *s, char *t, int n)$/;"	f	typeref:typename:char *
stb_strncpy	stb/tests/prerelease/stb_lib.h	/^char *stb_strncpy(char *s, char *t, int n)$/;"	f	typeref:typename:char *
stb_strnicmp	stb/deprecated/stb.h	/^   #define stb_strnicmp(/;"	d
stb_strnicmp	stb/tests/prerelease/stb_lib.h	/^   #define stb_strnicmp(/;"	d
stb_strrchr2	stb/deprecated/stb.h	/^char *stb_strrchr2(char *s, char x, char y)$/;"	f	typeref:typename:char *
stb_strrchr2	stb/tests/prerelease/stb_lib.h	/^char *stb_strrchr2(char *s, char x, char y)$/;"	f	typeref:typename:char *
stb_strscpy	stb/deprecated/stb.h	/^size_t stb_strscpy(char *d, const char *s, size_t n)$/;"	f	typeref:typename:size_t
stb_strscpy	stb/tests/prerelease/stb_lib.h	/^size_t stb_strscpy(char *d, const char *s, size_t n)$/;"	f	typeref:typename:size_t
stb_strtok	stb/deprecated/stb.h	/^char *stb_strtok(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok	stb/tests/prerelease/stb_lib.h	/^char *stb_strtok(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok_invert	stb/deprecated/stb.h	/^char *stb_strtok_invert(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok_invert	stb/tests/prerelease/stb_lib.h	/^char *stb_strtok_invert(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok_keep	stb/deprecated/stb.h	/^char *stb_strtok_keep(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok_keep	stb/tests/prerelease/stb_lib.h	/^char *stb_strtok_keep(char *output, char *src, char *delimit)$/;"	f	typeref:typename:char *
stb_strtok_raw	stb/deprecated/stb.h	/^static char *stb_strtok_raw(char *output, char *src, char *delimit, int keep, int invert)$/;"	f	typeref:typename:char *
stb_strtok_raw	stb/tests/prerelease/stb_lib.h	/^static char *stb_strtok_raw(char *output, char *src, char *delimit, int keep, int invert)$/;"	f	typeref:typename:char *
stb_substr	stb/deprecated/stb.h	/^char *stb_substr(char *t, int n)$/;"	f	typeref:typename:char *
stb_substr	stb/tests/prerelease/stb_lib.h	/^char *stb_substr(char *t, int n)$/;"	f	typeref:typename:char *
stb_suffix	stb/deprecated/stb.h	/^int stb_suffix(char *s, char *t)$/;"	f	typeref:typename:int
stb_suffix	stb/tests/prerelease/stb_lib.h	/^int stb_suffix(char *s, char *t)$/;"	f	typeref:typename:int
stb_suffixi	stb/deprecated/stb.h	/^int stb_suffixi(char *s, char *t)$/;"	f	typeref:typename:int
stb_suffixi	stb/tests/prerelease/stb_lib.h	/^int stb_suffixi(char *s, char *t)$/;"	f	typeref:typename:int
stb_swap	stb/deprecated/stb.h	/^void stb_swap(void *p, void *q, size_t sz)$/;"	f	typeref:typename:void
stb_swap	stb/tests/prerelease/stb_lib.h	/^void stb_swap(void *p, void *q, size_t sz)$/;"	f	typeref:typename:void
stb_sync	stb/deprecated/stb.h	/^typedef struct stb__sync *stb_sync;$/;"	t	typeref:struct:stb__sync *
stb_sync_delete	stb/deprecated/stb.h	/^void stb_sync_delete(stb_sync s)$/;"	f	typeref:typename:void
stb_sync_new	stb/deprecated/stb.h	/^stb_sync stb_sync_new(void)$/;"	f	typeref:typename:stb_sync
stb_sync_reach	stb/deprecated/stb.h	/^int stb_sync_reach(stb_sync s)$/;"	f	typeref:typename:int
stb_sync_reach_and_wait	stb/deprecated/stb.h	/^void stb_sync_reach_and_wait(stb_sync s)$/;"	f	typeref:typename:void
stb_sync_set_target	stb/deprecated/stb.h	/^int stb_sync_set_target(stb_sync s, int count)$/;"	f	typeref:typename:int
stb_tell	stb/deprecated/stb.h	/^unsigned int stb_tell(stbfile *f) { return f->tell(f); }$/;"	f	typeref:typename:unsigned int
stb_temp	stb/deprecated/stb.h	/^#define stb_temp(/;"	d
stb_tempfree	stb/deprecated/stb.h	/^void   stb_tempfree(void *b, void *p)$/;"	f	typeref:typename:void
stb_text_create_undo_record	stb/stb_textedit.h	/^static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)$/;"	f	typeref:typename:StbUndoRecord *
stb_text_createundo	stb/stb_textedit.h	/^static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, /;"	f	typeref:typename:STB_TEXTEDIT_CHARTYPE *
stb_text_locate_coord	stb/stb_textedit.h	/^static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)$/;"	f	typeref:typename:int
stb_text_makeundo_delete	stb/stb_textedit.h	/^static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whe/;"	f	typeref:typename:void
stb_text_makeundo_insert	stb/stb_textedit.h	/^static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)$/;"	f	typeref:typename:void
stb_text_makeundo_replace	stb/stb_textedit.h	/^static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int wh/;"	f	typeref:typename:void
stb_text_redo	stb/stb_textedit.h	/^static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_text_undo	stb/stb_textedit.h	/^static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_clamp	stb/stb_textedit.h	/^static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_clear_state	stb/stb_textedit.h	/^static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)$/;"	f	typeref:typename:void
stb_textedit_click	stb/stb_textedit.h	/^static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floa/;"	f	typeref:typename:void
stb_textedit_cut	stb/stb_textedit.h	/^static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:int
stb_textedit_delete	stb/stb_textedit.h	/^static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, i/;"	f	typeref:typename:void
stb_textedit_delete_selection	stb/stb_textedit.h	/^static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_discard_redo	stb/stb_textedit.h	/^static void stb_textedit_discard_redo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_discard_undo	stb/stb_textedit.h	/^static void stb_textedit_discard_undo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_drag	stb/stb_textedit.h	/^static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float/;"	f	typeref:typename:void
stb_textedit_find_charpos	stb/stb_textedit.h	/^static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int s/;"	f	typeref:typename:void
stb_textedit_flush_redo	stb/stb_textedit.h	/^static void stb_textedit_flush_redo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_initialize_state	stb/stb_textedit.h	/^static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)$/;"	f	typeref:typename:void
stb_textedit_key	stb/stb_textedit.h	/^static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_KE/;"	f	typeref:typename:void
stb_textedit_move_to_first	stb/stb_textedit.h	/^static void stb_textedit_move_to_first(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_move_to_last	stb/stb_textedit.h	/^static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_move_to_word_next	stb/stb_textedit.h	/^static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *str, int c )$/;"	f	typeref:typename:int
stb_textedit_move_to_word_previous	stb/stb_textedit.h	/^static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *str, int c )$/;"	f	typeref:typename:int
stb_textedit_paste	stb/stb_textedit.h	/^static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_C/;"	f	typeref:typename:int
stb_textedit_paste_internal	stb/stb_textedit.h	/^static int stb_textedit_paste_internal(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_T/;"	f	typeref:typename:int
stb_textedit_prep_selection_at_cursor	stb/stb_textedit.h	/^static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_sortselection	stb/stb_textedit.h	/^static void stb_textedit_sortselection(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_thread	stb/deprecated/stb.h	/^typedef void *stb_thread;$/;"	t	typeref:typename:void *
stb_thread_cleanup	stb/deprecated/stb.h	/^void stb_thread_cleanup(void)$/;"	f	typeref:typename:void
stb_thread_func	stb/deprecated/stb.h	/^typedef void * (*stb_thread_func)(void *);$/;"	t	typeref:typename:void * (*)(void *)
stb_threadq_add	stb/deprecated/stb.h	/^int stb_threadq_add(stb_threadqueue *tq, void *input)$/;"	f	typeref:typename:int
stb_threadq_add_block	stb/deprecated/stb.h	/^int stb_threadq_add_block(stb_threadqueue *tq, void *input)$/;"	f	typeref:typename:int
stb_threadq_delete	stb/deprecated/stb.h	/^void stb_threadq_delete(stb_threadqueue *tq)$/;"	f	typeref:typename:void
stb_threadq_get	stb/deprecated/stb.h	/^int stb_threadq_get(stb_threadqueue *tq, void *output)$/;"	f	typeref:typename:int
stb_threadq_get_block	stb/deprecated/stb.h	/^void stb_threadq_get_block(stb_threadqueue *tq, void *output)$/;"	f	typeref:typename:void
stb_threadq_length	stb/deprecated/stb.h	/^int stb_threadq_length(stb_threadqueue *tq2)$/;"	f	typeref:typename:int
stb_threadq_new	stb/deprecated/stb.h	/^stb_threadqueue *stb_threadq_new(int item_size, int num_items, int many_add, int many_remove)$/;"	f	typeref:typename:stb_threadqueue *
stb_threadqueue	stb/deprecated/stb.h	/^typedef struct stb__threadqueue stb_threadqueue;$/;"	t	typeref:struct:stb__threadqueue
stb_to_utf8	stb/deprecated/stb.h	/^char * stb_to_utf8(char *buffer, const stb__wchar *str, int n)$/;"	f	typeref:typename:char *
stb_to_utf8	stb/tests/prerelease/stb_lib.h	/^char * stb_to_utf8(char *buffer, stb__wchar *str, int n)$/;"	f	typeref:typename:char *
stb_tokens	stb/deprecated/stb.h	/^char **stb_tokens(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_allowempty	stb/deprecated/stb.h	/^char **stb_tokens_allowempty(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_allowempty	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens_allowempty(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_nested	stb/deprecated/stb.h	/^char **stb_tokens_nested(char *src, char *delimit, int *count, char *nest_in, char *nest_out)$/;"	f	typeref:typename:char **
stb_tokens_nested	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens_nested(char *src, char *delimit, int *count, char *nest_in, char *nest_out)$/;"	f	typeref:typename:char **
stb_tokens_nested_empty	stb/deprecated/stb.h	/^char **stb_tokens_nested_empty(char *src, char *delimit, int *count, char *nest_in, char *nest_o/;"	f	typeref:typename:char **
stb_tokens_nested_empty	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens_nested_empty(char *src, char *delimit, int *count, char *nest_in, char *nest_o/;"	f	typeref:typename:char **
stb_tokens_quoted	stb/deprecated/stb.h	/^char **stb_tokens_quoted(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_quoted	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens_quoted(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_raw	stb/deprecated/stb.h	/^static char **stb_tokens_raw(char *src_, char *delimit, int *count,$/;"	f	typeref:typename:char **
stb_tokens_raw	stb/tests/prerelease/stb_lib.h	/^static char **stb_tokens_raw(char *src_, char *delimit, int *count,$/;"	f	typeref:typename:char **
stb_tokens_stripwhite	stb/deprecated/stb.h	/^char **stb_tokens_stripwhite(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tokens_stripwhite	stb/tests/prerelease/stb_lib.h	/^char **stb_tokens_stripwhite(char *src, char *delimit, int *count)$/;"	f	typeref:typename:char **
stb_tolower	stb/deprecated/stb.h	/^void stb_tolower(char *s)$/;"	f	typeref:typename:void
stb_tolower	stb/tests/prerelease/stb_lib.h	/^void stb_tolower(char *s)$/;"	f	typeref:typename:void
stb_trimwhite	stb/deprecated/stb.h	/^char *stb_trimwhite(char *s)$/;"	f	typeref:typename:char *
stb_trimwhite	stb/tests/prerelease/stb_lib.h	/^char *stb_trimwhite(char *s)$/;"	f	typeref:typename:char *
stb_uchar	stb/deprecated/stb.h	/^typedef unsigned char stb_uchar;$/;"	t	typeref:typename:unsigned char
stb_uchar	stb/tests/prerelease/stb_lib.h	/^typedef unsigned char stb_uchar;$/;"	t	typeref:typename:unsigned char
stb_ucharcmp	stb/deprecated/stb.h	/^int (*stb_ucharcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_ucharcmp	stb/tests/prerelease/stb_lib.h	/^int (*stb_ucharcmp(int offset))(const void *, const void *)$/;"	f	typeref:typename:int (*)(const void *,const void *)
stb_uidict_reset	stb/deprecated/stb.h	/^void stb_uidict_reset(stb_uidict *e)$/;"	f	typeref:typename:stb_define_hash_base (STB_noprefix,stb_uidict,STB_nofields,stb_uidict_,stb_uidict_,0.85f,stb_int32,0xffffffff,0xfffffffe,STB_nocopy,STB_nodelete,STB_nosafe,STB_equal,STB_equal,return stb_rehash_improved (k);,stb_uint32,STB_nonullvalue,0)void
stb_uint	stb/deprecated/stb.h	/^typedef unsigned int  stb_uint;$/;"	t	typeref:typename:unsigned int
stb_uint	stb/tests/prerelease/stb_lib.h	/^typedef unsigned int  stb_uint;$/;"	t	typeref:typename:unsigned int
stb_uint16	stb/deprecated/stb.h	/^typedef unsigned short stb_uint16;$/;"	t	typeref:typename:unsigned short
stb_uint16	stb/tests/prerelease/stb_lib.h	/^typedef unsigned short stb_uint16;$/;"	t	typeref:typename:unsigned short
stb_uint32	stb/deprecated/stb.h	/^  typedef unsigned int   stb_uint32;$/;"	t	typeref:typename:unsigned int
stb_uint32	stb/deprecated/stb.h	/^  typedef unsigned long  stb_uint32;$/;"	t	typeref:typename:unsigned long
stb_uint32	stb/tests/prerelease/stb_lib.h	/^  typedef unsigned int   stb_uint32;$/;"	t	typeref:typename:unsigned int
stb_uint32	stb/tests/prerelease/stb_lib.h	/^  typedef unsigned long  stb_uint32;$/;"	t	typeref:typename:unsigned long
stb_uint64	stb/deprecated/stb.h	/^  typedef unsigned __int64 stb_uint64;$/;"	t	typeref:typename:unsigned __int64
stb_uint64	stb/deprecated/stb.h	/^  typedef unsigned long long stb_uint64;$/;"	t	typeref:typename:unsigned long long
stb_uint64	stb/tests/prerelease/stb_lib.h	/^  typedef unsigned __int64 stb_uint64;$/;"	t	typeref:typename:unsigned __int64
stb_uint64	stb/tests/prerelease/stb_lib.h	/^  typedef unsigned long long stb_uint64;$/;"	t	typeref:typename:unsigned long long
stb_uint8	stb/deprecated/stb.h	/^typedef unsigned char stb_uint8;$/;"	t	typeref:typename:unsigned char
stb_uint8	stb/tests/prerelease/stb_lib.h	/^typedef unsigned char stb_uint8;$/;"	t	typeref:typename:unsigned char
stb_uinta	stb/deprecated/stb.h	/^typedef stb_uint32 stb_uinta;$/;"	t	typeref:typename:stb_uint32
stb_uinta	stb/deprecated/stb.h	/^typedef stb_uint64 stb_uinta;$/;"	t	typeref:typename:stb_uint64
stb_uintptr	stb/deprecated/stb.h	/^} stb_uintptr;$/;"	t	typeref:union:__anonfe33527c010a
stb_unlerp	stb/deprecated/stb.h	/^#define stb_unlerp(/;"	d
stb_unlerp	stb/tests/prerelease/stb_lib.h	/^#define stb_unlerp(/;"	d
stb_vorbis	stb/stb_vorbis.c	/^struct stb_vorbis$/;"	s	file:
stb_vorbis	stb/stb_vorbis.c	/^typedef struct stb_vorbis stb_vorbis;$/;"	t	typeref:struct:stb_vorbis	file:
stb_vorbis_alloc	stb/stb_vorbis.c	/^} stb_vorbis_alloc;$/;"	t	typeref:struct:__anon008e12ab0108	file:
stb_vorbis_close	stb/stb_vorbis.c	/^void stb_vorbis_close(stb_vorbis *p)$/;"	f	typeref:typename:void
stb_vorbis_comment	stb/stb_vorbis.c	/^} stb_vorbis_comment;$/;"	t	typeref:struct:__anon008e12ab0308	file:
stb_vorbis_decode_filename	stb/stb_vorbis.c	/^int stb_vorbis_decode_filename(const char *filename, int *channels, int *sample_rate, short **ou/;"	f	typeref:typename:int
stb_vorbis_decode_frame_pushdata	stb/stb_vorbis.c	/^int stb_vorbis_decode_frame_pushdata($/;"	f	typeref:typename:int
stb_vorbis_decode_memory	stb/stb_vorbis.c	/^int stb_vorbis_decode_memory(const uint8 *mem, int len, int *channels, int *sample_rate, short */;"	f	typeref:typename:int
stb_vorbis_float_size_test	stb/stb_vorbis.c	/^   typedef char stb_vorbis_float_size_test[sizeof(float)==4 && sizeof(int) == 4];$/;"	t	typeref:typename:char[sizeof (float)==4&& sizeof (int)==4]	file:
stb_vorbis_flush_pushdata	stb/stb_vorbis.c	/^void stb_vorbis_flush_pushdata(stb_vorbis *f)$/;"	f	typeref:typename:void
stb_vorbis_get_comment	stb/stb_vorbis.c	/^stb_vorbis_comment stb_vorbis_get_comment(stb_vorbis *f)$/;"	f	typeref:typename:stb_vorbis_comment
stb_vorbis_get_error	stb/stb_vorbis.c	/^int stb_vorbis_get_error(stb_vorbis *f)$/;"	f	typeref:typename:int
stb_vorbis_get_file_offset	stb/stb_vorbis.c	/^unsigned int stb_vorbis_get_file_offset(stb_vorbis *f)$/;"	f	typeref:typename:unsigned int
stb_vorbis_get_frame_float	stb/stb_vorbis.c	/^int stb_vorbis_get_frame_float(stb_vorbis *f, int *channels, float ***output)$/;"	f	typeref:typename:int
stb_vorbis_get_frame_short	stb/stb_vorbis.c	/^int stb_vorbis_get_frame_short(stb_vorbis *f, int num_c, short **buffer, int num_samples)$/;"	f	typeref:typename:int
stb_vorbis_get_frame_short_interleaved	stb/stb_vorbis.c	/^int stb_vorbis_get_frame_short_interleaved(stb_vorbis *f, int num_c, short *buffer, int num_shor/;"	f	typeref:typename:int
stb_vorbis_get_info	stb/stb_vorbis.c	/^stb_vorbis_info stb_vorbis_get_info(stb_vorbis *f)$/;"	f	typeref:typename:stb_vorbis_info
stb_vorbis_get_sample_offset	stb/stb_vorbis.c	/^int stb_vorbis_get_sample_offset(stb_vorbis *f)$/;"	f	typeref:typename:int
stb_vorbis_get_samples_float	stb/stb_vorbis.c	/^int stb_vorbis_get_samples_float(stb_vorbis *f, int channels, float **buffer, int num_samples)$/;"	f	typeref:typename:int
stb_vorbis_get_samples_float_interleaved	stb/stb_vorbis.c	/^int stb_vorbis_get_samples_float_interleaved(stb_vorbis *f, int channels, float *buffer, int num/;"	f	typeref:typename:int
stb_vorbis_get_samples_short	stb/stb_vorbis.c	/^int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int len)$/;"	f	typeref:typename:int
stb_vorbis_get_samples_short_interleaved	stb/stb_vorbis.c	/^int stb_vorbis_get_samples_short_interleaved(stb_vorbis *f, int channels, short *buffer, int num/;"	f	typeref:typename:int
stb_vorbis_info	stb/stb_vorbis.c	/^} stb_vorbis_info;$/;"	t	typeref:struct:__anon008e12ab0208	file:
stb_vorbis_open_file	stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_al/;"	f	typeref:typename:stb_vorbis *
stb_vorbis_open_file_section	stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_v/;"	f	typeref:typename:stb_vorbis *
stb_vorbis_open_filename	stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_filename(const char *filename, int *error, const stb_vorbis_alloc */;"	f	typeref:typename:stb_vorbis *
stb_vorbis_open_memory	stb/stb_vorbis.c	/^stb_vorbis * stb_vorbis_open_memory(const unsigned char *data, int len, int *error, const stb_vo/;"	f	typeref:typename:stb_vorbis *
stb_vorbis_open_pushdata	stb/stb_vorbis.c	/^stb_vorbis *stb_vorbis_open_pushdata($/;"	f	typeref:typename:stb_vorbis *
stb_vorbis_seek	stb/stb_vorbis.c	/^int stb_vorbis_seek(stb_vorbis *f, unsigned int sample_number)$/;"	f	typeref:typename:int
stb_vorbis_seek_frame	stb/stb_vorbis.c	/^int stb_vorbis_seek_frame(stb_vorbis *f, unsigned int sample_number)$/;"	f	typeref:typename:int
stb_vorbis_seek_start	stb/stb_vorbis.c	/^int stb_vorbis_seek_start(stb_vorbis *f)$/;"	f	typeref:typename:int
stb_vorbis_stream_length_in_samples	stb/stb_vorbis.c	/^unsigned int stb_vorbis_stream_length_in_samples(stb_vorbis *f)$/;"	f	typeref:typename:unsigned int
stb_vorbis_stream_length_in_seconds	stb/stb_vorbis.c	/^float stb_vorbis_stream_length_in_seconds(stb_vorbis *f)$/;"	f	typeref:typename:float
stb_vsnprintf	stb/deprecated/stb.h	/^int stb_vsnprintf(char *s, size_t n, const char *fmt, va_list v)$/;"	f	typeref:typename:int
stb_vsnprintf	stb/tests/prerelease/stb_lib.h	/^int stb_vsnprintf(char *s, size_t n, const char *fmt, va_list v)$/;"	f	typeref:typename:int
stb_wildfind	stb/deprecated/stb.h	/^int stb_wildfind(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildfind	stb/tests/prerelease/stb_lib.h	/^int stb_wildfind(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildfindi	stb/deprecated/stb.h	/^int stb_wildfindi(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildfindi	stb/tests/prerelease/stb_lib.h	/^int stb_wildfindi(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildmatch	stb/deprecated/stb.h	/^int stb_wildmatch(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildmatch	stb/tests/prerelease/stb_lib.h	/^int stb_wildmatch(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildmatchi	stb/deprecated/stb.h	/^int stb_wildmatchi(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wildmatchi	stb/tests/prerelease/stb_lib.h	/^int stb_wildmatchi(char *expr, char *candidate)$/;"	f	typeref:typename:int
stb_wingraph_commandline	stb/tests/oversample/stb_wingraph.h	/^char *stb_wingraph_commandline;$/;"	v	typeref:typename:char *
stb_wordwrap	stb/deprecated/stb.h	/^int stb_wordwrap(int *pairs, int pair_max, int count, char *str)$/;"	f	typeref:typename:int
stb_wordwrapalloc	stb/deprecated/stb.h	/^int *stb_wordwrapalloc(int count, char *str)$/;"	f	typeref:typename:int *
stb_work	stb/deprecated/stb.h	/^int stb_work(stb_thread_func f, void *d, volatile void **return_code)$/;"	f	typeref:typename:int
stb_work_init	stb/deprecated/stb.h	/^static void stb_work_init(int num_threads)$/;"	f	typeref:typename:void
stb_work_maxunits	stb/deprecated/stb.h	/^int stb_work_maxunits(int n)$/;"	f	typeref:typename:int
stb_work_numthreads	stb/deprecated/stb.h	/^void stb_work_numthreads(int n)$/;"	f	typeref:typename:void
stb_work_reach	stb/deprecated/stb.h	/^int stb_work_reach(stb_thread_func f, void *d, volatile void **return_code, stb_sync rel)$/;"	f	typeref:typename:int
stb_workq	stb/deprecated/stb.h	/^int stb_workq(stb_workqueue *q, stb_thread_func f, void *d, volatile void **return_code)$/;"	f	typeref:typename:int
stb_workq_delete	stb/deprecated/stb.h	/^void stb_workq_delete(stb_workqueue *q)$/;"	f	typeref:typename:void
stb_workq_length	stb/deprecated/stb.h	/^int stb_workq_length(stb_workqueue *q)$/;"	f	typeref:typename:int
stb_workq_new	stb/deprecated/stb.h	/^stb_workqueue *stb_workq_new(int num_threads, int max_units)$/;"	f	typeref:typename:stb_workqueue *
stb_workq_new_flags	stb/deprecated/stb.h	/^stb_workqueue *stb_workq_new_flags(int numthreads, int max_units, int no_add_mutex, int no_remov/;"	f	typeref:typename:stb_workqueue *
stb_workq_numthreads	stb/deprecated/stb.h	/^void stb_workq_numthreads(stb_workqueue *q, int n)$/;"	f	typeref:typename:void
stb_workq_reach	stb/deprecated/stb.h	/^int stb_workq_reach(stb_workqueue *q, stb_thread_func f, void *d, volatile void **return_code, s/;"	f	typeref:typename:int
stb_workqueue	stb/deprecated/stb.h	/^typedef struct stb__workqueue stb_workqueue;$/;"	t	typeref:struct:stb__workqueue
stb_wrapper_allocsize	stb/deprecated/stb.h	/^size_t stb_wrapper_allocsize(void *p)$/;"	f	typeref:typename:size_t
stb_wrapper_check	stb/deprecated/stb.h	/^void stb_wrapper_check(void *p)$/;"	f	typeref:typename:void
stb_wrapper_dump	stb/deprecated/stb.h	/^void stb_wrapper_dump(char *filename)$/;"	f	typeref:typename:void
stb_wrapper_free	stb/deprecated/stb.h	/^void stb_wrapper_free(void *p, char *file, int line)$/;"	f	typeref:typename:void
stb_wrapper_listall	stb/deprecated/stb.h	/^void stb_wrapper_listall(void (*func)(void *ptr, size_t sz, char *file, int line))$/;"	f	typeref:typename:void
stb_wrapper_malloc	stb/deprecated/stb.h	/^void stb_wrapper_malloc(void *p, size_t sz, char *file, int line)$/;"	f	typeref:typename:void
stb_wrapper_realloc	stb/deprecated/stb.h	/^void stb_wrapper_realloc(void *p, void *q, size_t sz, char *file, int line)$/;"	f	typeref:typename:void
stb_write	stb/deprecated/stb.h	/^void stb_write(char *data, int data_len)$/;"	f	typeref:typename:void
stbcc__add_clump_connection	stb/stb_connected_components.h	/^static void stbcc__add_clump_connection(stbcc_grid *g, int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
stbcc__add_connections_to_adjacent_cluster	stb/stb_connected_components.h	/^static void stbcc__add_connections_to_adjacent_cluster(stbcc_grid *g, int cx, int cy, int dx, in/;"	f	typeref:typename:void
stbcc__add_connections_to_adjacent_cluster_with_rebuild	stb/stb_connected_components.h	/^static void stbcc__add_connections_to_adjacent_cluster_with_rebuild(stbcc_grid *g, int cx, int c/;"	f	typeref:typename:void
stbcc__build_all_connections_for_cluster	stb/stb_connected_components.h	/^static void stbcc__build_all_connections_for_cluster(stbcc_grid *g, int cx, int cy)$/;"	f	typeref:typename:void
stbcc__build_clumps_for_cluster	stb/stb_connected_components.h	/^static void stbcc__build_clumps_for_cluster(stbcc_grid *g, int cx, int cy)$/;"	f	typeref:typename:void
stbcc__build_connected_components_for_clumps	stb/stb_connected_components.h	/^static void stbcc__build_connected_components_for_clumps(stbcc_grid *g)$/;"	f	typeref:typename:void
stbcc__clump	stb/stb_connected_components.h	/^} stbcc__clump; \/\/ 8$/;"	t	typeref:struct:__anonc6c173d30408
stbcc__clump_find	stb/stb_connected_components.h	/^static stbcc__global_clumpid stbcc__clump_find(stbcc_grid *g, stbcc__global_clumpid n)$/;"	f	typeref:typename:stbcc__global_clumpid
stbcc__clump_union	stb/stb_connected_components.h	/^static void stbcc__clump_union(stbcc_grid *g, stbcc__unpacked_clumpid m, int x, int y, int idx)$/;"	f	typeref:typename:void
stbcc__clumpid	stb/stb_connected_components.h	/^typedef unsigned short stbcc__clumpid;$/;"	t	typeref:typename:unsigned short
stbcc__cluster	stb/stb_connected_components.h	/^} stbcc__cluster;$/;"	t	typeref:struct:__anonc6c173d30508
stbcc__cluster_build_info	stb/stb_connected_components.h	/^} stbcc__cluster_build_info;$/;"	t	typeref:struct:__anonc6c173d30708
stbcc__global_clumpid	stb/stb_connected_components.h	/^} stbcc__global_clumpid;$/;"	t	typeref:union:__anonc6c173d3020a
stbcc__incluster_find	stb/stb_connected_components.h	/^static stbcc__tinypoint stbcc__incluster_find(stbcc__cluster_build_info *cbi, int x, int y)$/;"	f	typeref:typename:stbcc__tinypoint
stbcc__incluster_union	stb/stb_connected_components.h	/^static void stbcc__incluster_union(stbcc__cluster_build_info *cbi, int x1, int y1, int x2, int y/;"	f	typeref:typename:void
stbcc__relative_clumpid	stb/stb_connected_components.h	/^} stbcc__relative_clumpid;$/;"	t	typeref:struct:__anonc6c173d30108
stbcc__remove_clump_connection	stb/stb_connected_components.h	/^static void stbcc__remove_clump_connection(stbcc_grid *g, int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
stbcc__remove_connections_to_adjacent_cluster	stb/stb_connected_components.h	/^static void stbcc__remove_connections_to_adjacent_cluster(stbcc_grid *g, int cx, int cy, int dx,/;"	f	typeref:typename:void
stbcc__switch_root	stb/stb_connected_components.h	/^static void stbcc__switch_root(stbcc__cluster_build_info *cbi, int x, int y, stbcc__tinypoint p)$/;"	f	typeref:typename:void
stbcc__tinypoint	stb/stb_connected_components.h	/^} stbcc__tinypoint;$/;"	t	typeref:struct:__anonc6c173d30608
stbcc__unpacked_clumpid	stb/stb_connected_components.h	/^} stbcc__unpacked_clumpid;$/;"	t	typeref:struct:__anonc6c173d30808
stbcc__verify_max_clumps	stb/stb_connected_components.h	/^typedef unsigned char stbcc__verify_max_clumps[STBCC__MAX_CLUMPS_PER_CLUSTER < (1 << (8*sizeof(s/;"	t	typeref:typename:unsigned char[STBCC__MAX_CLUMPS_PER_CLUSTER<(1<<(8* sizeof (stbcc__clumpid)))?1:-1]
stbcc__verify_max_exits	stb/stb_connected_components.h	/^typedef unsigned char stbcc__verify_max_exits[STBCC__MAX_EXITS_PER_CLUMP <= 256];$/;"	t	typeref:typename:unsigned char[STBCC__MAX_EXITS_PER_CLUMP<=256]
stbcc_get_unique_id	stb/stb_connected_components.h	/^unsigned int stbcc_get_unique_id(stbcc_grid *g, int x, int y)$/;"	f	typeref:typename:unsigned int
stbcc_grid	stb/stb_connected_components.h	/^typedef struct st_stbcc_grid stbcc_grid;$/;"	t	typeref:struct:st_stbcc_grid
stbcc_grid_sizeof	stb/stb_connected_components.h	/^size_t stbcc_grid_sizeof(void)$/;"	f	typeref:typename:size_t
stbcc_init_grid	stb/stb_connected_components.h	/^void stbcc_init_grid(stbcc_grid *g, unsigned char *map, int w, int h)$/;"	f	typeref:typename:void
stbcc_query_grid_node_connection	stb/stb_connected_components.h	/^int stbcc_query_grid_node_connection(stbcc_grid *g, int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:int
stbcc_query_grid_open	stb/stb_connected_components.h	/^int stbcc_query_grid_open(stbcc_grid *g, int x, int y)$/;"	f	typeref:typename:int
stbcc_update_batch_begin	stb/stb_connected_components.h	/^void stbcc_update_batch_begin(stbcc_grid *g)$/;"	f	typeref:typename:void
stbcc_update_batch_end	stb/stb_connected_components.h	/^void stbcc_update_batch_end(stbcc_grid *g)$/;"	f	typeref:typename:void
stbcc_update_grid	stb/stb_connected_components.h	/^void stbcc_update_grid(stbcc_grid *g, int x, int y, int solid)$/;"	f	typeref:typename:void
stbdiv_check	stb/stb_divide.h	/^void stbdiv_check(int q, int r, int a, int b, char *type, int dir)$/;"	f	typeref:typename:void
stbds_arraddn	stb/stb_ds.h	/^#define stbds_arraddn(/;"	d
stbds_arraddnindex	stb/stb_ds.h	/^#define stbds_arraddnindex(/;"	d
stbds_arraddnoff	stb/stb_ds.h	/^#define stbds_arraddnoff /;"	d
stbds_arraddnptr	stb/stb_ds.h	/^#define stbds_arraddnptr(/;"	d
stbds_array_grow	stb/stb_ds.h	/^size_t stbds_array_grow;$/;"	v	typeref:typename:size_t
stbds_array_header	stb/stb_ds.h	/^} stbds_array_header;$/;"	t	typeref:struct:__anona15bb9d20108
stbds_arrcap	stb/stb_ds.h	/^#define stbds_arrcap(/;"	d
stbds_arrdel	stb/stb_ds.h	/^#define stbds_arrdel(/;"	d
stbds_arrdeln	stb/stb_ds.h	/^#define stbds_arrdeln(/;"	d
stbds_arrdelswap	stb/stb_ds.h	/^#define stbds_arrdelswap(/;"	d
stbds_arrfree	stb/stb_ds.h	/^#define stbds_arrfree(/;"	d
stbds_arrfreef	stb/stb_ds.h	/^void stbds_arrfreef(void *a)$/;"	f	typeref:typename:void
stbds_arrgrow	stb/stb_ds.h	/^#define stbds_arrgrow(/;"	d
stbds_arrgrowf	stb/stb_ds.h	/^void *stbds_arrgrowf(void *a, size_t elemsize, size_t addlen, size_t min_cap)$/;"	f	typeref:typename:void *
stbds_arrgrowf_wrapper	stb/stb_ds.h	/^#define stbds_arrgrowf_wrapper /;"	d
stbds_arrgrowf_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_arrgrowf_wrapper(T *a, size_t elemsize, size_t addlen, size_t/;"	f	typeref:typename:T *
stbds_arrins	stb/stb_ds.h	/^#define stbds_arrins(/;"	d
stbds_arrinsn	stb/stb_ds.h	/^#define stbds_arrinsn(/;"	d
stbds_arrlast	stb/stb_ds.h	/^#define stbds_arrlast(/;"	d
stbds_arrlen	stb/stb_ds.h	/^#define stbds_arrlen(/;"	d
stbds_arrlenu	stb/stb_ds.h	/^#define stbds_arrlenu(/;"	d
stbds_arrmaybegrow	stb/stb_ds.h	/^#define stbds_arrmaybegrow(/;"	d
stbds_arrpop	stb/stb_ds.h	/^#define stbds_arrpop(/;"	d
stbds_arrpush	stb/stb_ds.h	/^#define stbds_arrpush /;"	d
stbds_arrput	stb/stb_ds.h	/^#define stbds_arrput(/;"	d
stbds_arrsetcap	stb/stb_ds.h	/^#define stbds_arrsetcap(/;"	d
stbds_arrsetlen	stb/stb_ds.h	/^#define stbds_arrsetlen(/;"	d
stbds_hash_alloc	stb/stb_ds.h	/^size_t stbds_hash_alloc;$/;"	v	typeref:typename:size_t
stbds_hash_bucket	stb/stb_ds.h	/^} stbds_hash_bucket; \/\/ in 32-bit, this is one 64-byte cache line; in 64-bit, each array is on/;"	t	typeref:struct:__anona15bb9d20308
stbds_hash_bytes	stb/stb_ds.h	/^size_t stbds_hash_bytes(void *p, size_t len, size_t seed)$/;"	f	typeref:typename:size_t
stbds_hash_grow	stb/stb_ds.h	/^size_t stbds_hash_grow;$/;"	v	typeref:typename:size_t
stbds_hash_index	stb/stb_ds.h	/^} stbds_hash_index;$/;"	t	typeref:struct:__anona15bb9d20408
stbds_hash_probes	stb/stb_ds.h	/^size_t stbds_hash_probes;$/;"	v	typeref:typename:size_t
stbds_hash_rebuild	stb/stb_ds.h	/^size_t stbds_hash_rebuild;$/;"	v	typeref:typename:size_t
stbds_hash_seed	stb/stb_ds.h	/^static size_t stbds_hash_seed=0x31415926;$/;"	v	typeref:typename:size_t
stbds_hash_shrink	stb/stb_ds.h	/^size_t stbds_hash_shrink;$/;"	v	typeref:typename:size_t
stbds_hash_string	stb/stb_ds.h	/^size_t stbds_hash_string(char *str, size_t seed)$/;"	f	typeref:typename:size_t
stbds_hash_table	stb/stb_ds.h	/^#define stbds_hash_table(/;"	d
stbds_header	stb/stb_ds.h	/^#define stbds_header(/;"	d
stbds_hm_find_slot	stb/stb_ds.h	/^static ptrdiff_t stbds_hm_find_slot(void *a, size_t elemsize, void *key, size_t keysize, size_t /;"	f	typeref:typename:ptrdiff_t
stbds_hmdefault	stb/stb_ds.h	/^#define stbds_hmdefault(/;"	d
stbds_hmdefaults	stb/stb_ds.h	/^#define stbds_hmdefaults(/;"	d
stbds_hmdel	stb/stb_ds.h	/^#define stbds_hmdel(/;"	d
stbds_hmdel_key	stb/stb_ds.h	/^void * stbds_hmdel_key(void *a, size_t elemsize, void *key, size_t keysize, size_t keyoffset, in/;"	f	typeref:typename:void *
stbds_hmdel_key_wrapper	stb/stb_ds.h	/^#define stbds_hmdel_key_wrapper /;"	d
stbds_hmdel_key_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_hmdel_key_wrapper(T *a, size_t elemsize, void *key, size_t ke/;"	f	typeref:typename:T *
stbds_hmfree	stb/stb_ds.h	/^#define stbds_hmfree(/;"	d
stbds_hmfree_func	stb/stb_ds.h	/^void stbds_hmfree_func(void *a, size_t elemsize)$/;"	f	typeref:typename:void
stbds_hmget	stb/stb_ds.h	/^#define stbds_hmget(/;"	d
stbds_hmget_key	stb/stb_ds.h	/^void * stbds_hmget_key(void *a, size_t elemsize, void *key, size_t keysize, int mode)$/;"	f	typeref:typename:void *
stbds_hmget_key_ts	stb/stb_ds.h	/^void * stbds_hmget_key_ts(void *a, size_t elemsize, void *key, size_t keysize, ptrdiff_t *temp, /;"	f	typeref:typename:void *
stbds_hmget_key_ts_wrapper	stb/stb_ds.h	/^#define stbds_hmget_key_ts_wrapper /;"	d
stbds_hmget_key_ts_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_hmget_key_ts_wrapper(T *a, size_t elemsize, void *key, size_t/;"	f	typeref:typename:T *
stbds_hmget_key_wrapper	stb/stb_ds.h	/^#define stbds_hmget_key_wrapper /;"	d
stbds_hmget_key_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_hmget_key_wrapper(T *a, size_t elemsize, void *key, size_t ke/;"	f	typeref:typename:T *
stbds_hmget_ts	stb/stb_ds.h	/^#define stbds_hmget_ts(/;"	d
stbds_hmgeti	stb/stb_ds.h	/^#define stbds_hmgeti(/;"	d
stbds_hmgeti_ts	stb/stb_ds.h	/^#define stbds_hmgeti_ts(/;"	d
stbds_hmgetp	stb/stb_ds.h	/^#define stbds_hmgetp(/;"	d
stbds_hmgetp_null	stb/stb_ds.h	/^#define stbds_hmgetp_null(/;"	d
stbds_hmgetp_ts	stb/stb_ds.h	/^#define stbds_hmgetp_ts(/;"	d
stbds_hmgets	stb/stb_ds.h	/^#define stbds_hmgets(/;"	d
stbds_hmlen	stb/stb_ds.h	/^#define stbds_hmlen(/;"	d
stbds_hmlenu	stb/stb_ds.h	/^#define stbds_hmlenu(/;"	d
stbds_hmput	stb/stb_ds.h	/^#define stbds_hmput(/;"	d
stbds_hmput_default	stb/stb_ds.h	/^void * stbds_hmput_default(void *a, size_t elemsize)$/;"	f	typeref:typename:void *
stbds_hmput_default_wrapper	stb/stb_ds.h	/^#define stbds_hmput_default_wrapper /;"	d
stbds_hmput_default_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_hmput_default_wrapper(T *a, size_t elemsize) {$/;"	f	typeref:typename:T *
stbds_hmput_key	stb/stb_ds.h	/^void *stbds_hmput_key(void *a, size_t elemsize, void *key, size_t keysize, int mode)$/;"	f	typeref:typename:void *
stbds_hmput_key_wrapper	stb/stb_ds.h	/^#define stbds_hmput_key_wrapper /;"	d
stbds_hmput_key_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_hmput_key_wrapper(T *a, size_t elemsize, void *key, size_t ke/;"	f	typeref:typename:T *
stbds_hmputs	stb/stb_ds.h	/^#define stbds_hmputs(/;"	d
stbds_is_key_equal	stb/stb_ds.h	/^static int stbds_is_key_equal(void *a, size_t elemsize, void *key, size_t keysize, size_t keyoff/;"	f	typeref:typename:int
stbds_load_32_or_64	stb/stb_ds.h	/^#define stbds_load_32_or_64(/;"	d
stbds_log2	stb/stb_ds.h	/^static size_t stbds_log2(size_t slot_count)$/;"	f	typeref:typename:size_t
stbds_make_hash_index	stb/stb_ds.h	/^static stbds_hash_index *stbds_make_hash_index(size_t slot_count, stbds_hash_index *ot)$/;"	f	typeref:typename:stbds_hash_index *
stbds_probe_position	stb/stb_ds.h	/^static size_t stbds_probe_position(size_t hash, size_t slot_count, size_t slot_log2)$/;"	f	typeref:typename:size_t
stbds_pshdel	stb/stb_ds.h	/^#define stbds_pshdel(/;"	d
stbds_pshget	stb/stb_ds.h	/^#define stbds_pshget(/;"	d
stbds_pshgeti	stb/stb_ds.h	/^#define stbds_pshgeti(/;"	d
stbds_pshput	stb/stb_ds.h	/^#define stbds_pshput(/;"	d
stbds_rand_seed	stb/stb_ds.h	/^void stbds_rand_seed(size_t seed)$/;"	f	typeref:typename:void
stbds_rehash_items	stb/stb_ds.h	/^size_t stbds_rehash_items;$/;"	v	typeref:typename:size_t
stbds_rehash_probes	stb/stb_ds.h	/^size_t stbds_rehash_probes;$/;"	v	typeref:typename:size_t
stbds_sh_new_arena	stb/stb_ds.h	/^#define stbds_sh_new_arena(/;"	d
stbds_sh_new_strdup	stb/stb_ds.h	/^#define stbds_sh_new_strdup(/;"	d
stbds_shdefault	stb/stb_ds.h	/^#define stbds_shdefault(/;"	d
stbds_shdefaults	stb/stb_ds.h	/^#define stbds_shdefaults(/;"	d
stbds_shdel	stb/stb_ds.h	/^#define stbds_shdel(/;"	d
stbds_shfree	stb/stb_ds.h	/^#define stbds_shfree /;"	d
stbds_shget	stb/stb_ds.h	/^#define stbds_shget(/;"	d
stbds_shgeti	stb/stb_ds.h	/^#define stbds_shgeti(/;"	d
stbds_shgetp	stb/stb_ds.h	/^#define stbds_shgetp(/;"	d
stbds_shgetp_null	stb/stb_ds.h	/^#define stbds_shgetp_null(/;"	d
stbds_shgets	stb/stb_ds.h	/^#define stbds_shgets(/;"	d
stbds_shlen	stb/stb_ds.h	/^#define stbds_shlen /;"	d
stbds_shlenu	stb/stb_ds.h	/^#define stbds_shlenu /;"	d
stbds_shmode_func	stb/stb_ds.h	/^void * stbds_shmode_func(size_t elemsize, int mode)$/;"	f	typeref:typename:void *
stbds_shmode_func_wrapper	stb/stb_ds.h	/^#define stbds_shmode_func_wrapper(/;"	d
stbds_shmode_func_wrapper	stb/stb_ds.h	/^template<class T> static T * stbds_shmode_func_wrapper(T *, size_t elemsize, int mode) {$/;"	f	typeref:typename:T *
stbds_shput	stb/stb_ds.h	/^#define stbds_shput(/;"	d
stbds_shputi	stb/stb_ds.h	/^#define stbds_shputi(/;"	d
stbds_shputs	stb/stb_ds.h	/^#define stbds_shputs(/;"	d
stbds_siphash_bytes	stb/stb_ds.h	/^static size_t stbds_siphash_bytes(void *p, size_t len, size_t seed)$/;"	f	typeref:typename:size_t
stbds_stralloc	stb/stb_ds.h	/^char *stbds_stralloc(stbds_string_arena *a, char *str)$/;"	f	typeref:typename:char *
stbds_strdup	stb/stb_ds.h	/^static char *stbds_strdup(char *str)$/;"	f	typeref:typename:char *
stbds_string_arena	stb/stb_ds.h	/^struct stbds_string_arena$/;"	s
stbds_string_arena	stb/stb_ds.h	/^typedef struct stbds_string_arena stbds_string_arena;$/;"	t	typeref:struct:stbds_string_arena
stbds_string_block	stb/stb_ds.h	/^typedef struct stbds_string_block$/;"	s
stbds_string_block	stb/stb_ds.h	/^} stbds_string_block;$/;"	t	typeref:struct:stbds_string_block
stbds_strreset	stb/stb_ds.h	/^void stbds_strreset(stbds_string_arena *a)$/;"	f	typeref:typename:void
stbds_struct	stb/stb_ds.h	/^typedef struct { int key,b,c,d; } stbds_struct;$/;"	t	typeref:struct:__anona15bb9d20508
stbds_struct2	stb/stb_ds.h	/^typedef struct { int key[2],b,c,d; } stbds_struct2;$/;"	t	typeref:struct:__anona15bb9d20608
stbds_temp	stb/stb_ds.h	/^#define stbds_temp(/;"	d
stbds_temp_key	stb/stb_ds.h	/^#define stbds_temp_key(/;"	d
stbds_unit_tests	stb/stb_ds.h	/^void stbds_unit_tests(void)$/;"	f	typeref:typename:void
stbfile	stb/deprecated/stb.h	/^typedef struct stbfile$/;"	s
stbfile	stb/deprecated/stb.h	/^} stbfile;$/;"	t	typeref:struct:stbfile
stbglAttachShader	stb/tests/caveview/stb_glprog.h	/^#define stbglAttachShader /;"	d
stbglBindAttribLocation	stb/tests/caveview/stb_glprog.h	/^#define stbglBindAttribLocation /;"	d
stbglCompileShader	stb/tests/caveview/stb_glprog.h	/^#define stbglCompileShader /;"	d
stbglCreateProgram	stb/tests/caveview/stb_glprog.h	/^#define stbglCreateProgram /;"	d
stbglCreateShader	stb/tests/caveview/stb_glprog.h	/^#define stbglCreateShader /;"	d
stbglDeleteProgram	stb/tests/caveview/stb_glprog.h	/^#define stbglDeleteProgram /;"	d
stbglDeleteShader	stb/tests/caveview/stb_glprog.h	/^#define stbglDeleteShader /;"	d
stbglDetachShader	stb/tests/caveview/stb_glprog.h	/^#define stbglDetachShader /;"	d
stbglDisableVertexAttribArray	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglDisableVertexAttribArray(GLuint index) { STBGL_ARBIFY(glDisableVert/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglEnableVertexAttribArray	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglEnableVertexAttribArray (GLuint index) { STBGL_ARBIFY(glEnableVerte/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglGetAttachedShaders	stb/tests/caveview/stb_glprog.h	/^#define stbglGetAttachedShaders /;"	d
stbglGetProgramInfoLog	stb/tests/caveview/stb_glprog.h	/^#define stbglGetProgramInfoLog /;"	d
stbglGetProgramStatus	stb/tests/caveview/stb_glprog.h	/^#define stbglGetProgramStatus(/;"	d
stbglGetShaderInfoLog	stb/tests/caveview/stb_glprog.h	/^#define stbglGetShaderInfoLog /;"	d
stbglGetShaderStatus	stb/tests/caveview/stb_glprog.h	/^#define stbglGetShaderStatus(/;"	d
stbglGetUniformLocation	stb/tests/caveview/stb_glprog.h	/^#define stbglGetUniformLocation /;"	d
stbglLinkProgram	stb/tests/caveview/stb_glprog.h	/^#define stbglLinkProgram /;"	d
stbglShaderSource	stb/tests/caveview/stb_glprog.h	/^#define stbglShaderSource /;"	d
stbglUniform1f	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1f(GLint loc, float v0)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1fv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1i	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1i(GLint loc, GLint v0)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform1iv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform1iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2f	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2f(GLint loc, float v0, float v1)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2fv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2i	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2i(GLint loc, GLint v0, GLint v1)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform2iv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform2iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3f	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3f(GLint loc, float v0, float v1, float v2)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3fv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3i	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3i(GLint loc, GLint v0, GLint v1, GLint v2)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform3iv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform3iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4f	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4f(GLint loc, float v0, float v1, float v2, float v3)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4fv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4fv(GLint loc, GLsizei count, const GLfloat *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4i	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4i(GLint loc, GLint v0, GLint v1, GLint v2, GLint v3)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUniform4iv	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUniform4iv(GLint loc, GLsizei count, const GLint   *v) { STBGL_ARBI/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglUseProgram	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglUseProgram(GLuint program)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbglVertexAttribPointer	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbglVertexAttribPointer(GLuint index,  GLint size,  GLenum type,  GLboo/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_GlobalAmbient	stb/tests/caveview/stb_gl.h	/^void stbgl_GlobalAmbient(float r, float g, float b)$/;"	f	typeref:typename:void
stbgl_LoadTexture	stb/tests/caveview/stb_gl.h	/^int stbgl_LoadTexture(char *filename, char *props)$/;"	f	typeref:typename:int
stbgl_Perspective	stb/tests/caveview/stb_gl.h	/^void stbgl_Perspective(float zoom, float max_hfov, float max_vfov, float znear, float zfar)$/;"	f	typeref:typename:void
stbgl_PerspectiveViewport	stb/tests/caveview/stb_gl.h	/^void stbgl_PerspectiveViewport(int x, int y, int w, int h, float zoom, float min_hfov, float min/;"	f	typeref:typename:void
stbgl_SimpleLight	stb/tests/caveview/stb_gl.h	/^void stbgl_SimpleLight(int index, float bright, float x, float y, float z)$/;"	f	typeref:typename:void
stbgl_TestTexture	stb/tests/caveview/stb_gl.h	/^int stbgl_TestTexture(int w)$/;"	f	typeref:typename:int
stbgl_TestTextureEx	stb/tests/caveview/stb_gl.h	/^int stbgl_TestTextureEx(int w, char *scale_table, int checks_log2, int r1,int g1,int b1, int r2,/;"	f	typeref:typename:int
stbgl_TexImage2D	stb/tests/caveview/stb_gl.h	/^int stbgl_TexImage2D(int texid, int w, int h, void *data, char *props)$/;"	f	typeref:typename:int
stbgl_TexImage2D_Extra	stb/tests/caveview/stb_gl.h	/^int stbgl_TexImage2D_Extra(int texid, int w, int h, void *data, int chan, char *props, int prese/;"	f	typeref:typename:int
stbgl_UseProgram	stb/tests/caveview/stb_glprog.h	/^#define stbgl_UseProgram /;"	d
stbgl__CompressedTexImage2DARB	stb/tests/caveview/stb_gl.h	/^static void (*stbgl__CompressedTexImage2DARB)(int target, int level,$/;"	v	typeref:typename:void (*)(int target,int level,int internalformat,int width,int height,int border,int imageSize,void * data)
stbgl__CompressedTexImage2DARB	stb/tests/caveview/stb_gl.h	/^static void (__stdcall *stbgl__CompressedTexImage2DARB)(int target, int level,$/;"	v	typeref:typename:void (__stdcall *)(int target,int level,int internalformat,int width,int height,int border,int imageSize,void * data)
stbgl__compress	stb/tests/caveview/stb_gl.h	/^static void stbgl__compress(uint8 *p, uint8 *rgba, int w, int h, int output_desc, uint8 *end)$/;"	f	typeref:typename:void
stbgl__convert	stb/tests/caveview/stb_gl.h	/^static void stbgl__convert(uint8 *p, uint8 *q, int n, int input_desc, uint8 *end)$/;"	f	typeref:typename:void
stbgl__initCompTex	stb/tests/caveview/stb_gl.h	/^static void stbgl__initCompTex(void)$/;"	f	typeref:typename:void
stbgl__voidfunc	stb/tests/caveview/stb_gl.h	/^   typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl__voidfunc	stb/tests/caveview/stb_gl.h	/^typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl__voidfunc	stb/tests/caveview/stb_glprog.h	/^typedef int (__stdcall *stbgl__voidfunc)(void);$/;"	t	typeref:typename:int (__stdcall *)(void)
stbgl_compile_shader	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_compile_shader(GLenum type, char const **sources, int num_source/;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_create_program	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_create_program(char const **vertex_source, char const **frag_sou/;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_deg2rad	stb/tests/caveview/stb_gl.h	/^#define stbgl_deg2rad(/;"	d
stbgl_delete_shader	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbgl_delete_shader(GLuint shader)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_drawBox	stb/tests/caveview/stb_gl.h	/^void stbgl_drawBox(float x, float y, float z, float sx, float sy, float sz, int cw)$/;"	f	typeref:typename:void
stbgl_drawRect	stb/tests/caveview/stb_gl.h	/^void stbgl_drawRect(float x0, float y0, float x1, float y1)$/;"	f	typeref:typename:void
stbgl_drawRectTC	stb/tests/caveview/stb_gl.h	/^void stbgl_drawRectTC(float x0, float y0, float x1, float y1, float s0, float t0, float s1, floa/;"	f	typeref:typename:void
stbgl_find_uniform	stb/tests/caveview/stb_glprog.h	/^GLint stbgl_find_uniform(GLuint prog, char *uniform)$/;"	f	typeref:typename:GLint
stbgl_find_uniforms	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stbgl_find_uniforms(GLuint prog, GLint *locations, char const **uniforms/;"	f	typeref:typename:STB_GLPROG_DECLARE void
stbgl_hasExtension	stb/tests/caveview/stb_gl.h	/^int stbgl_hasExtension(char *ext)$/;"	f	typeref:typename:int
stbgl_initCamera_zup_facing_x	stb/tests/caveview/stb_gl.h	/^void stbgl_initCamera_zup_facing_x(void)$/;"	f	typeref:typename:void
stbgl_initCamera_zup_facing_y	stb/tests/caveview/stb_gl.h	/^void stbgl_initCamera_zup_facing_y(void)$/;"	f	typeref:typename:void
stbgl_initExtensions	stb/tests/caveview/stb_gl.h	/^   void stbgl_initExtensions(void)$/;"	f	typeref:typename:void
stbgl_link_program	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE GLuint stbgl_link_program(GLuint vertex_shader, GLuint fragment_shader, char /;"	f	typeref:typename:STB_GLPROG_DECLARE GLuint
stbgl_m	stb/tests/caveview/stb_gl.h	/^static int stbgl_m(char *a, char *b)$/;"	f	typeref:typename:int
stbgl_positionCameraWithEulerAngles	stb/tests/caveview/stb_gl.h	/^void stbgl_positionCameraWithEulerAngles(float *loc, float *ang)$/;"	f	typeref:typename:void
stbgl_rad2deg	stb/tests/caveview/stb_gl.h	/^#define stbgl_rad2deg(/;"	d
stbgl_rand	stb/tests/caveview/stb_gl.h	/^unsigned int stbgl_rand(void)$/;"	f	typeref:typename:unsigned int
stbhw__black	stb/stb_herringbone_wang_tile.h	/^static unsigned char stbhw__black[3] = { 0,0,0 };$/;"	v	typeref:typename:unsigned char[3]
stbhw__c2e	stb/stb_herringbone_wang_tile.h	/^#define stbhw__c2e /;"	d
stbhw__change_color	stb/stb_herringbone_wang_tile.h	/^static int stbhw__change_color(int old_color, int num_options, int *weights)$/;"	f	typeref:typename:int
stbhw__choose_tile	stb/stb_herringbone_wang_tile.h	/^static stbhw_tile * stbhw__choose_tile(stbhw_tile **list, int numlist,$/;"	f	typeref:typename:stbhw_tile *
stbhw__color	stb/stb_herringbone_wang_tile.h	/^static unsigned char stbhw__color[7][8][3] =$/;"	v	typeref:typename:unsigned char[7][8][3]
stbhw__corner_colors	stb/stb_herringbone_wang_tile.h	/^unsigned char stbhw__corner_colors[4][4][3] =$/;"	v	typeref:typename:unsigned char[4][4][3]
stbhw__corner_colors_to_edge_color	stb/stb_herringbone_wang_tile.h	/^int stbhw__corner_colors_to_edge_color[4][4] =$/;"	v	typeref:typename:int[4][4]
stbhw__corner_process_h_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__corner_process_h_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__corner_process_v_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__corner_process_v_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__draw_clipped_corner	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_clipped_corner(unsigned char *data, int stride, int xpos, int ypos, int /;"	f	typeref:typename:void
stbhw__draw_h_tile	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_h_tile(unsigned char *output, int stride, int xmax, int ymax, int x, int/;"	f	typeref:typename:void
stbhw__draw_hline	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_hline(unsigned char *data, int stride, int xpos, int ypos, int color, in/;"	f	typeref:typename:void
stbhw__draw_pixel	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_pixel(unsigned char *output, int stride, int x, int y, unsigned char c[3/;"	f	typeref:typename:void
stbhw__draw_v_tile	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_v_tile(unsigned char *output, int stride, int xmax, int ymax, int x, int/;"	f	typeref:typename:void
stbhw__draw_vline	stb/stb_herringbone_wang_tile.h	/^static void stbhw__draw_vline(unsigned char *data, int stride, int xpos, int ypos, int color, in/;"	f	typeref:typename:void
stbhw__edge_process_h_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__edge_process_h_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__edge_process_v_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__edge_process_v_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__get_template_info	stb/stb_herringbone_wang_tile.h	/^static void stbhw__get_template_info(stbhw_config *c, int *w, int *h, int *h_count, int *v_count/;"	f	typeref:typename:void
stbhw__match	stb/stb_herringbone_wang_tile.h	/^static int stbhw__match(int x, int y)$/;"	f	typeref:typename:int
stbhw__parse_h_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__parse_h_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__parse_v_rect	stb/stb_herringbone_wang_tile.h	/^static void stbhw__parse_v_rect(stbhw__process *p, int xpos, int ypos,$/;"	f	typeref:typename:void
stbhw__process	stb/stb_herringbone_wang_tile.h	/^typedef struct stbhw__process$/;"	s
stbhw__process	stb/stb_herringbone_wang_tile.h	/^} stbhw__process;$/;"	t	typeref:struct:stbhw__process
stbhw__process_h_row	stb/stb_herringbone_wang_tile.h	/^static void stbhw__process_h_row(stbhw__process *p,$/;"	f	typeref:typename:void
stbhw__process_rect	stb/stb_herringbone_wang_tile.h	/^typedef void stbhw__process_rect(struct stbhw__process *p, int xpos, int ypos,$/;"	t	typeref:typename:void ()(struct stbhw__process * p,int xpos,int ypos,int a,int b,int c,int d,int e,int f)
stbhw__process_template	stb/stb_herringbone_wang_tile.h	/^static int stbhw__process_template(stbhw__process *p)$/;"	f	typeref:typename:int
stbhw__process_v_row	stb/stb_herringbone_wang_tile.h	/^static void stbhw__process_v_row(stbhw__process *p,$/;"	f	typeref:typename:void
stbhw__set_pixel	stb/stb_herringbone_wang_tile.h	/^static void stbhw__set_pixel(unsigned char *data, int stride, int xpos, int ypos, unsigned char /;"	f	typeref:typename:void
stbhw__stbhw__set_pixel_whiten	stb/stb_herringbone_wang_tile.h	/^static void stbhw__stbhw__set_pixel_whiten(unsigned char *data, int stride, int xpos, int ypos, /;"	f	typeref:typename:void
stbhw__weighted	stb/stb_herringbone_wang_tile.h	/^static int stbhw__weighted(int num_options, int *weights)$/;"	f	typeref:typename:int
stbhw_build_tileset_from_image	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN int stbhw_build_tileset_from_image(stbhw_tileset *ts, unsigned char *data, int stri/;"	f	typeref:typename:STBHW_EXTERN int
stbhw_config	stb/stb_herringbone_wang_tile.h	/^} stbhw_config;$/;"	t	typeref:struct:__anon412b11070208
stbhw_error	stb/stb_herringbone_wang_tile.h	/^static const char *stbhw_error;$/;"	v	typeref:typename:const char *
stbhw_free_tileset	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN void stbhw_free_tileset(stbhw_tileset *ts)$/;"	f	typeref:typename:STBHW_EXTERN void
stbhw_generate_image	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN int stbhw_generate_image(stbhw_tileset *ts, int **weighting, unsigned char *output,/;"	f	typeref:typename:STBHW_EXTERN int
stbhw_get_last_error	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN const char *stbhw_get_last_error(void)$/;"	f	typeref:typename:STBHW_EXTERN const char *
stbhw_get_template_size	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN void stbhw_get_template_size(stbhw_config *c, int *w, int *h)$/;"	f	typeref:typename:STBHW_EXTERN void
stbhw_make_template	stb/stb_herringbone_wang_tile.h	/^STBHW_EXTERN int stbhw_make_template(stbhw_config *c, unsigned char *data, int w, int h, int str/;"	f	typeref:typename:STBHW_EXTERN int
stbhw_tile	stb/stb_herringbone_wang_tile.h	/^} stbhw_tile;$/;"	t	typeref:struct:__anon412b11070108
stbhw_tileset	stb/stb_herringbone_wang_tile.h	/^struct stbhw_tileset$/;"	s
stbhw_tileset	stb/stb_herringbone_wang_tile.h	/^typedef struct stbhw_tileset stbhw_tileset;$/;"	t	typeref:struct:stbhw_tileset
stbi	stb/deprecated/stb_image.c	/^} stbi;$/;"	t	typeref:struct:__anon9409ffb90308	file:
stbi_YCbCr_installed	stb/deprecated/stb_image.c	/^static stbi_YCbCr_to_RGB_run stbi_YCbCr_installed = YCbCr_to_RGB_row;$/;"	v	typeref:typename:stbi_YCbCr_to_RGB_run	file:
stbi_YCbCr_to_RGB_run	stb/deprecated/stb_image.c	/^typedef void (*stbi_YCbCr_to_RGB_run)(stbi_uc *output, stbi_uc const  *y, stbi_uc const *cb, stb/;"	t	typeref:typename:void (*)(stbi_uc * output,stbi_uc const * y,stbi_uc const * cb,stbi_uc const * cr,int count,int step)	file:
stbi__DNL	stb/stb_image.h	/^#define stbi__DNL(/;"	d
stbi__EOI	stb/stb_image.h	/^#define stbi__EOI(/;"	d
stbi__SOF	stb/stb_image.h	/^#define stbi__SOF(/;"	d
stbi__SOF_progressive	stb/stb_image.h	/^#define stbi__SOF_progressive(/;"	d
stbi__SOI	stb/stb_image.h	/^#define stbi__SOI(/;"	d
stbi__SOS	stb/stb_image.h	/^#define stbi__SOS(/;"	d
stbi__YCbCr_to_RGB_row	stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stb/;"	f	typeref:typename:void
stbi__YCbCr_to_RGB_simd	stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc /;"	f	typeref:typename:void
stbi__addsizes_valid	stb/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__at_eof	stb/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	typeref:typename:stbi_inline int
stbi__bit_reverse	stb/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int
stbi__bitcount	stb/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	typeref:typename:int
stbi__bitreverse16	stb/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int
stbi__blinn_8x8	stb/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	typeref:typename:stbi_uc
stbi__bmask	stb/stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,1638/;"	v	typeref:typename:const stbi__uint32[17]
stbi__bmp_data	stb/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anonc3e085de1008
stbi__bmp_info	stb/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__bmp_load	stb/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__bmp_parse_header	stb/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	typeref:typename:void *
stbi__bmp_set_mask_defaults	stb/stb_image.h	/^static int stbi__bmp_set_mask_defaults(stbi__bmp_data *info, int compress)$/;"	f	typeref:typename:int
stbi__bmp_test	stb/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__bmp_test_raw	stb/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__build_fast_ac	stb/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	typeref:typename:void
stbi__build_huffman	stb/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	typeref:typename:int
stbi__check_png_header	stb/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	typeref:typename:int
stbi__clamp	stb/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__cleanup_jpeg	stb/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__compute_huffman_codes	stb/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__compute_transparency	stb/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_transparency16	stb/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_y	stb/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi_uc
stbi__compute_y_16	stb/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	typeref:typename:stbi__uint16
stbi__context	stb/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anonc3e085de0308
stbi__convert_16_to_8	stb/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi_uc *
stbi__convert_8_to_16	stb/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi__uint16 *
stbi__convert_format	stb/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:unsigned char *
stbi__convert_format16	stb/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:stbi__uint16 *
stbi__copyval	stb/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void
stbi__cpuid3	stb/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	typeref:typename:int
stbi__create_png_image	stb/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len/;"	f	typeref:typename:int
stbi__create_png_image_raw	stb/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_/;"	f	typeref:typename:int
stbi__de_iphone	stb/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	typeref:typename:void
stbi__de_iphone_flag	stb/stb_image.h	/^#define stbi__de_iphone_flag /;"	d
stbi__de_iphone_flag_global	stb/stb_image.h	/^static int stbi__de_iphone_flag_global = 0;$/;"	v	typeref:typename:int
stbi__de_iphone_flag_local	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__de_iphone_flag_set	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__decode_jpeg_header	stb/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__decode_jpeg_image	stb/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__depth_scale_table	stb/stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v	typeref:typename:const stbi_uc[9]
stbi__div16	stb/stb_image.h	/^#define stbi__div16(/;"	d
stbi__div4	stb/stb_image.h	/^#define stbi__div4(/;"	d
stbi__do_png	stb/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info /;"	f	typeref:typename:void *
stbi__do_zlib	stb/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int
stbi__end_write_file	stb/stb_image_write.h	/^static void stbi__end_write_file(stbi__write_context *s)$/;"	f	typeref:typename:void
stbi__err	stb/stb_image.h	/^   #define stbi__err(/;"	d
stbi__err	stb/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	typeref:typename:int
stbi__errpf	stb/stb_image.h	/^#define stbi__errpf(/;"	d
stbi__errpuc	stb/stb_image.h	/^#define stbi__errpuc(/;"	d
stbi__expand_png_palette	stb/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int
stbi__extend_receive	stb/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__f2f	stb/stb_image.h	/^#define stbi__f2f(/;"	d
stbi__fill_bits	stb/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	typeref:typename:void
stbi__flip_vertically_on_write	stb/stb_image_write.h	/^static int stbi__flip_vertically_on_write = 0;$/;"	v	typeref:typename:int
stbi__float2fixed	stb/stb_image.h	/^#define stbi__float2fixed(/;"	d
stbi__float2int	stb/stb_image.h	/^#define stbi__float2int(/;"	d
stbi__float_postprocess	stb/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:void
stbi__fopen	stb/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbi__free_jpeg_components	stb/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	typeref:typename:int
stbi__fsh	stb/stb_image.h	/^#define stbi__fsh(/;"	d
stbi__g_failure_reason	stb/stb_image.h	/^const char *stbi__g_failure_reason;$/;"	v	typeref:typename:STBI_THREAD_LOCAL const char *
stbi__get16be	stb/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get16le	stb/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get32be	stb/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get32le	stb/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get8	stb/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__get_chunk_header	stb/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	typeref:typename:stbi__pngchunk
stbi__get_marker	stb/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__getn	stb/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int
stbi__gif	stb/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anonc3e085de1308
stbi__gif_header	stb/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int
stbi__gif_info	stb/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_info_raw	stb/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_load	stb/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__gif_load_next	stb/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stb/;"	f	typeref:typename:stbi_uc *
stbi__gif_lzw	stb/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anonc3e085de1208
stbi__gif_parse_colortable	stb/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, i/;"	f	typeref:typename:void
stbi__gif_test	stb/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__gif_test_raw	stb/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__grow_buffer_unsafe	stb/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__h2l_gamma_i	stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__h2l_scale_i	stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__hdr_convert	stb/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void
stbi__hdr_gettoken	stb/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	typeref:typename:char *
stbi__hdr_info	stb/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__hdr_load	stb/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:float *
stbi__hdr_test	stb/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	typeref:typename:int
stbi__hdr_test_core	stb/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	typeref:typename:int
stbi__hdr_to_ldr	stb/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *
stbi__high_bit	stb/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	typeref:typename:int
stbi__huffman	stb/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anonc3e085de0708
stbi__idct_block	stb/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__idct_simd	stb/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__info_main	stb/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__int16	stb/deprecated/stb_image.c	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short	file:
stbi__int16	stb/deprecated/stb_image.c	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t	file:
stbi__int16	stb/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short
stbi__int16	stb/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t
stbi__int32	stb/deprecated/stb_image.c	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int	file:
stbi__int32	stb/deprecated/stb_image.c	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t	file:
stbi__int32	stb/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int
stbi__int32	stb/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t
stbi__is_16_main	stb/stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	typeref:typename:int
stbi__jbias	stb/stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819/;"	v	typeref:typename:const int[16]
stbi__jpeg	stb/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anonc3e085de0808
stbi__jpeg_decode_block	stb/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huff/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_ac	stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, st/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_dc	stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, in/;"	f	typeref:typename:int
stbi__jpeg_dequantize	stb/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	typeref:typename:void
stbi__jpeg_dezigzag	stb/stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__jpeg_finish	stb/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	typeref:typename:void
stbi__jpeg_get_bit	stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_get_bits	stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_huff_decode	stb/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_info	stb/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_info_raw	stb/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_load	stb/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__jpeg_reset	stb/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__jpeg_test	stb/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__l2h_gamma	stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__l2h_scale	stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__ldr_to_hdr	stb/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *
stbi__load_and_postprocess_16bit	stb/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:stbi__uint16 *
stbi__load_and_postprocess_8bit	stb/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:unsigned char *
stbi__load_gif_main	stb/stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *co/;"	f	typeref:typename:void *
stbi__load_gif_main_outofmem	stb/stb_image.h	/^static void *stbi__load_gif_main_outofmem(stbi__gif *g, stbi_uc *out, int **delays)$/;"	f	typeref:typename:void *
stbi__load_main	stb/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__loadf_main	stb/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__mad2sizes_valid	stb/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	typeref:typename:int
stbi__mad3sizes_valid	stb/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	typeref:typename:int
stbi__mad4sizes_valid	stb/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:int
stbi__malloc	stb/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	typeref:typename:void *
stbi__malloc_mad2	stb/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad3	stb/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad4	stb/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:void *
stbi__mul2sizes_valid	stb/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__out_gif_code	stb/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void
stbi__paeth	stb/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	typeref:typename:int
stbi__parse_entropy_coded_data	stb/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__parse_huffman_block	stb/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_png_file	stb/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	typeref:typename:int
stbi__parse_uncompressed_block	stb/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_zlib	stb/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	typeref:typename:int
stbi__parse_zlib_header	stb/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__pic_info	stb/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pic_is4	stb/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	typeref:typename:int
stbi__pic_load	stb/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__resul/;"	f	typeref:typename:void *
stbi__pic_load_core	stb/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *re/;"	f	typeref:typename:stbi_uc *
stbi__pic_packet	stb/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anonc3e085de1108
stbi__pic_test	stb/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pic_test_core	stb/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png	stb/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anonc3e085de0e08
stbi__png_info	stb/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_info_raw	stb/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_is16	stb/stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png_load	stb/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__png_test	stb/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pngchunk	stb/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anonc3e085de0d08
stbi__pnm_getinteger	stb/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	typeref:typename:int
stbi__pnm_info	stb/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pnm_is16	stb/stb_image.h	/^static int stbi__pnm_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pnm_isdigit	stb/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	typeref:typename:int
stbi__pnm_isspace	stb/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	typeref:typename:int
stbi__pnm_load	stb/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__pnm_skip_whitespace	stb/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	typeref:typename:void
stbi__pnm_test	stb/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__process_frame_header	stb/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__process_gif_raster	stb/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	typeref:typename:stbi_uc *
stbi__process_marker	stb/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	typeref:typename:int
stbi__process_scan_header	stb/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__psd_decode_rle	stb/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	typeref:typename:int
stbi__psd_info	stb/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__psd_is16	stb/stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__psd_load	stb/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__psd_test	stb/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__readval	stb/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *
stbi__refill_buffer	stb/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	typeref:typename:void
stbi__resample	stb/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anonc3e085de0a08
stbi__resample_row_generic	stb/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_h_2	stb/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2	stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2_simd	stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, in/;"	f	typeref:typename:stbi_uc *
stbi__resample_row_v_2	stb/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, i/;"	f	typeref:typename:stbi_uc *
stbi__result_info	stb/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anonc3e085de0508
stbi__rewind	stb/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	typeref:typename:void
stbi__setup_jpeg	stb/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__shiftsigned	stb/stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	typeref:typename:int
stbi__skip	stb/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	typeref:typename:void
stbi__sse2_available	stb/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	typeref:typename:int
stbi__start_callbacks	stb/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void
stbi__start_file	stb/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	typeref:typename:void
stbi__start_mem	stb/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	typeref:typename:void
stbi__start_write_callbacks	stb/stb_image_write.h	/^static void stbi__start_write_callbacks(stbi__write_context *s, stbi_write_func *c, void *contex/;"	f	typeref:typename:void
stbi__start_write_file	stb/stb_image_write.h	/^static int stbi__start_write_file(stbi__write_context *s, const char *filename)$/;"	f	typeref:typename:int
stbi__stdio_callbacks	stb/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks
stbi__stdio_eof	stb/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	typeref:typename:int
stbi__stdio_read	stb/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int
stbi__stdio_skip	stb/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	typeref:typename:void
stbi__stdio_write	stb/stb_image_write.h	/^static void stbi__stdio_write(void *context, void *data, int size)$/;"	f	typeref:typename:void
stbi__tga_get_comp	stb/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	typeref:typename:int
stbi__tga_info	stb/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__tga_load	stb/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__tga_read_rgb16	stb/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	typeref:typename:void
stbi__tga_test	stb/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__uint16	stb/deprecated/stb_image.c	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t	file:
stbi__uint16	stb/deprecated/stb_image.c	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short	file:
stbi__uint16	stb/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t
stbi__uint16	stb/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short
stbi__uint32	stb/deprecated/stb_image.c	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t	file:
stbi__uint32	stb/deprecated/stb_image.c	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int	file:
stbi__uint32	stb/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t
stbi__uint32	stb/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int
stbi__uint8	stb/deprecated/stb_image.c	/^typedef uint8_t  stbi__uint8;$/;"	t	typeref:typename:uint8_t	file:
stbi__uint8	stb/deprecated/stb_image.c	/^typedef unsigned char  stbi__uint8;$/;"	t	typeref:typename:unsigned char	file:
stbi__unpremultiply_on_load	stb/stb_image.h	/^#define stbi__unpremultiply_on_load /;"	d
stbi__unpremultiply_on_load_global	stb/stb_image.h	/^static int stbi__unpremultiply_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__unpremultiply_on_load_local	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__unpremultiply_on_load_set	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__unpremultiply_on_load_thread	stb/stb_image.h	/^STBIDEF void stbi__unpremultiply_on_load_thread(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi__vertical_flip	stb/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertical_flip_slices	stb/stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertically_flip_on_load	stb/stb_image.h	/^#define stbi__vertically_flip_on_load /;"	d
stbi__vertically_flip_on_load_global	stb/stb_image.h	/^static int stbi__vertically_flip_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__vertically_flip_on_load_local	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertically_flip_on_load_set	stb/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__write_context	stb/stb_image_write.h	/^} stbi__write_context;$/;"	t	typeref:struct:__anonbb4db7480108
stbi__zbuf	stb/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anonc3e085de0c08
stbi__zbuild_huffman	stb/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	typeref:typename:int
stbi__zdefault_distance	stb/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v	typeref:typename:const stbi_uc[32]
stbi__zdefault_length	stb/stb_image.h	/^static const stbi_uc stbi__zdefault_length[STBI__ZNSYMS] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__zdist_base	stb/stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:const int[32]
stbi__zdist_extra	stb/stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v	typeref:typename:const int[32]
stbi__zeof	stb/stb_image.h	/^stbi_inline static int stbi__zeof(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zexpand	stb/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int
stbi__zget8	stb/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__zhuffman	stb/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anonc3e085de0b08
stbi__zhuffman_decode	stb/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zhuffman_decode_slowpath	stb/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:int
stbi__zlength_base	stb/stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v	typeref:typename:const int[31]
stbi__zlength_extra	stb/stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v	typeref:typename:const int[31]
stbi__zreceive	stb/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int
stbi_bmp_info	stb/deprecated/stb_image.c	/^static int stbi_bmp_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_bmp_load	stb/deprecated/stb_image.c	/^static stbi_uc *stbi_bmp_load(stbi *s,int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
stbi_bmp_test	stb/deprecated/stb_image.c	/^static int stbi_bmp_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_convert_iphone_png_to_rgb	stb/deprecated/stb_image.c	/^void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:void
stbi_convert_iphone_png_to_rgb	stb/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_iphone_png_to_rgb_thread	stb/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb_thread(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_wchar_to_utf8	stb/stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIDEF int
stbi_de_iphone	stb/deprecated/stb_image.c	/^static void stbi_de_iphone(png *z)$/;"	f	typeref:typename:void	file:
stbi_de_iphone_flag	stb/deprecated/stb_image.c	/^static int stbi_de_iphone_flag = 0;$/;"	v	typeref:typename:int	file:
stbi_dequantize_t	stb/deprecated/stb_image.c	/^typedef stbi__uint8 stbi_dequantize_t;$/;"	t	typeref:typename:stbi__uint8	file:
stbi_dequantize_t	stb/deprecated/stb_image.c	/^typedef unsigned short stbi_dequantize_t;$/;"	t	typeref:typename:unsigned short	file:
stbi_failure_reason	stb/deprecated/stb_image.c	/^const char *stbi_failure_reason(void)$/;"	f	typeref:typename:const char *
stbi_failure_reason	stb/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	typeref:typename:STBIDEF const char *
stbi_fill_gif_background	stb/deprecated/stb_image.c	/^static void stbi_fill_gif_background(stbi_gif *g)$/;"	f	typeref:typename:void	file:
stbi_flip_vertically_on_write	stb/stb_image_write.h	/^STBIWDEF void stbi_flip_vertically_on_write(int flag)$/;"	f	typeref:typename:STBIWDEF void
stbi_gif	stb/deprecated/stb_image.c	/^} stbi_gif;$/;"	t	typeref:struct:stbi_gif_struct	file:
stbi_gif_header	stb/deprecated/stb_image.c	/^static int stbi_gif_header(stbi *s, stbi_gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int	file:
stbi_gif_info	stb/deprecated/stb_image.c	/^static int stbi_gif_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_gif_info_raw	stb/deprecated/stb_image.c	/^static int stbi_gif_info_raw(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_gif_load	stb/deprecated/stb_image.c	/^static stbi_uc *stbi_gif_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
stbi_gif_load_next	stb/deprecated/stb_image.c	/^static stbi__uint8 *stbi_gif_load_next(stbi *s, stbi_gif *g, int *comp, int req_comp)$/;"	f	typeref:typename:stbi__uint8 *	file:
stbi_gif_lzw	stb/deprecated/stb_image.c	/^} stbi_gif_lzw;$/;"	t	typeref:struct:stbi_gif_lzw_struct	file:
stbi_gif_lzw_struct	stb/deprecated/stb_image.c	/^typedef struct stbi_gif_lzw_struct {$/;"	s	file:
stbi_gif_parse_colortable	stb/deprecated/stb_image.c	/^static void stbi_gif_parse_colortable(stbi *s, stbi__uint8 pal[256][4], int num_entries, int tra/;"	f	typeref:typename:void	file:
stbi_gif_struct	stb/deprecated/stb_image.c	/^typedef struct stbi_gif_struct$/;"	s	file:
stbi_gif_test	stb/deprecated/stb_image.c	/^static int stbi_gif_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_hdr_info	stb/deprecated/stb_image.c	/^static int stbi_hdr_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_hdr_load	stb/deprecated/stb_image.c	/^static float *stbi_hdr_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *	file:
stbi_hdr_test	stb/deprecated/stb_image.c	/^static int stbi_hdr_test(stbi* s)$/;"	f	typeref:typename:int	file:
stbi_hdr_to_ldr_gamma	stb/deprecated/stb_image.c	/^void   stbi_hdr_to_ldr_gamma(float gamma) { h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:void
stbi_hdr_to_ldr_gamma	stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_hdr_to_ldr_scale	stb/deprecated/stb_image.c	/^void   stbi_hdr_to_ldr_scale(float scale) { h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:void
stbi_hdr_to_ldr_scale	stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_idct_8x8	stb/deprecated/stb_image.c	/^typedef void (*stbi_idct_8x8)(stbi_uc *out, int out_stride, short data[64], unsigned short *dequ/;"	t	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64],unsigned short * dequantize)	file:
stbi_idct_installed	stb/deprecated/stb_image.c	/^static stbi_idct_8x8 stbi_idct_installed = idct_block;$/;"	v	typeref:typename:stbi_idct_8x8	file:
stbi_image_free	stb/deprecated/stb_image.c	/^void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:void
stbi_image_free	stb/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:STBIDEF void
stbi_info	stb/deprecated/stb_image.c	/^int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi_info	stb/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_callbacks	stb/deprecated/stb_image.c	/^int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi_info_from_callbacks	stb/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int/;"	f	typeref:typename:STBIDEF int
stbi_info_from_file	stb/deprecated/stb_image.c	/^int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi_info_from_file	stb/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_memory	stb/deprecated/stb_image.c	/^int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi_info_from_memory	stb/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_main	stb/deprecated/stb_image.c	/^static int stbi_info_main(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_inline	stb/deprecated/stb_image.c	/^   #define stbi_inline /;"	d	file:
stbi_inline	stb/deprecated/stb_image.c	/^   #define stbi_inline$/;"	d	file:
stbi_inline	stb/stb_image.h	/^   #define stbi_inline /;"	d
stbi_inline	stb/stb_image.h	/^   #define stbi_inline$/;"	d
stbi_install_YCbCr_to_RGB	stb/deprecated/stb_image.c	/^void stbi_install_YCbCr_to_RGB(stbi_YCbCr_to_RGB_run func)$/;"	f	typeref:typename:void
stbi_install_idct	stb/deprecated/stb_image.c	/^void stbi_install_idct(stbi_idct_8x8 func)$/;"	f	typeref:typename:void
stbi_io_callbacks	stb/deprecated/stb_image.c	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon9409ffb90208	file:
stbi_io_callbacks	stb/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anonc3e085de0208
stbi_is_16_bit	stb/stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_callbacks	stb/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_file	stb/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_memory	stb/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr	stb/deprecated/stb_image.c	/^extern int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:int
stbi_is_hdr	stb/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_callbacks	stb/deprecated/stb_image.c	/^extern int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:int
stbi_is_hdr_from_callbacks	stb/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_file	stb/deprecated/stb_image.c	/^extern int      stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:int
stbi_is_hdr_from_file	stb/stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_memory	stb/deprecated/stb_image.c	/^int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:int
stbi_is_hdr_from_memory	stb/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_jpeg_info	stb/deprecated/stb_image.c	/^static int stbi_jpeg_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_jpeg_info_raw	stb/deprecated/stb_image.c	/^static int stbi_jpeg_info_raw(jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_jpeg_load	stb/deprecated/stb_image.c	/^static unsigned char *stbi_jpeg_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *	file:
stbi_jpeg_test	stb/deprecated/stb_image.c	/^static int stbi_jpeg_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_ldr_to_hdr_gamma	stb/deprecated/stb_image.c	/^void   stbi_ldr_to_hdr_gamma(float gamma) { l2h_gamma = gamma; }$/;"	f	typeref:typename:void
stbi_ldr_to_hdr_gamma	stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_ldr_to_hdr_scale	stb/deprecated/stb_image.c	/^void   stbi_ldr_to_hdr_scale(float scale) { l2h_scale = scale; }$/;"	f	typeref:typename:void
stbi_ldr_to_hdr_scale	stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_load	stb/deprecated/stb_image.c	/^unsigned char *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi_load	stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_16	stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_callbacks	stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, /;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_memory	stb/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *c/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_from_callbacks	stb/deprecated/stb_image.c	/^unsigned char *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int */;"	f	typeref:typename:unsigned char *
stbi_load_from_callbacks	stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file	stb/deprecated/stb_image.c	/^unsigned char *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi_load_from_file	stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file_16	stb/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi__uint16 *
stbi_load_from_memory	stb/deprecated/stb_image.c	/^unsigned char *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, /;"	f	typeref:typename:unsigned char *
stbi_load_from_memory	stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_gif_from_memory	stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x,/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_main	stb/deprecated/stb_image.c	/^static unsigned char *stbi_load_main(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *	file:
stbi_loadf	stb/deprecated/stb_image.c	/^float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi_loadf	stb/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_callbacks	stb/deprecated/stb_image.c	/^float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int /;"	f	typeref:typename:float *
stbi_loadf_from_callbacks	stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int /;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_file	stb/deprecated/stb_image.c	/^float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi_loadf_from_file	stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_memory	stb/deprecated/stb_image.c	/^float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req/;"	f	typeref:typename:float *
stbi_loadf_from_memory	stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_main	stb/deprecated/stb_image.c	/^float *stbi_loadf_main(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi_lrot	stb/deprecated/stb_image.c	/^   #define stbi_lrot(/;"	d	file:
stbi_lrot	stb/stb_image.h	/^   #define stbi_lrot(/;"	d
stbi_out_gif_code	stb/deprecated/stb_image.c	/^static void stbi_out_gif_code(stbi_gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void	file:
stbi_pic_info	stb/deprecated/stb_image.c	/^static int stbi_pic_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_pic_load	stb/deprecated/stb_image.c	/^static stbi_uc *stbi_pic_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
stbi_pic_test	stb/deprecated/stb_image.c	/^static int stbi_pic_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_png_info	stb/deprecated/stb_image.c	/^static int      stbi_png_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_png_info_raw	stb/deprecated/stb_image.c	/^static int stbi_png_info_raw(png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_png_load	stb/deprecated/stb_image.c	/^static unsigned char *stbi_png_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *	file:
stbi_png_partial	stb/deprecated/stb_image.c	/^int stbi_png_partial; \/\/ a quick hack to only allow decoding some of a PNG... I should impleme/;"	v	typeref:typename:int
stbi_png_test	stb/deprecated/stb_image.c	/^static int stbi_png_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_process_gif_raster	stb/deprecated/stb_image.c	/^static stbi__uint8 *stbi_process_gif_raster(stbi *s, stbi_gif *g)$/;"	f	typeref:typename:stbi__uint8 *	file:
stbi_psd_info	stb/deprecated/stb_image.c	/^static int stbi_psd_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
stbi_psd_load	stb/deprecated/stb_image.c	/^static stbi_uc *stbi_psd_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
stbi_psd_test	stb/deprecated/stb_image.c	/^static int stbi_psd_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_resample	stb/deprecated/stb_image.c	/^} stbi_resample;$/;"	t	typeref:struct:__anon9409ffb90808	file:
stbi_rewind	stb/deprecated/stb_image.c	/^static void stbi_rewind(stbi *s)$/;"	f	typeref:typename:void	file:
stbi_set_flip_vertically_on_load	stb/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_flip_vertically_on_load_thread	stb/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load_thread(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load	stb/deprecated/stb_image.c	/^void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:void
stbi_set_unpremultiply_on_load	stb/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_stdio_callbacks	stb/deprecated/stb_image.c	/^static stbi_io_callbacks stbi_stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks	file:
stbi_tga_info	stb/deprecated/stb_image.c	/^int stbi_tga_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi_tga_load	stb/deprecated/stb_image.c	/^static stbi_uc *stbi_tga_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
stbi_tga_test	stb/deprecated/stb_image.c	/^static int stbi_tga_test(stbi *s)$/;"	f	typeref:typename:int	file:
stbi_uc	stb/deprecated/stb_image.c	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char	file:
stbi_uc	stb/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char
stbi_unpremultiply_on_load	stb/deprecated/stb_image.c	/^static int stbi_unpremultiply_on_load = 0;$/;"	v	typeref:typename:int	file:
stbi_us	stb/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t	typeref:typename:unsigned short
stbi_write_bmp	stb/stb_image_write.h	/^STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_bmp_core	stb/stb_image_write.h	/^static int stbi_write_bmp_core(stbi__write_context *s, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:int
stbi_write_bmp_to_func	stb/stb_image_write.h	/^STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_force_png_filter	stb/stb_image_write.h	/^STBIWDEF int stbi_write_force_png_filter;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_force_png_filter	stb/stb_image_write.h	/^int stbi_write_force_png_filter = -1;$/;"	v	typeref:typename:int
stbi_write_force_png_filter	stb/stb_image_write.h	/^static int stbi_write_force_png_filter = -1;$/;"	v	typeref:typename:int
stbi_write_func	stb/stb_image_write.h	/^typedef void stbi_write_func(void *context, void *data, int size);$/;"	t	typeref:typename:void ()(void * context,void * data,int size)
stbi_write_hdr	stb/stb_image_write.h	/^STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_hdr_core	stb/stb_image_write.h	/^static int stbi_write_hdr_core(stbi__write_context *s, int x, int y, int comp, float *data)$/;"	f	typeref:typename:int
stbi_write_hdr_to_func	stb/stb_image_write.h	/^STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_jpg	stb/stb_image_write.h	/^STBIWDEF int stbi_write_jpg(char const *filename, int x, int y, int comp, const void *data, int /;"	f	typeref:typename:STBIWDEF int
stbi_write_jpg_core	stb/stb_image_write.h	/^static int stbi_write_jpg_core(stbi__write_context *s, int width, int height, int comp, const vo/;"	f	typeref:typename:int
stbi_write_jpg_to_func	stb/stb_image_write.h	/^STBIWDEF int stbi_write_jpg_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_png	stb/stb_image_write.h	/^STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int /;"	f	typeref:typename:STBIWDEF int
stbi_write_png_compression_level	stb/stb_image_write.h	/^STBIWDEF int stbi_write_png_compression_level;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_png_compression_level	stb/stb_image_write.h	/^int stbi_write_png_compression_level = 8;$/;"	v	typeref:typename:int
stbi_write_png_compression_level	stb/stb_image_write.h	/^static int stbi_write_png_compression_level = 8;$/;"	v	typeref:typename:int
stbi_write_png_to_func	stb/stb_image_write.h	/^STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_png_to_mem	stb/stb_image_write.h	/^STBIWDEF unsigned char *stbi_write_png_to_mem(const unsigned char *pixels, int stride_bytes, int/;"	f	typeref:typename:STBIWDEF unsigned char *
stbi_write_tga	stb/stb_image_write.h	/^STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f	typeref:typename:STBIWDEF int
stbi_write_tga_core	stb/stb_image_write.h	/^static int stbi_write_tga_core(stbi__write_context *s, int x, int y, int comp, void *data)$/;"	f	typeref:typename:int
stbi_write_tga_to_func	stb/stb_image_write.h	/^STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp/;"	f	typeref:typename:STBIWDEF int
stbi_write_tga_with_rle	stb/stb_image_write.h	/^STBIWDEF int stbi_write_tga_with_rle;$/;"	v	typeref:typename:STBIWDEF int
stbi_write_tga_with_rle	stb/stb_image_write.h	/^int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_write_tga_with_rle	stb/stb_image_write.h	/^static int stbi_write_tga_with_rle = 1;$/;"	v	typeref:typename:int
stbi_zlib_compress	stb/stb_image_write.h	/^STBIWDEF unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int/;"	f	typeref:typename:STBIWDEF unsigned char *
stbi_zlib_decode_buffer	stb/deprecated/stb_image.c	/^int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:int
stbi_zlib_decode_buffer	stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_malloc	stb/deprecated/stb_image.c	/^char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:char *
stbi_zlib_decode_malloc	stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize	stb/deprecated/stb_image.c	/^char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outl/;"	f	typeref:typename:char *
stbi_zlib_decode_malloc_guesssize	stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, i/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize_headerflag	stb/deprecated/stb_image.c	/^char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size/;"	f	typeref:typename:char *
stbi_zlib_decode_malloc_guesssize_headerflag	stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int init/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_noheader_buffer	stb/deprecated/stb_image.c	/^int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f	typeref:typename:int
stbi_zlib_decode_noheader_buffer	stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int i/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_noheader_malloc	stb/deprecated/stb_image.c	/^char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:char *
stbi_zlib_decode_noheader_malloc	stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbir__FP32	stb/stb_image_resize.h	/^} stbir__FP32;$/;"	t	typeref:union:__anonb59f51af080a
stbir__add_empty_ring_buffer_entry	stb/stb_image_resize.h	/^static float* stbir__add_empty_ring_buffer_entry(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:float *
stbir__buffer_loop_downsample	stb/stb_image_resize.h	/^static void stbir__buffer_loop_downsample(stbir__info* stbir_info)$/;"	f	typeref:typename:void
stbir__buffer_loop_upsample	stb/stb_image_resize.h	/^static void stbir__buffer_loop_upsample(stbir__info* stbir_info)$/;"	f	typeref:typename:void
stbir__calculate_coefficients_downsample	stb/stb_image_resize.h	/^static void stbir__calculate_coefficients_downsample(stbir_filter filter, float scale_ratio, int/;"	f	typeref:typename:void
stbir__calculate_coefficients_upsample	stb/stb_image_resize.h	/^static void stbir__calculate_coefficients_upsample(stbir_filter filter, float scale, int in_firs/;"	f	typeref:typename:void
stbir__calculate_filters	stb/stb_image_resize.h	/^static void stbir__calculate_filters(stbir__contributors* contributors, float* coefficients, stb/;"	f	typeref:typename:void
stbir__calculate_memory	stb/stb_image_resize.h	/^static stbir_uint32 stbir__calculate_memory(stbir__info *info)$/;"	f	typeref:typename:stbir_uint32
stbir__calculate_sample_range_downsample	stb/stb_image_resize.h	/^static void stbir__calculate_sample_range_downsample(int n, float in_pixels_radius, float scale_/;"	f	typeref:typename:void
stbir__calculate_sample_range_upsample	stb/stb_image_resize.h	/^static void stbir__calculate_sample_range_upsample(int n, float out_filter_radius, float scale_r/;"	f	typeref:typename:void
stbir__calculate_transform	stb/stb_image_resize.h	/^static void stbir__calculate_transform(stbir__info *info, float s0, float t0, float s1, float t1/;"	f	typeref:typename:void
stbir__choose_filter	stb/stb_image_resize.h	/^static void stbir__choose_filter(stbir__info *info, stbir_filter h_filter, stbir_filter v_filter/;"	f	typeref:typename:void
stbir__contributors	stb/stb_image_resize.h	/^} stbir__contributors;$/;"	t	typeref:struct:__anonb59f51af0608
stbir__decode_and_resample_downsample	stb/stb_image_resize.h	/^static void stbir__decode_and_resample_downsample(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:void
stbir__decode_and_resample_upsample	stb/stb_image_resize.h	/^static void stbir__decode_and_resample_upsample(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:void
stbir__decode_scanline	stb/stb_image_resize.h	/^static void stbir__decode_scanline(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:void
stbir__edge_wrap	stb/stb_image_resize.h	/^stbir__inline static int stbir__edge_wrap(stbir_edge edge, int n, int max)$/;"	f	typeref:typename:stbir__inline int
stbir__edge_wrap_slow	stb/stb_image_resize.h	/^static int stbir__edge_wrap_slow(stbir_edge edge, int n, int max)$/;"	f	typeref:typename:int
stbir__empty_ring_buffer	stb/stb_image_resize.h	/^static void stbir__empty_ring_buffer(stbir__info* stbir_info, int first_necessary_scanline)$/;"	f	typeref:typename:void
stbir__encode_scanline	stb/stb_image_resize.h	/^static void stbir__encode_scanline(stbir__info* stbir_info, int num_pixels, void *output_buffer,/;"	f	typeref:typename:void
stbir__filter_catmullrom	stb/stb_image_resize.h	/^static float stbir__filter_catmullrom(float x, float s)$/;"	f	typeref:typename:float
stbir__filter_cubic	stb/stb_image_resize.h	/^static float stbir__filter_cubic(float x, float s)$/;"	f	typeref:typename:float
stbir__filter_info	stb/stb_image_resize.h	/^} stbir__filter_info;$/;"	t	typeref:struct:__anonb59f51af0508
stbir__filter_info_table	stb/stb_image_resize.h	/^static stbir__filter_info stbir__filter_info_table[] = {$/;"	v	typeref:typename:stbir__filter_info[]
stbir__filter_mitchell	stb/stb_image_resize.h	/^static float stbir__filter_mitchell(float x, float s)$/;"	f	typeref:typename:float
stbir__filter_trapezoid	stb/stb_image_resize.h	/^static float stbir__filter_trapezoid(float x, float scale)$/;"	f	typeref:typename:float
stbir__filter_triangle	stb/stb_image_resize.h	/^static float stbir__filter_triangle(float x, float s)$/;"	f	typeref:typename:float
stbir__get_coefficient	stb/stb_image_resize.h	/^static float* stbir__get_coefficient(float* coefficients, stbir_filter filter, float scale, int /;"	f	typeref:typename:float *
stbir__get_coefficient_width	stb/stb_image_resize.h	/^static int stbir__get_coefficient_width(stbir_filter filter, float scale)$/;"	f	typeref:typename:int
stbir__get_contributor	stb/stb_image_resize.h	/^static stbir__contributors* stbir__get_contributor(stbir__contributors* contributors, int n)$/;"	f	typeref:typename:stbir__contributors *
stbir__get_contributors	stb/stb_image_resize.h	/^static int stbir__get_contributors(float scale, stbir_filter filter, int input_size, int output_/;"	f	typeref:typename:int
stbir__get_decode_buffer	stb/stb_image_resize.h	/^static float* stbir__get_decode_buffer(stbir__info* stbir_info)$/;"	f	typeref:typename:float *
stbir__get_filter_pixel_margin	stb/stb_image_resize.h	/^static int stbir__get_filter_pixel_margin(stbir_filter filter, float scale)$/;"	f	typeref:typename:int
stbir__get_filter_pixel_width	stb/stb_image_resize.h	/^static int stbir__get_filter_pixel_width(stbir_filter filter, float scale)$/;"	f	typeref:typename:int
stbir__get_ring_buffer_entry	stb/stb_image_resize.h	/^static float* stbir__get_ring_buffer_entry(float* ring_buffer, int index, int ring_buffer_length/;"	f	typeref:typename:float *
stbir__get_ring_buffer_scanline	stb/stb_image_resize.h	/^static float* stbir__get_ring_buffer_scanline(int get_scanline, float* ring_buffer, int begin_in/;"	f	typeref:typename:float *
stbir__get_total_horizontal_coefficients	stb/stb_image_resize.h	/^static int stbir__get_total_horizontal_coefficients(stbir__info* info)$/;"	f	typeref:typename:int
stbir__get_total_vertical_coefficients	stb/stb_image_resize.h	/^static int stbir__get_total_vertical_coefficients(stbir__info* info)$/;"	f	typeref:typename:int
stbir__info	stb/stb_image_resize.h	/^} stbir__info;$/;"	t	typeref:struct:__anonb59f51af0708
stbir__inline	stb/stb_image_resize.h	/^#define stbir__inline /;"	d
stbir__inline	stb/stb_image_resize.h	/^#define stbir__inline$/;"	d
stbir__kernel_fn	stb/stb_image_resize.h	/^typedef float (stbir__kernel_fn)(float x, float scale);$/;"	t	typeref:typename:float ()(float x,float scale)
stbir__linear_to_srgb	stb/stb_image_resize.h	/^static float stbir__linear_to_srgb(float f)$/;"	f	typeref:typename:float
stbir__linear_to_srgb_uchar	stb/stb_image_resize.h	/^static stbir_uint8 stbir__linear_to_srgb_uchar(float f)$/;"	f	typeref:typename:stbir_uint8
stbir__linear_to_srgb_uchar	stb/stb_image_resize.h	/^static stbir_uint8 stbir__linear_to_srgb_uchar(float in)$/;"	f	typeref:typename:stbir_uint8
stbir__max_uint16_as_float	stb/stb_image_resize.h	/^static const float stbir__max_uint16_as_float = 65535.0f;$/;"	v	typeref:typename:const float
stbir__max_uint32_as_float	stb/stb_image_resize.h	/^static const double stbir__max_uint32_as_float = 4294967295.0;$/;"	v	typeref:typename:const double
stbir__max_uint8_as_float	stb/stb_image_resize.h	/^static const float stbir__max_uint8_as_float  = 255.0f;$/;"	v	typeref:typename:const float
stbir__min	stb/stb_image_resize.h	/^static stbir__inline int stbir__min(int a, int b)$/;"	f	typeref:typename:stbir__inline int
stbir__normalize_downsample_coefficients	stb/stb_image_resize.h	/^static void stbir__normalize_downsample_coefficients(stbir__contributors* contributors, float* c/;"	f	typeref:typename:void
stbir__resample_horizontal_downsample	stb/stb_image_resize.h	/^static void stbir__resample_horizontal_downsample(stbir__info* stbir_info, float* output_buffer)$/;"	f	typeref:typename:void
stbir__resample_horizontal_upsample	stb/stb_image_resize.h	/^static void stbir__resample_horizontal_upsample(stbir__info* stbir_info, float* output_buffer)$/;"	f	typeref:typename:void
stbir__resample_vertical_downsample	stb/stb_image_resize.h	/^static void stbir__resample_vertical_downsample(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:void
stbir__resample_vertical_upsample	stb/stb_image_resize.h	/^static void stbir__resample_vertical_upsample(stbir__info* stbir_info, int n)$/;"	f	typeref:typename:void
stbir__resize_allocated	stb/stb_image_resize.h	/^static int stbir__resize_allocated(stbir__info *info,$/;"	f	typeref:typename:int
stbir__resize_arbitrary	stb/stb_image_resize.h	/^static int stbir__resize_arbitrary($/;"	f	typeref:typename:int
stbir__saturate	stb/stb_image_resize.h	/^static stbir__inline float stbir__saturate(float x)$/;"	f	typeref:typename:stbir__inline float
stbir__saturate16	stb/stb_image_resize.h	/^static stbir__inline stbir_uint16 stbir__saturate16(int x)$/;"	f	typeref:typename:stbir__inline stbir_uint16
stbir__saturate8	stb/stb_image_resize.h	/^static stbir__inline stbir_uint8 stbir__saturate8(int x)$/;"	f	typeref:typename:stbir__inline stbir_uint8
stbir__setup	stb/stb_image_resize.h	/^static void stbir__setup(stbir__info *info, int input_w, int input_h, int output_w, int output_h/;"	f	typeref:typename:void
stbir__srgb_offset_to_linear_scaled	stb/stb_image_resize.h	/^static int stbir__srgb_offset_to_linear_scaled[256] =$/;"	v	typeref:typename:int[256]
stbir__srgb_to_linear	stb/stb_image_resize.h	/^static float stbir__srgb_to_linear(float f)$/;"	f	typeref:typename:float
stbir__srgb_uchar_to_linear_float	stb/stb_image_resize.h	/^static float stbir__srgb_uchar_to_linear_float[256] = {$/;"	v	typeref:typename:float[256]
stbir__support_fn	stb/stb_image_resize.h	/^typedef float (stbir__support_fn)(float scale);$/;"	t	typeref:typename:float ()(float scale)
stbir__support_one	stb/stb_image_resize.h	/^static float stbir__support_one(float s)$/;"	f	typeref:typename:float
stbir__support_trapezoid	stb/stb_image_resize.h	/^static float stbir__support_trapezoid(float scale)$/;"	f	typeref:typename:float
stbir__support_two	stb/stb_image_resize.h	/^static float stbir__support_two(float s)$/;"	f	typeref:typename:float
stbir__support_zero	stb/stb_image_resize.h	/^static float stbir__support_zero(float s)$/;"	f	typeref:typename:float
stbir__type_size	stb/stb_image_resize.h	/^static unsigned char stbir__type_size[] = {$/;"	v	typeref:typename:unsigned char[]
stbir__use_height_upsampling	stb/stb_image_resize.h	/^stbir__inline static int stbir__use_height_upsampling(stbir__info* stbir_info)$/;"	f	typeref:typename:stbir__inline int
stbir__use_upsampling	stb/stb_image_resize.h	/^stbir__inline static int stbir__use_upsampling(float ratio)$/;"	f	typeref:typename:stbir__inline int
stbir__use_width_upsampling	stb/stb_image_resize.h	/^stbir__inline static int stbir__use_width_upsampling(stbir__info* stbir_info)$/;"	f	typeref:typename:stbir__inline int
stbir__validate_uint32	stb/stb_image_resize.h	/^typedef unsigned char stbir__validate_uint32[sizeof(stbir_uint32) == 4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbir_uint32)==4?1:-1]
stbir_colorspace	stb/stb_image_resize.h	/^} stbir_colorspace;$/;"	t	typeref:enum:__anonb59f51af0303
stbir_context	stb/tests/resample_test.cpp	/^	stbir_context()$/;"	f	class:stbir_context	file:
stbir_context	stb/tests/resample_test.cpp	/^class stbir_context {$/;"	c	file:
stbir_datatype	stb/stb_image_resize.h	/^} stbir_datatype;$/;"	t	typeref:enum:__anonb59f51af0403
stbir_edge	stb/stb_image_resize.h	/^} stbir_edge;$/;"	t	typeref:enum:__anonb59f51af0103
stbir_filter	stb/stb_image_resize.h	/^} stbir_filter;$/;"	t	typeref:enum:__anonb59f51af0203
stbir_free	stb/tests/resample_test.cpp	/^void stbir_free(void* memory, void* context)$/;"	f	typeref:typename:void
stbir_malloc	stb/tests/resample_test.cpp	/^void* stbir_malloc(size_t size, void* context)$/;"	f	typeref:typename:void *
stbir_progress	stb/tests/resample_test.cpp	/^void stbir_progress(float p)$/;"	f	typeref:typename:void
stbir_resize	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize(         const void *input_pixels , int input_w , int input_h , int in/;"	f	typeref:typename:STBIRDEF int
stbir_resize_float	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_float(     const float *input_pixels , int input_w , int input_h , int/;"	f	typeref:typename:STBIRDEF int
stbir_resize_float_generic	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_float_generic( const float *input_pixels         , int input_w , int i/;"	f	typeref:typename:STBIRDEF int
stbir_resize_region	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_region(  const void *input_pixels , int input_w , int input_h , int in/;"	f	typeref:typename:STBIRDEF int
stbir_resize_subpixel	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_subpixel(const void *input_pixels , int input_w , int input_h , int in/;"	f	typeref:typename:STBIRDEF int
stbir_resize_uint16_generic	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint16_generic(const stbir_uint16 *input_pixels  , int input_w , int i/;"	f	typeref:typename:STBIRDEF int
stbir_resize_uint8	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8(     const unsigned char *input_pixels , int input_w , int input/;"	f	typeref:typename:STBIRDEF int
stbir_resize_uint8_generic	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_generic( const unsigned char *input_pixels , int input_w , int i/;"	f	typeref:typename:STBIRDEF int
stbir_resize_uint8_srgb	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_srgb(const unsigned char *input_pixels , int input_w , int input/;"	f	typeref:typename:STBIRDEF int
stbir_resize_uint8_srgb_edgemode	stb/stb_image_resize.h	/^STBIRDEF int stbir_resize_uint8_srgb_edgemode(const unsigned char *input_pixels , int input_w , /;"	f	typeref:typename:STBIRDEF int
stbir_uint16	stb/stb_image_resize.h	/^typedef uint16_t stbir_uint16;$/;"	t	typeref:typename:uint16_t
stbir_uint16	stb/stb_image_resize.h	/^typedef unsigned short stbir_uint16;$/;"	t	typeref:typename:unsigned short
stbir_uint32	stb/stb_image_resize.h	/^typedef uint32_t stbir_uint32;$/;"	t	typeref:typename:uint32_t
stbir_uint32	stb/stb_image_resize.h	/^typedef unsigned int   stbir_uint32;$/;"	t	typeref:typename:unsigned int
stbir_uint8	stb/stb_image_resize.h	/^typedef uint8_t  stbir_uint8;$/;"	t	typeref:typename:uint8_t
stbir_uint8	stb/stb_image_resize.h	/^typedef unsigned char  stbir_uint8;$/;"	t	typeref:typename:unsigned char
stbiw__ZHASH	stb/stb_image_write.h	/^#define stbiw__ZHASH /;"	d
stbiw__crc32	stb/stb_image_write.h	/^static unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f	typeref:typename:unsigned int
stbiw__encode_png_line	stb/stb_image_write.h	/^static void stbiw__encode_png_line(unsigned char *pixels, int stride_bytes, int width, int heigh/;"	f	typeref:typename:void
stbiw__fopen	stb/stb_image_write.h	/^static FILE *stbiw__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbiw__jpg_DCT	stb/stb_image_write.h	/^static void stbiw__jpg_DCT(float *d0p, float *d1p, float *d2p, float *d3p, float *d4p, float *d5/;"	f	typeref:typename:void
stbiw__jpg_ZigZag	stb/stb_image_write.h	/^static const unsigned char stbiw__jpg_ZigZag[] = { 0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,/;"	v	typeref:typename:const unsigned char[]
stbiw__jpg_calcBits	stb/stb_image_write.h	/^static void stbiw__jpg_calcBits(int val, unsigned short bits[2]) {$/;"	f	typeref:typename:void
stbiw__jpg_processDU	stb/stb_image_write.h	/^static int stbiw__jpg_processDU(stbi__write_context *s, int *bitBuf, int *bitCnt, float *CDU, in/;"	f	typeref:typename:int
stbiw__jpg_writeBits	stb/stb_image_write.h	/^static void stbiw__jpg_writeBits(stbi__write_context *s, int *bitBufP, int *bitCntP, const unsig/;"	f	typeref:typename:void
stbiw__linear_to_rgbe	stb/stb_image_write.h	/^static void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f	typeref:typename:void
stbiw__max	stb/stb_image_write.h	/^#define stbiw__max(/;"	d
stbiw__outfile	stb/stb_image_write.h	/^static int stbiw__outfile(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int comp,/;"	f	typeref:typename:int
stbiw__paeth	stb/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f	typeref:typename:unsigned char
stbiw__putc	stb/stb_image_write.h	/^static void stbiw__putc(stbi__write_context *s, unsigned char c)$/;"	f	typeref:typename:void
stbiw__sbcount	stb/stb_image_write.h	/^#define stbiw__sbcount(/;"	d
stbiw__sbfree	stb/stb_image_write.h	/^#define stbiw__sbfree(/;"	d
stbiw__sbgrow	stb/stb_image_write.h	/^#define stbiw__sbgrow(/;"	d
stbiw__sbgrowf	stb/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f	typeref:typename:void *
stbiw__sbm	stb/stb_image_write.h	/^#define stbiw__sbm(/;"	d
stbiw__sbmaybegrow	stb/stb_image_write.h	/^#define stbiw__sbmaybegrow(/;"	d
stbiw__sbn	stb/stb_image_write.h	/^#define stbiw__sbn(/;"	d
stbiw__sbneedgrow	stb/stb_image_write.h	/^#define stbiw__sbneedgrow(/;"	d
stbiw__sbpush	stb/stb_image_write.h	/^#define stbiw__sbpush(/;"	d
stbiw__sbraw	stb/stb_image_write.h	/^#define stbiw__sbraw(/;"	d
stbiw__wp32	stb/stb_image_write.h	/^#define stbiw__wp32(/;"	d
stbiw__wpcrc	stb/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f	typeref:typename:void
stbiw__wpng4	stb/stb_image_write.h	/^#define stbiw__wpng4(/;"	d
stbiw__wptag	stb/stb_image_write.h	/^#define stbiw__wptag(/;"	d
stbiw__write1	stb/stb_image_write.h	/^static void stbiw__write1(stbi__write_context *s, unsigned char a)$/;"	f	typeref:typename:void
stbiw__write3	stb/stb_image_write.h	/^static void stbiw__write3(stbi__write_context *s, unsigned char a, unsigned char b, unsigned cha/;"	f	typeref:typename:void
stbiw__write_dump_data	stb/stb_image_write.h	/^static void stbiw__write_dump_data(stbi__write_context *s, int length, unsigned char *data)$/;"	f	typeref:typename:void
stbiw__write_flush	stb/stb_image_write.h	/^static void stbiw__write_flush(stbi__write_context *s)$/;"	f	typeref:typename:void
stbiw__write_hdr_scanline	stb/stb_image_write.h	/^static void stbiw__write_hdr_scanline(stbi__write_context *s, int width, int ncomp, unsigned cha/;"	f	typeref:typename:void
stbiw__write_pixel	stb/stb_image_write.h	/^static void stbiw__write_pixel(stbi__write_context *s, int rgb_dir, int comp, int write_alpha, i/;"	f	typeref:typename:void
stbiw__write_pixels	stb/stb_image_write.h	/^static void stbiw__write_pixels(stbi__write_context *s, int rgb_dir, int vdir, int x, int y, int/;"	f	typeref:typename:void
stbiw__write_run_data	stb/stb_image_write.h	/^static void stbiw__write_run_data(stbi__write_context *s, int length, unsigned char databyte)$/;"	f	typeref:typename:void
stbiw__writef	stb/stb_image_write.h	/^static void stbiw__writef(stbi__write_context *s, const char *fmt, ...)$/;"	f	typeref:typename:void
stbiw__writefv	stb/stb_image_write.h	/^static void stbiw__writefv(stbi__write_context *s, const char *fmt, va_list v)$/;"	f	typeref:typename:void
stbiw__zhash	stb/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_add	stb/stb_image_write.h	/^#define stbiw__zlib_add(/;"	d
stbiw__zlib_bitrev	stb/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f	typeref:typename:int
stbiw__zlib_countm	stb/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f	typeref:typename:unsigned int
stbiw__zlib_flush	stb/stb_image_write.h	/^#define stbiw__zlib_flush(/;"	d
stbiw__zlib_flushf	stb/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitc/;"	f	typeref:typename:unsigned char *
stbiw__zlib_huff	stb/stb_image_write.h	/^#define stbiw__zlib_huff(/;"	d
stbiw__zlib_huff1	stb/stb_image_write.h	/^#define stbiw__zlib_huff1(/;"	d
stbiw__zlib_huff2	stb/stb_image_write.h	/^#define stbiw__zlib_huff2(/;"	d
stbiw__zlib_huff3	stb/stb_image_write.h	/^#define stbiw__zlib_huff3(/;"	d
stbiw__zlib_huff4	stb/stb_image_write.h	/^#define stbiw__zlib_huff4(/;"	d
stbiw__zlib_huffa	stb/stb_image_write.h	/^#define stbiw__zlib_huffa(/;"	d
stbiw__zlib_huffb	stb/stb_image_write.h	/^#define stbiw__zlib_huffb(/;"	d
stbiw_convert_wchar_to_utf8	stb/stb_image_write.h	/^STBIWDEF int stbiw_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIWDEF int
stbiw_uint32	stb/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t	typeref:typename:unsigned int
stblkck_internal_print	stb/stb_leakcheck.h	/^static void stblkck_internal_print(const char *reason, stb_leakcheck_malloc_info *mi)$/;"	f	typeref:typename:void
stbpg_main	stb/tests/pg_test/pg_test.c	/^void stbpg_main(int argc, char **argv)$/;"	f	typeref:typename:void
stbpg_tick	stb/tests/pg_test/pg_test.c	/^void stbpg_tick(float dt)$/;"	f	typeref:typename:void
stbprint	stb/deprecated/stb.h	/^void stbprint(const char *fmt, ...)$/;"	f	typeref:typename:void
stbrp__findresult	stb/stb_rect_pack.h	/^} stbrp__findresult;$/;"	t	typeref:struct:__anon6e5b45070308
stbrp__skyline_find_best_pos	stb/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)$/;"	f	typeref:typename:stbrp__findresult
stbrp__skyline_find_min_y	stb/stb_rect_pack.h	/^static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, int/;"	f	typeref:typename:int
stbrp__skyline_pack_rectangle	stb/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int he/;"	f	typeref:typename:stbrp__findresult
stbrp_context	stb/stb_rect_pack.h	/^struct stbrp_context$/;"	s
stbrp_context	stb/stb_rect_pack.h	/^typedef struct stbrp_context stbrp_context;$/;"	t	typeref:struct:stbrp_context
stbrp_context	stb/stb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anon77ab60dd1108
stbrp_coord	stb/stb_rect_pack.h	/^typedef int            stbrp_coord;$/;"	t	typeref:typename:int
stbrp_coord	stb/stb_truetype.h	/^typedef int stbrp_coord;$/;"	t	typeref:typename:int
stbrp_init_target	stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *node/;"	f	typeref:typename:STBRP_DEF void
stbrp_init_target	stb/stb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nod/;"	f	typeref:typename:void
stbrp_node	stb/stb_rect_pack.h	/^struct stbrp_node$/;"	s
stbrp_node	stb/stb_rect_pack.h	/^typedef struct stbrp_node    stbrp_node;$/;"	t	typeref:struct:stbrp_node
stbrp_node	stb/stb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anon77ab60dd1208
stbrp_pack_rects	stb/stb_rect_pack.h	/^STBRP_DEF int stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:STBRP_DEF int
stbrp_pack_rects	stb/stb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:void
stbrp_rect	stb/stb_rect_pack.h	/^struct stbrp_rect$/;"	s
stbrp_rect	stb/stb_rect_pack.h	/^typedef struct stbrp_rect    stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_rect	stb/stb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	stb/stb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_setup_allow_out_of_mem	stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)$/;"	f	typeref:typename:STBRP_DEF void
stbrp_setup_heuristic	stb/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)$/;"	f	typeref:typename:STBRP_DEF void
stbsp__bot	stb/stb_sprintf.h	/^static double const stbsp__bot[23] = {$/;"	v	typeref:typename:double const[23]
stbsp__cb_buf_clamp	stb/stb_sprintf.h	/^      #define stbsp__cb_buf_clamp(/;"	d
stbsp__chk_cb_buf	stb/stb_sprintf.h	/^      #define stbsp__chk_cb_buf(/;"	d
stbsp__chk_cb_bufL	stb/stb_sprintf.h	/^      #define stbsp__chk_cb_bufL(/;"	d
stbsp__clamp_callback	stb/stb_sprintf.h	/^static char *stbsp__clamp_callback(const char *buf, void *user, int len)$/;"	f	typeref:typename:char *
stbsp__comma	stb/stb_sprintf.h	/^static char stbsp__comma = ',';$/;"	v	typeref:typename:char
stbsp__context	stb/stb_sprintf.h	/^typedef struct stbsp__context {$/;"	s
stbsp__context	stb/stb_sprintf.h	/^} stbsp__context;$/;"	t	typeref:struct:stbsp__context
stbsp__count_clamp_callback	stb/stb_sprintf.h	/^static char * stbsp__count_clamp_callback( const char * buf, void * user, int len )$/;"	f	typeref:typename:char *
stbsp__ddmulthi	stb/stb_sprintf.h	/^#define stbsp__ddmulthi(/;"	d
stbsp__ddmultlo	stb/stb_sprintf.h	/^#define stbsp__ddmultlo(/;"	d
stbsp__ddmultlos	stb/stb_sprintf.h	/^#define stbsp__ddmultlos(/;"	d
stbsp__ddrenorm	stb/stb_sprintf.h	/^#define stbsp__ddrenorm(/;"	d
stbsp__ddtoS64	stb/stb_sprintf.h	/^#define stbsp__ddtoS64(/;"	d
stbsp__digitpair	stb/stb_sprintf.h	/^} stbsp__digitpair =$/;"	v	typeref:struct:__anonb1ccf5010108
stbsp__flush_cb	stb/stb_sprintf.h	/^      #define stbsp__flush_cb(/;"	d
stbsp__int32	stb/stb_sprintf.h	/^#define stbsp__int32 /;"	d
stbsp__int64	stb/stb_sprintf.h	/^#define stbsp__int64 /;"	d
stbsp__lead_sign	stb/stb_sprintf.h	/^static void stbsp__lead_sign(stbsp__uint32 fl, char *sign)$/;"	f	typeref:typename:void
stbsp__negbot	stb/stb_sprintf.h	/^static double const stbsp__negbot[22] = {$/;"	v	typeref:typename:double const[22]
stbsp__negboterr	stb/stb_sprintf.h	/^static double const stbsp__negboterr[22] = {$/;"	v	typeref:typename:double const[22]
stbsp__negtop	stb/stb_sprintf.h	/^static double const stbsp__negtop[13] = {$/;"	v	typeref:typename:double const[13]
stbsp__negtoperr	stb/stb_sprintf.h	/^static double const stbsp__negtoperr[13] = {$/;"	v	typeref:typename:double const[13]
stbsp__period	stb/stb_sprintf.h	/^static char stbsp__period = '.';$/;"	v	typeref:typename:char
stbsp__powten	stb/stb_sprintf.h	/^static stbsp__uint64 const stbsp__powten[20] = {$/;"	v	typeref:typename:stbsp__uint64 const[20]
stbsp__raise_to_power10	stb/stb_sprintf.h	/^static void stbsp__raise_to_power10(double *ohi, double *olo, double d, stbsp__int32 power) \/\//;"	f	typeref:typename:void
stbsp__real_to_parts	stb/stb_sprintf.h	/^static stbsp__int32 stbsp__real_to_parts(stbsp__int64 *bits, stbsp__int32 *expo, double value)$/;"	f	typeref:typename:stbsp__int32
stbsp__real_to_str	stb/stb_sprintf.h	/^static stbsp__int32 stbsp__real_to_str(char const **start, stbsp__uint32 *len, char *out, stbsp_/;"	f	typeref:typename:stbsp__int32
stbsp__strlen_limited	stb/stb_sprintf.h	/^static STBSP__ASAN stbsp__uint32 stbsp__strlen_limited(char const *s, stbsp__uint32 limit)$/;"	f	typeref:typename:STBSP__ASAN stbsp__uint32
stbsp__tento19th	stb/stb_sprintf.h	/^#define stbsp__tento19th /;"	d
stbsp__top	stb/stb_sprintf.h	/^static double const stbsp__top[13] = {$/;"	v	typeref:typename:double const[13]
stbsp__toperr	stb/stb_sprintf.h	/^static double const stbsp__toperr[13] = {$/;"	v	typeref:typename:double const[13]
stbsp__uint16	stb/stb_sprintf.h	/^#define stbsp__uint16 /;"	d
stbsp__uint32	stb/stb_sprintf.h	/^#define stbsp__uint32 /;"	d
stbsp__uint64	stb/stb_sprintf.h	/^#define stbsp__uint64 /;"	d
stbsp__uintptr	stb/stb_sprintf.h	/^#define stbsp__uintptr /;"	d
stbte__activate	stb/stb_tilemap_editor.h	/^static void stbte__activate(int id)$/;"	f	typeref:typename:void
stbte__activate_map	stb/stb_tilemap_editor.h	/^static void stbte__activate_map(int x, int y)$/;"	f	typeref:typename:void
stbte__alert	stb/stb_tilemap_editor.h	/^static void stbte__alert(const char *msg)$/;"	f	typeref:typename:void
stbte__begin_undo	stb/stb_tilemap_editor.h	/^static void stbte__begin_undo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__brush	stb/stb_tilemap_editor.h	/^static void stbte__brush(stbte_tilemap *tm, int x, int y)$/;"	f	typeref:typename:void
stbte__brush_predict	stb/stb_tilemap_editor.h	/^static void stbte__brush_predict(stbte_tilemap *tm, short result[])$/;"	f	typeref:typename:void
stbte__button	stb/stb_tilemap_editor.h	/^static int stbte__button(int colormode, const char *label, int x, int y, int textoff, int width,/;"	f	typeref:typename:int
stbte__button_core	stb/stb_tilemap_editor.h	/^static int stbte__button_core(int id)$/;"	f	typeref:typename:int
stbte__button_icon	stb/stb_tilemap_editor.h	/^static int stbte__button_icon(int colormode, char ch, int x, int y, int width, int id, int toggl/;"	f	typeref:typename:int
stbte__categories	stb/stb_tilemap_editor.h	/^static void stbte__categories(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__category_button	stb/stb_tilemap_editor.h	/^static int stbte__category_button(const char *label, int x, int y, int width, int id, int toggle/;"	f	typeref:typename:int
stbte__choose_category	stb/stb_tilemap_editor.h	/^static void stbte__choose_category(stbte_tilemap *tm, int category)$/;"	f	typeref:typename:void
stbte__clear_stack	stb/stb_tilemap_editor.h	/^static void stbte__clear_stack(stbte_tilemap *tm, short result[])$/;"	f	typeref:typename:void
stbte__color_copy	stb/stb_tilemap_editor.h	/^static int stbte__cp_state, stbte__cp_index, stbte__color_copy;$/;"	v	typeref:typename:int
stbte__color_names	stb/stb_tilemap_editor.h	/^static char *stbte__color_names[] =$/;"	v	typeref:typename:char * []
stbte__color_table	stb/stb_tilemap_editor.h	/^static int stbte__color_table[STBTE__num_color_modes][STBTE__num_color_aspects][STBTE__num_color/;"	v	typeref:typename:int[][][]
stbte__colorpicker	stb/stb_tilemap_editor.h	/^static void stbte__colorpicker(int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__colorrect	stb/stb_tilemap_editor.h	/^} stbte__colorrect;$/;"	t	typeref:struct:__anonbd4d158d0d08
stbte__compute_digits	stb/stb_tilemap_editor.h	/^static void stbte__compute_digits(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__compute_panel_locations	stb/stb_tilemap_editor.h	/^static void stbte__compute_panel_locations(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__compute_tileinfo	stb/stb_tilemap_editor.h	/^static void stbte__compute_tileinfo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__copy_cut	stb/stb_tilemap_editor.h	/^static void stbte__copy_cut(stbte_tilemap *tm, int cut)$/;"	f	typeref:typename:void
stbte__copy_properties	stb/stb_tilemap_editor.h	/^static void stbte__copy_properties(float *dest, float *src)$/;"	f	typeref:typename:void
stbte__cp_altered	stb/stb_tilemap_editor.h	/^static int stbte__cp_mode, stbte__cp_aspect, stbte__save, stbte__cp_altered;$/;"	v	typeref:typename:int
stbte__cp_aspect	stb/stb_tilemap_editor.h	/^static int stbte__cp_mode, stbte__cp_aspect, stbte__save, stbte__cp_altered;$/;"	v	typeref:typename:int
stbte__cp_index	stb/stb_tilemap_editor.h	/^static int stbte__cp_state, stbte__cp_index, stbte__color_copy;$/;"	v	typeref:typename:int
stbte__cp_mode	stb/stb_tilemap_editor.h	/^static int stbte__cp_mode, stbte__cp_aspect, stbte__save, stbte__cp_altered;$/;"	v	typeref:typename:int
stbte__cp_state	stb/stb_tilemap_editor.h	/^static int stbte__cp_state, stbte__cp_index, stbte__color_copy;$/;"	v	typeref:typename:int
stbte__do_event	stb/stb_tilemap_editor.h	/^static void stbte__do_event(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__drag_place	stb/stb_tilemap_editor.h	/^static void stbte__drag_place(stbte_tilemap *tm, int mapx, int mapy)$/;"	f	typeref:typename:void
stbte__drag_update	stb/stb_tilemap_editor.h	/^static void stbte__drag_update(stbte_tilemap *tm, int mapx, int mapy, int copy_props)$/;"	f	typeref:typename:void
stbte__draw_bitmap	stb/stb_tilemap_editor.h	/^static void stbte__draw_bitmap(int x, int y, int w, short *bitmap, int color)$/;"	f	typeref:typename:void
stbte__draw_bitmask_as_columns	stb/stb_tilemap_editor.h	/^static void stbte__draw_bitmask_as_columns(int x, int y, short bitmask, int color)$/;"	f	typeref:typename:void
stbte__draw_box	stb/stb_tilemap_editor.h	/^static void stbte__draw_box(int x0, int y0, int x1, int y1, int colormode, int colorindex)$/;"	f	typeref:typename:void
stbte__draw_frame	stb/stb_tilemap_editor.h	/^static void stbte__draw_frame(int x0, int y0, int x1, int y1, unsigned int color)$/;"	f	typeref:typename:void
stbte__draw_frame_delayed	stb/stb_tilemap_editor.h	/^static void stbte__draw_frame_delayed(int x0, int y0, int x1, int y1, int color)$/;"	f	typeref:typename:void
stbte__draw_line	stb/stb_tilemap_editor.h	/^static void stbte__draw_line(int x0, int y0, int x1, int y1, unsigned int color)$/;"	f	typeref:typename:void
stbte__draw_link	stb/stb_tilemap_editor.h	/^static void stbte__draw_link(int x0, int y0, int x1, int y1, unsigned int color)$/;"	f	typeref:typename:void
stbte__draw_rect	stb/stb_tilemap_editor.h	/^static void stbte__draw_rect(int x0, int y0, int x1, int y1, unsigned int color)$/;"	f	typeref:typename:void
stbte__draw_text	stb/stb_tilemap_editor.h	/^static void stbte__draw_text(int x, int y, const char *str, int w, int color)$/;"	f	typeref:typename:void
stbte__draw_text_core	stb/stb_tilemap_editor.h	/^static void stbte__draw_text_core(int x, int y, const char *str, int w, int color, int digitspac/;"	f	typeref:typename:void
stbte__draw_textbox	stb/stb_tilemap_editor.h	/^static void stbte__draw_textbox(int x0, int y0, int x1, int y1, char *text, int xoff, int yoff, /;"	f	typeref:typename:void
stbte__dump_colorstate	stb/stb_tilemap_editor.h	/^static void stbte__dump_colorstate(void)$/;"	f	typeref:typename:void
stbte__editor_traverse	stb/stb_tilemap_editor.h	/^static void stbte__editor_traverse(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__end_undo	stb/stb_tilemap_editor.h	/^static void stbte__end_undo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__erase	stb/stb_tilemap_editor.h	/^static int stbte__erase(stbte_tilemap *tm, int x, int y, int allow_any)$/;"	f	typeref:typename:int
stbte__erase_predict	stb/stb_tilemap_editor.h	/^static int stbte__erase_predict(stbte_tilemap *tm, short result[], int allow_any)$/;"	f	typeref:typename:int
stbte__extract_float	stb/stb_tilemap_editor.h	/^static float stbte__extract_float(short s0, short s1)$/;"	f	typeref:typename:float
stbte__extract_short	stb/stb_tilemap_editor.h	/^static short stbte__extract_short(float f, int slot)$/;"	f	typeref:typename:short
stbte__eyedrop	stb/stb_tilemap_editor.h	/^static void stbte__eyedrop(stbte_tilemap *tm, int x, int y)$/;"	f	typeref:typename:void
stbte__fillrect	stb/stb_tilemap_editor.h	/^static void stbte__fillrect(stbte_tilemap *tm, int x0, int y0, int x1, int y1, int fill)$/;"	f	typeref:typename:void
stbte__find_tile	stb/stb_tilemap_editor.h	/^static int stbte__find_tile(stbte_tilemap *tm, int tile_id)$/;"	f	typeref:typename:int
stbte__float_control	stb/stb_tilemap_editor.h	/^static int stbte__float_control(int x0, int y0, int w, float minv, float maxv, float scale, cons/;"	f	typeref:typename:int
stbte__flush_delay	stb/stb_tilemap_editor.h	/^static void stbte__flush_delay(void)$/;"	f	typeref:typename:void
stbte__font_offset	stb/stb_tilemap_editor.h	/^static short stbte__font_offset[95+16];$/;"	v	typeref:typename:short[]
stbte__fontdata	stb/stb_tilemap_editor.h	/^static short stbte__fontdata[769] =$/;"	v	typeref:typename:short[769]
stbte__get_char_bitmap	stb/stb_tilemap_editor.h	/^static short *stbte__get_char_bitmap(int ch)$/;"	f	typeref:typename:short *
stbte__get_char_width	stb/stb_tilemap_editor.h	/^static int stbte__get_char_width(int ch)$/;"	f	typeref:typename:int
stbte__hittest	stb/stb_tilemap_editor.h	/^static int stbte__hittest(int x0, int y0, int x1, int y1, int id)$/;"	f	typeref:typename:int
stbte__in_dest_rect	stb/stb_tilemap_editor.h	/^static int stbte__in_dest_rect(int x, int y, int destx, int desty)$/;"	f	typeref:typename:int
stbte__in_rect	stb/stb_tilemap_editor.h	/^static int stbte__in_rect(int x, int y, int x0, int y0, int w, int h)$/;"	f	typeref:typename:int
stbte__in_src_rect	stb/stb_tilemap_editor.h	/^static int stbte__in_src_rect(int x, int y)$/;"	f	typeref:typename:int
stbte__info	stb/stb_tilemap_editor.h	/^static void stbte__info(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__info_value	stb/stb_tilemap_editor.h	/^static int stbte__info_value(const char *label, int x, int y, int val, int digits, int id)$/;"	f	typeref:typename:int
stbte__init_gui	stb/stb_tilemap_editor.h	/^static void stbte__init_gui(void)$/;"	f	typeref:typename:void
stbte__is_single_selection	stb/stb_tilemap_editor.h	/^static int stbte__is_single_selection(void)$/;"	f	typeref:typename:int
stbte__layer	stb/stb_tilemap_editor.h	/^} stbte__layer;$/;"	t	typeref:struct:__anonbd4d158d0f08
stbte__layerbutton	stb/stb_tilemap_editor.h	/^static int stbte__layerbutton(int x, int y, int ch, int id, int toggled, int disabled, int color/;"	f	typeref:typename:int
stbte__layers	stb/stb_tilemap_editor.h	/^static void stbte__layers(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__link	stb/stb_tilemap_editor.h	/^} stbte__link;$/;"	t	typeref:struct:__anonbd4d158d0208
stbte__microbutton	stb/stb_tilemap_editor.h	/^static int stbte__microbutton(int x, int y, int size, int id, int colormode)$/;"	f	typeref:typename:int
stbte__microbutton_dragger	stb/stb_tilemap_editor.h	/^static int stbte__microbutton_dragger(int x, int y, int size, int id, int *pos)$/;"	f	typeref:typename:int
stbte__minibutton	stb/stb_tilemap_editor.h	/^static int stbte__minibutton(int colormode, int x, int y, int ch, int id)$/;"	f	typeref:typename:int
stbte__palette_of_tiles	stb/stb_tilemap_editor.h	/^static void stbte__palette_of_tiles(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__panel	stb/stb_tilemap_editor.h	/^} stbte__panel;$/;"	t	typeref:struct:__anonbd4d158d0c08
stbte__paste	stb/stb_tilemap_editor.h	/^static void stbte__paste(stbte_tilemap *tm, int mapx, int mapy)$/;"	f	typeref:typename:void
stbte__paste_stack	stb/stb_tilemap_editor.h	/^static void stbte__paste_stack(stbte_tilemap *tm, short result[], short dest[], short src[], int/;"	f	typeref:typename:void
stbte__prepare_tileinfo	stb/stb_tilemap_editor.h	/^static void stbte__prepare_tileinfo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__props_panel	stb/stb_tilemap_editor.h	/^static void stbte__props_panel(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__recompute_undo_available	stb/stb_tilemap_editor.h	/^static void stbte__recompute_undo_available(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__redo	stb/stb_tilemap_editor.h	/^static void stbte__redo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__redo_available	stb/stb_tilemap_editor.h	/^static int stbte__redo_available(stbte_tilemap *tm)$/;"	f	typeref:typename:int
stbte__redo_find_end	stb/stb_tilemap_editor.h	/^static int stbte__redo_find_end(stbte_tilemap *tm)$/;"	f	typeref:typename:int
stbte__redo_record	stb/stb_tilemap_editor.h	/^static void stbte__redo_record(stbte_tilemap *tm, int x, int y, int i, int v)$/;"	f	typeref:typename:void
stbte__redo_record_prop	stb/stb_tilemap_editor.h	/^static void stbte__redo_record_prop(stbte_tilemap *tm, int x, int y, int i, short s0, short s1)$/;"	f	typeref:typename:void
stbte__region	stb/stb_tilemap_editor.h	/^static stbte__region_t stbte__region[4];$/;"	v	typeref:typename:stbte__region_t[4]
stbte__region_t	stb/stb_tilemap_editor.h	/^} stbte__region_t;$/;"	t	typeref:struct:__anonbd4d158d1508
stbte__save	stb/stb_tilemap_editor.h	/^static int stbte__cp_mode, stbte__cp_aspect, stbte__save, stbte__cp_altered;$/;"	v	typeref:typename:int
stbte__saved	stb/stb_tilemap_editor.h	/^static float stbte__saved;$/;"	v	typeref:typename:float
stbte__scrollbar	stb/stb_tilemap_editor.h	/^static void stbte__scrollbar(int x, int y0, int y1, int *val, int v0, int v1, int num_vis, int i/;"	f	typeref:typename:void
stbte__select_rect	stb/stb_tilemap_editor.h	/^static void stbte__select_rect(stbte_tilemap *tm, int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
stbte__set_event	stb/stb_tilemap_editor.h	/^static void stbte__set_event(int event, int x, int y)$/;"	f	typeref:typename:void
stbte__set_link	stb/stb_tilemap_editor.h	/^static void stbte__set_link(stbte_tilemap *tm, int src_x, int src_y, int dest_x, int dest_y, int/;"	f	typeref:typename:void
stbte__should_copy_properties	stb/stb_tilemap_editor.h	/^static int stbte__should_copy_properties(stbte_tilemap *tm)$/;"	f	typeref:typename:int
stbte__sizeof	stb/stb_tilemap_editor.h	/^   #define stbte__sizeof(/;"	d
stbte__slider	stb/stb_tilemap_editor.h	/^static int stbte__slider(int x0, int w, int y, int range, int *value, int id)$/;"	f	typeref:typename:int
stbte__sprintf	stb/stb_tilemap_editor.h	/^   #define stbte__sprintf /;"	d
stbte__start_paste	stb/stb_tilemap_editor.h	/^static void stbte__start_paste(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__state_to_index	stb/stb_tilemap_editor.h	/^static unsigned char stbte__state_to_index[2][2][2][2] =$/;"	v	typeref:typename:unsigned char[2][2][2][2]
stbte__strequal	stb/stb_tilemap_editor.h	/^static int stbte__strequal(char *p, char *q)$/;"	f	typeref:typename:int
stbte__text_width	stb/stb_tilemap_editor.h	/^static int stbte__text_width(const char *str)$/;"	f	typeref:typename:int
stbte__tile	stb/stb_tilemap_editor.h	/^static void stbte__tile(stbte_tilemap *tm, int sx, int sy, int mapx, int mapy)$/;"	f	typeref:typename:void
stbte__tile_in_palette	stb/stb_tilemap_editor.h	/^static void stbte__tile_in_palette(stbte_tilemap *tm, int x, int y, int slot)$/;"	f	typeref:typename:void
stbte__tile_paint	stb/stb_tilemap_editor.h	/^static void stbte__tile_paint(stbte_tilemap *tm, int sx, int sy, int mapx, int mapy, int layer)$/;"	f	typeref:typename:void
stbte__tiledata	stb/stb_tilemap_editor.h	/^typedef short stbte__tiledata;$/;"	t	typeref:typename:short
stbte__tileinfo	stb/stb_tilemap_editor.h	/^} stbte__tileinfo;$/;"	t	typeref:struct:__anonbd4d158d0608
stbte__toolbar	stb/stb_tilemap_editor.h	/^static void stbte__toolbar(stbte_tilemap *tm, int x0, int y0, int w, int h)$/;"	f	typeref:typename:void
stbte__ui	stb/stb_tilemap_editor.h	/^static stbte__ui_t stbte__ui = { STBTE__tool_brush, 0 };$/;"	v	typeref:typename:stbte__ui_t
stbte__ui_t	stb/stb_tilemap_editor.h	/^} stbte__ui_t;$/;"	t	typeref:struct:__anonbd4d158d0e08
stbte__undo	stb/stb_tilemap_editor.h	/^static void stbte__undo(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte__undo_available	stb/stb_tilemap_editor.h	/^static int stbte__undo_available(stbte_tilemap *tm)$/;"	f	typeref:typename:int
stbte__undo_find_end	stb/stb_tilemap_editor.h	/^static int stbte__undo_find_end(stbte_tilemap *tm)$/;"	f	typeref:typename:int
stbte__undo_record	stb/stb_tilemap_editor.h	/^static void stbte__undo_record(stbte_tilemap *tm, int x, int y, int i, int v)$/;"	f	typeref:typename:void
stbte__undo_record_prop	stb/stb_tilemap_editor.h	/^static void stbte__undo_record_prop(stbte_tilemap *tm, int x, int y, int i, short s0, short s1)$/;"	f	typeref:typename:void
stbte__undo_record_prop_float	stb/stb_tilemap_editor.h	/^static void stbte__undo_record_prop_float(stbte_tilemap *tm, int x, int y, int i, float f)$/;"	f	typeref:typename:void
stbte__wrap	stb/stb_tilemap_editor.h	/^#define stbte__wrap(/;"	d
stbte__write_redo	stb/stb_tilemap_editor.h	/^static void stbte__write_redo(stbte_tilemap *tm, short value)$/;"	f	typeref:typename:void
stbte__write_undo	stb/stb_tilemap_editor.h	/^static void stbte__write_undo(stbte_tilemap *tm, short value)$/;"	f	typeref:typename:void
stbte_action	stb/stb_tilemap_editor.h	/^enum stbte_action$/;"	g
stbte_action	stb/stb_tilemap_editor.h	/^void stbte_action(stbte_tilemap *tm, enum stbte_action act)$/;"	f	typeref:typename:void
stbte_clear_map	stb/stb_tilemap_editor.h	/^void stbte_clear_map(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte_create_map	stb/stb_tilemap_editor.h	/^stbte_tilemap *stbte_create_map(int map_x, int map_y, int map_layers, int spacing_x, int spacing/;"	f	typeref:typename:stbte_tilemap *
stbte_define_tile	stb/stb_tilemap_editor.h	/^void stbte_define_tile(stbte_tilemap *tm, unsigned short id, unsigned int layermask, const char /;"	f	typeref:typename:void
stbte_draw	stb/stb_tilemap_editor.h	/^void stbte_draw(stbte_tilemap *tm)$/;"	f	typeref:typename:void
stbte_get_dimensions	stb/stb_tilemap_editor.h	/^void stbte_get_dimensions(stbte_tilemap *tm, int *max_x, int *max_y)$/;"	f	typeref:typename:void
stbte_get_link	stb/stb_tilemap_editor.h	/^void stbte_get_link(stbte_tilemap *tm, int x, int y, int *destx, int *desty)$/;"	f	typeref:typename:void
stbte_get_properties	stb/stb_tilemap_editor.h	/^float *stbte_get_properties(stbte_tilemap *tm, int x, int y)$/;"	f	typeref:typename:float *
stbte_get_tile	stb/stb_tilemap_editor.h	/^short* stbte_get_tile(stbte_tilemap *tm, int x, int y)$/;"	f	typeref:typename:short *
stbte_mouse_button	stb/stb_tilemap_editor.h	/^void stbte_mouse_button(stbte_tilemap *tm, int x, int y, int right, int down, int shifted, int s/;"	f	typeref:typename:void
stbte_mouse_move	stb/stb_tilemap_editor.h	/^void stbte_mouse_move(stbte_tilemap *tm, int x, int y, int shifted, int scrollkey)$/;"	f	typeref:typename:void
stbte_mouse_sdl	stb/stb_tilemap_editor.h	/^void stbte_mouse_sdl(stbte_tilemap *tm, const void *sdl_event, float xs, float ys, int xo, int y/;"	f	typeref:typename:void
stbte_mouse_wheel	stb/stb_tilemap_editor.h	/^void stbte_mouse_wheel(stbte_tilemap *tm, int x, int y, int vscroll)$/;"	f	typeref:typename:void
stbte_set_background_tile	stb/stb_tilemap_editor.h	/^void stbte_set_background_tile(stbte_tilemap *tm, short id)$/;"	f	typeref:typename:void
stbte_set_dimensions	stb/stb_tilemap_editor.h	/^void stbte_set_dimensions(stbte_tilemap *tm, int map_x, int map_y)$/;"	f	typeref:typename:void
stbte_set_display	stb/stb_tilemap_editor.h	/^void stbte_set_display(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
stbte_set_layername	stb/stb_tilemap_editor.h	/^void stbte_set_layername(stbte_tilemap *tm, int layer, const char *layername)$/;"	f	typeref:typename:void
stbte_set_link	stb/stb_tilemap_editor.h	/^void stbte_set_link(stbte_tilemap *tm, int x, int y, int destx, int desty)$/;"	f	typeref:typename:void
stbte_set_property	stb/stb_tilemap_editor.h	/^void stbte_set_property(stbte_tilemap *tm, int x, int y, int n, float val)$/;"	f	typeref:typename:void
stbte_set_sidewidths	stb/stb_tilemap_editor.h	/^void stbte_set_sidewidths(int left, int right)$/;"	f	typeref:typename:void
stbte_set_spacing	stb/stb_tilemap_editor.h	/^void stbte_set_spacing(stbte_tilemap *tm, int spacing_x, int spacing_y, int palette_spacing_x, i/;"	f	typeref:typename:void
stbte_set_tile	stb/stb_tilemap_editor.h	/^void stbte_set_tile(stbte_tilemap *tm, int x, int y, int layer, signed short tile)$/;"	f	typeref:typename:void
stbte_tick	stb/stb_tilemap_editor.h	/^void stbte_tick(stbte_tilemap *tm, float dt)$/;"	f	typeref:typename:void
stbte_tilemap	stb/stb_tilemap_editor.h	/^struct stbte_tilemap$/;"	s
stbte_tilemap	stb/stb_tilemap_editor.h	/^typedef struct stbte_tilemap stbte_tilemap;$/;"	t	typeref:struct:stbte_tilemap
stbtt_BakeFontBitmap	stb/stb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f	typeref:typename:STBTT_DEF int
stbtt_BakeFontBitmap_internal	stb/stb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (u/;"	f	typeref:typename:int
stbtt_CompareUTF8toUTF16_bigendian	stb/stb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int l/;"	f	typeref:typename:STBTT_DEF int
stbtt_CompareUTF8toUTF16_bigendian_internal	stb/stb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2)$/;"	f	typeref:typename:int
stbtt_FindGlyphIndex	stb/stb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont	stb/stb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont_internal	stb/stb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbt/;"	f	typeref:typename:int
stbtt_FindSVGDoc	stb/stb_truetype.h	/^STBTT_DEF stbtt_uint8 *stbtt_FindSVGDoc(const stbtt_fontinfo *info, int gl)$/;"	f	typeref:typename:STBTT_DEF stbtt_uint8 *
stbtt_FlattenCurves	stb/stb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_f/;"	f	typeref:typename:stbtt__point *
stbtt_FreeBitmap	stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeSDF	stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeShape	stb/stb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetBakedQuad	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_inde/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmap	stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBitmapBox	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapBoxSubpixel	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, fl/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapSubpixel	stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scal/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBox	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointHMetrics	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanc/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointKernAdvance	stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointSDF	stb/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int cod/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointSVG	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointSVG(const stbtt_fontinfo *info, int unicode_codepoint, const cha/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointShape	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_v/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontBoundingBox	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, i/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontNameString	stb/stb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platf/;"	f	typeref:typename:STBTT_DEF const char *
stbtt_GetFontOffsetForIndex	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontOffsetForIndex_internal	stb/stb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f	typeref:typename:int
stbtt_GetFontVMetrics	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontVMetricsOS2	stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDe/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphBitmap	stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float s/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBitmapBox	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapBoxSubpixel	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapSubpixel	stb/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBox	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, i/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphHMetrics	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceW/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphKernAdvance	stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphSDF	stb/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, /;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphSVG	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphSVG(const stbtt_fontinfo *info, int gl, const char **svg)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphShape	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTable	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetKerningTable(const stbtt_fontinfo *info, stbtt_kerningentry* table, int t/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTableLength	stb/stb_truetype.h	/^STBTT_DEF int  stbtt_GetKerningTableLength(const stbtt_fontinfo *info)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts	stb/stb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts_internal	stb/stb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f	typeref:typename:int
stbtt_GetPackedQuad	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_in/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetScaledFontVMetrics	stb/stb_truetype.h	/^STBTT_DEF void stbtt_GetScaledFontVMetrics(const unsigned char *fontdata, int index, float size,/;"	f	typeref:typename:STBTT_DEF void
stbtt_InitFont	stb/stb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_InitFont_internal	stb/stb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f	typeref:typename:int
stbtt_IsGlyphEmpty	stb/stb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_MakeCodepointBitmap	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixel	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outp/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixelPrefilter	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned c/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmap	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixel	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixelPrefilter	stb/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char /;"	f	typeref:typename:STBTT_DEF void
stbtt_PackBegin	stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, in/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackEnd	stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRange	stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int fo/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRanges	stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int f/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesGatherRects	stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *inf/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesPackRects	stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRangesRenderIntoRects	stb/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo /;"	f	typeref:typename:STBTT_DEF int
stbtt_PackSetOversampling	stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, uns/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackSetSkipMissingCodepoints	stb/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetSkipMissingCodepoints(stbtt_pack_context *spc, int skip)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_Rasterize	stb/stb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *ve/;"	f	typeref:typename:STBTT_DEF void
stbtt_ScaleForMappingEmToPixels	stb/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f	typeref:typename:STBTT_DEF float
stbtt_ScaleForPixelHeight	stb/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f	typeref:typename:STBTT_DEF float
stbtt__CompareUTF8toUTF16_bigendian_prefix	stb/stb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,/;"	f	typeref:typename:stbtt_int32
stbtt__GetCoverageIndex	stb/stb_truetype.h	/^static stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyfOffset	stb/stb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:int
stbtt__GetGlyphClass	stb/stb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphGPOSInfoAdvance	stb/stb_truetype.h	/^static stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int gl/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphInfoT2	stb/stb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, /;"	f	typeref:typename:int
stbtt__GetGlyphKernInfoAdvance	stb/stb_truetype.h	/^static int stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f	typeref:typename:int
stbtt__GetGlyphShapeT2	stb/stb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__GetGlyphShapeTT	stb/stb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__active_edge	stb/stb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	stb/stb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	stb/stb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f	typeref:typename:void
stbtt__bitmap	stb/stb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anon77ab60dd0808
stbtt__buf	stb/stb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anon77ab60dd0108
stbtt__buf_get	stb/stb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f	typeref:typename:stbtt_uint32
stbtt__buf_get16	stb/stb_truetype.h	/^#define stbtt__buf_get16(/;"	d
stbtt__buf_get32	stb/stb_truetype.h	/^#define stbtt__buf_get32(/;"	d
stbtt__buf_get8	stb/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_peek8	stb/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_range	stb/stb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f	typeref:typename:stbtt__buf
stbtt__buf_seek	stb/stb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__buf_skip	stb/stb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__cff_get_index	stb/stb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_index_count	stb/stb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f	typeref:typename:int
stbtt__cff_index_get	stb/stb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_int	stb/stb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint32
stbtt__cff_skip_operand	stb/stb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f	typeref:typename:void
stbtt__check_size16	stb/stb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int16)==2?1:-1]
stbtt__check_size32	stb/stb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int32)==4?1:-1]
stbtt__cid_get_glyph_subrs	stb/stb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:stbtt__buf
stbtt__close_shape	stb/stb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_o/;"	f	typeref:typename:int
stbtt__compute_crossings_x	stb/stb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f	typeref:typename:int
stbtt__csctx	stb/stb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anon77ab60dd0f08
stbtt__csctx_close_shape	stb/stb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f	typeref:typename:void
stbtt__csctx_rccurve_to	stb/stb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy/;"	f	typeref:typename:void
stbtt__csctx_rline_to	stb/stb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_rmove_to	stb/stb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_v	stb/stb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbt/;"	f	typeref:typename:void
stbtt__cuberoot	stb/stb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f	typeref:typename:float
stbtt__dict_get	stb/stb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f	typeref:typename:stbtt__buf
stbtt__dict_get_ints	stb/stb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f	typeref:typename:void
stbtt__edge	stb/stb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	stb/stb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	stb/stb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, in/;"	f	typeref:typename:void
stbtt__fill_active_edges_new	stb/stb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__/;"	f	typeref:typename:void
stbtt__find_table	stb/stb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag/;"	f	typeref:typename:stbtt_uint32
stbtt__get_subr	stb/stb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_subrs	stb/stb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_svg	stb/stb_truetype.h	/^static int stbtt__get_svg(stbtt_fontinfo *info)$/;"	f	typeref:typename:int
stbtt__h_prefilter	stb/stb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt__handle_clipped_edge	stb/stb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, /;"	f	typeref:typename:void
stbtt__hheap	stb/stb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	stb/stb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	stb/stb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f	typeref:typename:void *
stbtt__hheap_chunk	stb/stb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	stb/stb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	stb/stb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f	typeref:typename:void
stbtt__hheap_free	stb/stb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f	typeref:typename:void
stbtt__isfont	stb/stb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f	typeref:typename:int
stbtt__matches	stb/stb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 f/;"	f	typeref:typename:int
stbtt__matchpair	stb/stb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nle/;"	f	typeref:typename:int
stbtt__new_active	stb/stb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float /;"	f	typeref:typename:stbtt__active_edge *
stbtt__new_buf	stb/stb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f	typeref:typename:stbtt__buf
stbtt__oversample_shift	stb/stb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f	typeref:typename:float
stbtt__point	stb/stb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anon77ab60dd1008
stbtt__position_trapezoid_area	stb/stb_truetype.h	/^static float stbtt__position_trapezoid_area(float height, float tx0, float tx1, float bx0, float/;"	f	typeref:typename:float
stbtt__rasterize	stb/stb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings/;"	f	typeref:typename:void
stbtt__rasterize_sorted_edges	stb/stb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsub/;"	f	typeref:typename:void
stbtt__ray_intersect_bezier	stb/stb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], fl/;"	f	typeref:typename:int
stbtt__run_charstring	stb/stb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f	typeref:typename:int
stbtt__sized_trapezoid_area	stb/stb_truetype.h	/^static float stbtt__sized_trapezoid_area(float height, float top_width, float bottom_width)$/;"	f	typeref:typename:float
stbtt__sized_triangle_area	stb/stb_truetype.h	/^static float stbtt__sized_triangle_area(float height, float width)$/;"	f	typeref:typename:float
stbtt__solve_cubic	stb/stb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f	typeref:typename:int
stbtt__sort_edges	stb/stb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_ins_sort	stb/stb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_quicksort	stb/stb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__tesselate_cubic	stb/stb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, fl/;"	f	typeref:typename:void
stbtt__tesselate_curve	stb/stb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flo/;"	f	typeref:typename:int
stbtt__test_oversample_pow2	stb/stb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?/;"	t	typeref:typename:int[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1))==0?1:-1]
stbtt__track_vertex	stb/stb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f	typeref:typename:void
stbtt__v_prefilter	stb/stb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt_aligned_quad	stb/stb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anon77ab60dd0308
stbtt_bakedchar	stb/stb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anon77ab60dd0208
stbtt_fontinfo	stb/stb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	stb/stb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	stb/stb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t	typeref:typename:signed short
stbtt_int32	stb/stb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t	typeref:typename:signed int
stbtt_int8	stb/stb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t	typeref:typename:signed char
stbtt_kerningentry	stb/stb_truetype.h	/^typedef struct stbtt_kerningentry$/;"	s
stbtt_kerningentry	stb/stb_truetype.h	/^} stbtt_kerningentry;$/;"	t	typeref:struct:stbtt_kerningentry
stbtt_pack_context	stb/stb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	stb/stb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	stb/stb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anon77ab60dd0508
stbtt_packedchar	stb/stb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anon77ab60dd0408
stbtt_setvertex	stb/stb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stb/;"	f	typeref:typename:void
stbtt_tag	stb/stb_truetype.h	/^#define stbtt_tag(/;"	d
stbtt_tag4	stb/stb_truetype.h	/^#define stbtt_tag4(/;"	d
stbtt_uint16	stb/stb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t	typeref:typename:unsigned short
stbtt_uint32	stb/stb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t	typeref:typename:unsigned int
stbtt_uint8	stb/stb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t	typeref:typename:unsigned char
stbtt_vertex	stb/stb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anon77ab60dd0708
stbtt_vertex_type	stb/stb_truetype.h	/^   #define stbtt_vertex_type /;"	d
stbv__floor_ordering	stb/stb_vorbis.c	/^} stbv__floor_ordering;$/;"	t	typeref:struct:__anon008e12ab0e08	file:
stbvox_block_type	stb/stb_voxel_render.h	/^typedef unsigned char stbvox_block_type;$/;"	t	typeref:typename:unsigned char
stbvox_block_type	stb/stb_voxel_render.h	/^typedef unsigned short stbvox_block_type;$/;"	t	typeref:typename:unsigned short
stbvox_bring_up_to_date	stb/stb_voxel_render.h	/^static void stbvox_bring_up_to_date(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:void
stbvox_build_default_palette	stb/stb_voxel_render.h	/^static void stbvox_build_default_palette(void)$/;"	f	typeref:typename:void
stbvox_ceil_slope_for_rot	stb/stb_voxel_render.h	/^static unsigned char stbvox_ceil_slope_for_rot[4] =$/;"	v	typeref:typename:unsigned char[4]
stbvox_compute_mesh_face_value	stb/stb_voxel_render.h	/^stbvox_mesh_face stbvox_compute_mesh_face_value(stbvox_mesh_maker *mm, stbvox_rotate rot, int fa/;"	f	typeref:typename:stbvox_mesh_face
stbvox_default_ambient	stb/stb_voxel_render.h	/^static float stbvox_default_ambient[4][4] =$/;"	v	typeref:typename:float[4][4]
stbvox_default_normals	stb/stb_voxel_render.h	/^static float stbvox_default_normals[32][3] =$/;"	v	typeref:typename:float[32][3]
stbvox_default_palette	stb/stb_voxel_render.h	/^static float stbvox_default_palette[64][4];$/;"	v	typeref:typename:float[64][4]
stbvox_default_palette_compact	stb/stb_voxel_render.h	/^static unsigned char stbvox_default_palette_compact[64][3] =$/;"	v	typeref:typename:unsigned char[64][3]
stbvox_default_texgen	stb/stb_voxel_render.h	/^static float stbvox_default_texgen[2][32][3] =$/;"	v	typeref:typename:float[2][32][3]
stbvox_default_texscale	stb/stb_voxel_render.h	/^static float stbvox_default_texscale[128][4] =$/;"	v	typeref:typename:float[128][4]
stbvox_dummy_transform	stb/stb_voxel_render.h	/^static float stbvox_dummy_transform[3][3];$/;"	v	typeref:typename:float[3][3]
stbvox_face3_lerp	stb/stb_voxel_render.h	/^static unsigned char stbvox_face3_lerp[6] = { 0,3,6,9,12,14 };$/;"	v	typeref:typename:unsigned char[6]
stbvox_face3_updown	stb/stb_voxel_render.h	/^static unsigned char stbvox_face3_updown[8] = { 0,2,5,7,0,2,5,7 }; \/\/ ignore top bit$/;"	v	typeref:typename:unsigned char[8]
stbvox_face_lerp	stb/stb_voxel_render.h	/^static unsigned char stbvox_face_lerp[6] = { 0,2,0,2,4,4 };$/;"	v	typeref:typename:unsigned char[6]
stbvox_face_up_normal_012	stb/stb_voxel_render.h	/^static unsigned char stbvox_face_up_normal_012[4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4]
stbvox_face_up_normal_013	stb/stb_voxel_render.h	/^static unsigned char stbvox_face_up_normal_013[4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4]
stbvox_face_up_normal_023	stb/stb_voxel_render.h	/^static unsigned char stbvox_face_up_normal_023[4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4]
stbvox_face_up_normal_123	stb/stb_voxel_render.h	/^static unsigned char stbvox_face_up_normal_123[4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4]
stbvox_face_visible	stb/stb_voxel_render.h	/^static unsigned short stbvox_face_visible[STBVOX_FT_count] =$/;"	v	typeref:typename:unsigned short[]
stbvox_facetype	stb/stb_voxel_render.h	/^static unsigned char stbvox_facetype[STBVOX_GEOM_count][6] =$/;"	v	typeref:typename:unsigned char[][6]
stbvox_floor_slope_for_rot	stb/stb_voxel_render.h	/^static unsigned char stbvox_floor_slope_for_rot[4] =$/;"	v	typeref:typename:unsigned char[4]
stbvox_fragment_program	stb/stb_voxel_render.h	/^static const char *stbvox_fragment_program =$/;"	v	typeref:typename:const char *
stbvox_fragment_program_alpha_only	stb/stb_voxel_render.h	/^static const char *stbvox_fragment_program_alpha_only =$/;"	v	typeref:typename:const char *
stbvox_geometry_vheight	stb/stb_voxel_render.h	/^static stbvox_mesh_vertex stbvox_geometry_vheight[8][8] =$/;"	v	typeref:typename:stbvox_mesh_vertex[8][8]
stbvox_get_bounds	stb/stb_voxel_render.h	/^void stbvox_get_bounds(stbvox_mesh_maker *mm, float bounds[2][3])$/;"	f	typeref:typename:void
stbvox_get_buffer_count	stb/stb_voxel_render.h	/^int stbvox_get_buffer_count(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:int
stbvox_get_buffer_size_per_quad	stb/stb_voxel_render.h	/^int stbvox_get_buffer_size_per_quad(stbvox_mesh_maker *mm, int n)$/;"	f	typeref:typename:int
stbvox_get_fragment_shader	stb/stb_voxel_render.h	/^STBVXDEC char *stbvox_get_fragment_shader(void)$/;"	f	typeref:typename:STBVXDEC char *
stbvox_get_fragment_shader_alpha_only	stb/stb_voxel_render.h	/^STBVXDEC char *stbvox_get_fragment_shader_alpha_only(void)$/;"	f	typeref:typename:STBVXDEC char *
stbvox_get_input_description	stb/stb_voxel_render.h	/^stbvox_input_description *stbvox_get_input_description(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:stbvox_input_description *
stbvox_get_quad_count	stb/stb_voxel_render.h	/^int stbvox_get_quad_count(stbvox_mesh_maker *mm, int mesh)$/;"	f	typeref:typename:int
stbvox_get_quad_vertex_pointer	stb/stb_voxel_render.h	/^void stbvox_get_quad_vertex_pointer(stbvox_mesh_maker *mm, int mesh, stbvox_mesh_vertex **vertic/;"	f	typeref:typename:void
stbvox_get_transform	stb/stb_voxel_render.h	/^void stbvox_get_transform(stbvox_mesh_maker *mm, float transform[3][3])$/;"	f	typeref:typename:void
stbvox_get_uniform_info	stb/stb_voxel_render.h	/^STBVXDEC int stbvox_get_uniform_info(stbvox_uniform_info *info, int uniform)$/;"	f	typeref:typename:STBVXDEC int
stbvox_get_vertex_shader	stb/stb_voxel_render.h	/^STBVXDEC char *stbvox_get_vertex_shader(void)$/;"	f	typeref:typename:STBVXDEC char *
stbvox_hasface	stb/stb_voxel_render.h	/^static unsigned char stbvox_hasface[STBVOX_MAX_GEOM][STBVOX_NUM_ROTATION] =$/;"	v	typeref:typename:unsigned char[][]
stbvox_init_mesh_maker	stb/stb_voxel_render.h	/^void stbvox_init_mesh_maker(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:void
stbvox_input_description	stb/stb_voxel_render.h	/^struct stbvox_input_description$/;"	s
stbvox_input_description	stb/stb_voxel_render.h	/^typedef struct stbvox_input_description stbvox_input_description;$/;"	t	typeref:struct:stbvox_input_description
stbvox_make_03_split_mesh_for_face	stb/stb_voxel_render.h	/^static void stbvox_make_03_split_mesh_for_face(stbvox_mesh_maker *mm, stbvox_rotate rot, int fac/;"	f	typeref:typename:void
stbvox_make_12_split_mesh_for_face	stb/stb_voxel_render.h	/^static void stbvox_make_12_split_mesh_for_face(stbvox_mesh_maker *mm, stbvox_rotate rot, int fac/;"	f	typeref:typename:void
stbvox_make_mesh	stb/stb_voxel_render.h	/^int stbvox_make_mesh(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:int
stbvox_make_mesh_for_block	stb/stb_voxel_render.h	/^static void stbvox_make_mesh_for_block(stbvox_mesh_maker *mm, stbvox_pos pos, int v_off, stbvox_/;"	f	typeref:typename:void
stbvox_make_mesh_for_block_with_geo	stb/stb_voxel_render.h	/^static void stbvox_make_mesh_for_block_with_geo(stbvox_mesh_maker *mm, stbvox_pos pos, int v_off/;"	f	typeref:typename:void
stbvox_make_mesh_for_column	stb/stb_voxel_render.h	/^static void stbvox_make_mesh_for_column(stbvox_mesh_maker *mm, int x, int y, int z0)$/;"	f	typeref:typename:void
stbvox_make_mesh_for_face	stb/stb_voxel_render.h	/^void stbvox_make_mesh_for_face(stbvox_mesh_maker *mm, stbvox_rotate rot, int face, int v_off, st/;"	f	typeref:typename:void
stbvox_mesh_face	stb/stb_voxel_render.h	/^   } stbvox_mesh_face;$/;"	t	typeref:struct:__anonc1feb0a80a08
stbvox_mesh_maker	stb/stb_voxel_render.h	/^struct stbvox_mesh_maker$/;"	s
stbvox_mesh_maker	stb/stb_voxel_render.h	/^typedef struct stbvox_mesh_maker stbvox_mesh_maker;$/;"	t	typeref:struct:stbvox_mesh_maker
stbvox_mesh_vertex	stb/stb_voxel_render.h	/^   typedef stbvox_uint16 stbvox_mesh_vertex;$/;"	t	typeref:typename:stbvox_uint16
stbvox_mesh_vertex	stb/stb_voxel_render.h	/^   typedef stbvox_uint32 stbvox_mesh_vertex;$/;"	t	typeref:typename:stbvox_uint32
stbvox_mesh_vertex	stb/stb_voxel_render.h	/^   typedef stbvox_uint8 stbvox_mesh_vertex;$/;"	t	typeref:typename:stbvox_uint8
stbvox_optimized_face_up_normal	stb/stb_voxel_render.h	/^static unsigned char stbvox_optimized_face_up_normal[4][4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4][4]
stbvox_planar_face_up_normal	stb/stb_voxel_render.h	/^static unsigned char stbvox_planar_face_up_normal[4][4][4] =$/;"	v	typeref:typename:unsigned char[4][4][4]
stbvox_pos	stb/stb_voxel_render.h	/^} stbvox_pos;$/;"	t	typeref:struct:__anonc1feb0a80d08
stbvox_reset_buffers	stb/stb_voxel_render.h	/^void stbvox_reset_buffers(stbvox_mesh_maker *mm)$/;"	f	typeref:typename:void
stbvox_reverse_face	stb/stb_voxel_render.h	/^static unsigned char stbvox_reverse_face[STBVF_count] =$/;"	v	typeref:typename:unsigned char[]
stbvox_rgb	stb/stb_voxel_render.h	/^} stbvox_rgb;$/;"	t	typeref:struct:__anonc1feb0a80508
stbvox_rotate	stb/stb_voxel_render.h	/^} stbvox_rotate;$/;"	t	typeref:struct:__anonc1feb0a80c08
stbvox_rotate_face	stb/stb_voxel_render.h	/^static unsigned char stbvox_rotate_face[6][4] =$/;"	v	typeref:typename:unsigned char[6][4]
stbvox_rotate_vertex	stb/stb_voxel_render.h	/^static unsigned char stbvox_rotate_vertex[8][4] =$/;"	v	typeref:typename:unsigned char[8][4]
stbvox_set_buffer	stb/stb_voxel_render.h	/^void stbvox_set_buffer(stbvox_mesh_maker *mm, int mesh, int slot, void *buffer, size_t len)$/;"	f	typeref:typename:void
stbvox_set_default_mesh	stb/stb_voxel_render.h	/^void stbvox_set_default_mesh(stbvox_mesh_maker *mm, int mesh)$/;"	f	typeref:typename:void
stbvox_set_input_range	stb/stb_voxel_render.h	/^void stbvox_set_input_range(stbvox_mesh_maker *mm, int x0, int y0, int z0, int x1, int y1, int z/;"	f	typeref:typename:void
stbvox_set_input_stride	stb/stb_voxel_render.h	/^void stbvox_set_input_stride(stbvox_mesh_maker *mm, int x_stride_in_bytes, int y_stride_in_bytes/;"	f	typeref:typename:void
stbvox_set_mesh_coordinates	stb/stb_voxel_render.h	/^void stbvox_set_mesh_coordinates(stbvox_mesh_maker *mm, int x, int y, int z)$/;"	f	typeref:typename:void
stbvox_uint16	stb/stb_voxel_render.h	/^   typedef uint16_t stbvox_uint16;$/;"	t	typeref:typename:uint16_t
stbvox_uint16	stb/stb_voxel_render.h	/^   typedef unsigned short stbvox_uint16;$/;"	t	typeref:typename:unsigned short
stbvox_uint32	stb/stb_voxel_render.h	/^   typedef uint32_t stbvox_uint32;$/;"	t	typeref:typename:uint32_t
stbvox_uint32	stb/stb_voxel_render.h	/^   typedef unsigned int   stbvox_uint32;$/;"	t	typeref:typename:unsigned int
stbvox_uniform_info	stb/stb_voxel_render.h	/^struct stbvox_uniform_info$/;"	s
stbvox_uniform_info	stb/stb_voxel_render.h	/^typedef struct stbvox_uniform_info stbvox_uniform_info;$/;"	t	typeref:struct:stbvox_uniform_info
stbvox_uniforms	stb/stb_voxel_render.h	/^static stbvox_uniform_info stbvox_uniforms[] =$/;"	v	typeref:typename:stbvox_uniform_info[]
stbvox_vert3_lerp	stb/stb_voxel_render.h	/^static unsigned char stbvox_vert3_lerp[5] = { 0,3,6,9,12 };$/;"	v	typeref:typename:unsigned char[5]
stbvox_vert_lerp_for_face_lerp	stb/stb_voxel_render.h	/^static unsigned char stbvox_vert_lerp_for_face_lerp[4] = { 0, 4, 7, 7 };$/;"	v	typeref:typename:unsigned char[4]
stbvox_vert_lerp_for_simple	stb/stb_voxel_render.h	/^static unsigned char stbvox_vert_lerp_for_simple[4] = { 0,2,5,7 };$/;"	v	typeref:typename:unsigned char[4]
stbvox_vertex_encode	stb/stb_voxel_render.h	/^   #define stbvox_vertex_encode(/;"	d
stbvox_vertex_program	stb/stb_voxel_render.h	/^static const char *stbvox_vertex_program =$/;"	v	typeref:typename:const char *
stbvox_vertex_selector	stb/stb_voxel_render.h	/^static unsigned char stbvox_vertex_selector[6][4] =$/;"	v	typeref:typename:unsigned char[6][4]
stbvox_vertex_vector	stb/stb_voxel_render.h	/^static unsigned char stbvox_vertex_vector[6][4][3] =$/;"	v	typeref:typename:unsigned char[6][4][3]
stbvox_vmesh_crossed_pair	stb/stb_voxel_render.h	/^static stbvox_mesh_vertex stbvox_vmesh_crossed_pair[6][4] =$/;"	v	typeref:typename:stbvox_mesh_vertex[6][4]
stbvox_vmesh_delta_half_z	stb/stb_voxel_render.h	/^static stbvox_mesh_vertex stbvox_vmesh_delta_half_z[6][4] =$/;"	v	typeref:typename:stbvox_mesh_vertex[6][4]
stbvox_vmesh_delta_normal	stb/stb_voxel_render.h	/^static stbvox_mesh_vertex stbvox_vmesh_delta_normal[6][4] =$/;"	v	typeref:typename:stbvox_mesh_vertex[6][4]
stbvox_vmesh_pre_vheight	stb/stb_voxel_render.h	/^static stbvox_mesh_vertex stbvox_vmesh_pre_vheight[6][4] =$/;"	v	typeref:typename:stbvox_mesh_vertex[6][4]
stbwingraph_ChangeResolution	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_ChangeResolution(unsigned int w, unsigned int h, unsigned int bits, int use_mess/;"	f	typeref:typename:int
stbwingraph_CreateWindow	stb/tests/oversample/stb_wingraph.h	/^void *stbwingraph_CreateWindow(int primary, stbwingraph_window_proc func, void *data, char *text/;"	f	typeref:typename:void *
stbwingraph_CreateWindowSimple	stb/tests/oversample/stb_wingraph.h	/^void *stbwingraph_CreateWindowSimple(stbwingraph_window_proc func, int width, int height)$/;"	f	typeref:typename:void *
stbwingraph_CreateWindowSimpleFull	stb/tests/oversample/stb_wingraph.h	/^void *stbwingraph_CreateWindowSimpleFull(stbwingraph_window_proc func, int fullscreen, int ww, i/;"	f	typeref:typename:void *
stbwingraph_DefineClass	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_DefineClass(HINSTANCE hInstance, char *iconname)$/;"	f	typeref:typename:int
stbwingraph_DestroyWindow	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_DestroyWindow(void *window)$/;"	f	typeref:typename:void
stbwingraph_GetTimestep	stb/tests/oversample/stb_wingraph.h	/^float stbwingraph_GetTimestep(float minimum_time)$/;"	f	typeref:typename:float
stbwingraph_MainLoop	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_MainLoop(stbwingraph_update func, float mintime)$/;"	f	typeref:typename:int
stbwingraph_MakeFonts	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_MakeFonts(void *window, int font_base)$/;"	f	typeref:typename:void
stbwingraph_MessageBox	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_MessageBox(stbwingraph_hwnd win, unsigned int type, char *caption, char *text, ./;"	f	typeref:typename:int
stbwingraph_Priority	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_Priority(int n)$/;"	f	typeref:typename:void
stbwingraph_RegisterResetResolution	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph_RegisterResetResolution(void)$/;"	f	typeref:typename:void
stbwingraph_ResetResolution	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph_ResetResolution(void)$/;"	f	typeref:typename:void
stbwingraph_SetGLWindow	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_SetGLWindow(void *win)$/;"	f	typeref:typename:void
stbwingraph_SetPixelFormat	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_SetPixelFormat(stbwingraph_hwnd win, int color_bits, int alpha_bits, int depth_b/;"	f	typeref:typename:int
stbwingraph_ShowCursor	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_ShowCursor(void *window, int visible)$/;"	f	typeref:typename:void
stbwingraph_ShowWindow	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_ShowWindow(void *window)$/;"	f	typeref:typename:void
stbwingraph_SwapBuffers	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_SwapBuffers(void *win)$/;"	f	typeref:typename:void
stbwingraph_WinProc	stb/tests/oversample/stb_wingraph.h	/^static int WINAPI stbwingraph_WinProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:int WINAPI
stbwingraph__inclient	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph__inclient(stbwingraph__window *win, int state)$/;"	f	typeref:typename:void
stbwingraph__key	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph__key(stbwingraph_event *e, int type, int key, stbwingraph__window *z)$/;"	f	typeref:typename:void
stbwingraph__mouse	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph__mouse(stbwingraph_event *e, int type, WPARAM wparam, LPARAM lparam, int/;"	f	typeref:typename:void
stbwingraph__mousewheel	stb/tests/oversample/stb_wingraph.h	/^static void stbwingraph__mousewheel(stbwingraph_event *e, int type, WPARAM wparam, LPARAM lparam/;"	f	typeref:typename:void
stbwingraph__window	stb/tests/oversample/stb_wingraph.h	/^} stbwingraph__window;$/;"	t	typeref:struct:__anon9f50dc2a0408
stbwingraph_app	stb/tests/oversample/stb_wingraph.h	/^stbwingraph_hinstance   stbwingraph_app;$/;"	v	typeref:typename:stbwingraph_hinstance
stbwingraph_event	stb/tests/oversample/stb_wingraph.h	/^} stbwingraph_event;$/;"	t	typeref:struct:__anon9f50dc2a0308
stbwingraph_event_type	stb/tests/oversample/stb_wingraph.h	/^} stbwingraph_event_type;$/;"	t	typeref:enum:__anon9f50dc2a0203
stbwingraph_force_update	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_force_update;$/;"	v	typeref:typename:int
stbwingraph_hinstance	stb/tests/oversample/stb_wingraph.h	/^typedef void * stbwingraph_hinstance;$/;"	t	typeref:typename:void *
stbwingraph_hwnd	stb/tests/oversample/stb_wingraph.h	/^typedef void * stbwingraph_hwnd;$/;"	t	typeref:typename:void *
stbwingraph_main	stb/tests/oversample/main.c	/^void stbwingraph_main(void)$/;"	f	typeref:typename:void
stbwingraph_ods	stb/tests/oversample/stb_wingraph.h	/^void stbwingraph_ods(char *str, ...)$/;"	f	typeref:typename:void
stbwingraph_primary_window	stb/tests/oversample/stb_wingraph.h	/^stbwingraph_hwnd        stbwingraph_primary_window;$/;"	v	typeref:typename:stbwingraph_hwnd
stbwingraph_request_fullscreen	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_request_fullscreen;$/;"	v	typeref:typename:int
stbwingraph_request_windowed	stb/tests/oversample/stb_wingraph.h	/^int stbwingraph_request_windowed;$/;"	v	typeref:typename:int
stbwingraph_update	stb/tests/oversample/stb_wingraph.h	/^typedef int (*stbwingraph_update)(float timestep, int real, int in_client);$/;"	t	typeref:typename:int (*)(float timestep,int real,int in_client)
stbwingraph_window_proc	stb/tests/oversample/stb_wingraph.h	/^typedef int (*stbwingraph_window_proc)(void *data, stbwingraph_event *event);$/;"	t	typeref:typename:int (*)(void * data,stbwingraph_event * event)
stdio_eof	stb/deprecated/stb_image.c	/^static int stdio_eof(void *user)$/;"	f	typeref:typename:int	file:
stdio_read	stb/deprecated/stb_image.c	/^static int stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int	file:
stdio_skip	stb/deprecated/stb_image.c	/^static void stdio_skip(void *user, int n)$/;"	f	typeref:typename:void	file:
stencil	stb/tests/oversample/stb_wingraph.h	/^   int   color, alpha, depth, stencil, accum;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:int
step	stb/deprecated/stb.h	/^   int mode, step;$/;"	m	struct:__anonfe33527c0408	typeref:typename:int
step	stb/deprecated/stb_image.c	/^   int parse, step;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
step	stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
step	stb/tests/caveview/cave_render.c	/^float step=0;$/;"	v	typeref:typename:float
stest	stb/tests/stb.c	/^stb_semaphore stest;$/;"	v	typeref:typename:stb_semaphore
stgbl_delete_program	stb/tests/caveview/stb_glprog.h	/^STB_GLPROG_DECLARE void stgbl_delete_program(GLuint program)$/;"	f	typeref:typename:STB_GLPROG_DECLARE void
storage	stb/stb_ds.h	/^  char storage[8];$/;"	m	struct:stbds_string_block	typeref:typename:char[8]
storage	stb/stb_ds.h	/^  stbds_hash_bucket *storage; \/\/ not a separate allocation, just 64-byte aligned storage after/;"	m	struct:__anona15bb9d20408	typeref:typename:stbds_hash_bucket *
storage	stb/stb_ds.h	/^  stbds_string_block *storage;$/;"	m	struct:stbds_string_arena	typeref:typename:stbds_string_block *
storage	stb/tools/unicode.c	/^   int   storage;$/;"	m	struct:__anona458f2750208	typeref:typename:int	file:
storage1	stb/tests/stb.c	/^unsigned char storage1[1 << 23];$/;"	v	typeref:typename:unsigned char[]
str1	stb/tests/stb.c	/^char str1[] = STR_1;$/;"	v	typeref:typename:char[]
str2	stb/tests/stb.c	/^char str2[] = STR_2 STR_2 STR_2;$/;"	v	typeref:typename:char[]
str256	stb/tests/test_ds.c	/^typedef struct { int n[32]; } str256;$/;"	t	typeref:struct:__anon7e6d9c060808	file:
str256	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[32]; } str256;$/;"	t	typeref:struct:__anon6cf133e80808	file:
str3	stb/tests/stb.c	/^char str3[] = STR_3;$/;"	v	typeref:typename:char[]
str32	stb/tests/test_ds.c	/^typedef struct { int n[8]; } str32;$/;"	t	typeref:struct:__anon7e6d9c060608	file:
str32	stb/tests/test_ds_cpp.cpp	/^typedef struct { int n[8]; } str32;$/;"	t	typeref:struct:__anon6cf133e80608	file:
stralloc	stb/stb_ds.h	/^#define stralloc /;"	d
strdup	stb/deprecated/stb.h	/^   #define strdup(/;"	d
strdup	stb/deprecated/stb.h	/^#define strdup /;"	d
stream	stb/stb_vorbis.c	/^   uint8 *stream;$/;"	m	struct:stb_vorbis	typeref:typename:uint8 *	file:
stream_end	stb/stb_vorbis.c	/^   uint8 *stream_end;$/;"	m	struct:stb_vorbis	typeref:typename:uint8 *	file:
stream_len	stb/stb_vorbis.c	/^   uint32 stream_len;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
stream_start	stb/stb_vorbis.c	/^   uint8 *stream_start;$/;"	m	struct:stb_vorbis	typeref:typename:uint8 *	file:
stride	stb/stb_herringbone_wang_tile.h	/^   int stride,w,h;$/;"	m	struct:stbhw__process	typeref:typename:int
stride	stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon77ab60dd0808	typeref:typename:int
stride_in_bytes	stb/stb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
string	stb/stb_c_lexer.h	/^   char *string;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
string	stb/stb_ds.h	/^  stbds_string_arena string;$/;"	m	struct:__anona15bb9d20408	typeref:typename:stbds_string_arena
string	stb/tests/test_cpp_compilation.cpp	/^   char *string;$/;"	m	struct:__anonfcac0af00108	typeref:typename:char *	file:
string	stb/tests/textedit_sample.c	/^   char *string;$/;"	m	struct:__anon9df40e5c0108	typeref:typename:char *	file:
string_len	stb/stb_c_lexer.h	/^   int string_len;$/;"	m	struct:__anone321a15d0108	typeref:typename:int
string_pool	stb/deprecated/stb.h	/^   void             * string_pool;   \/\/ used to free data en masse$/;"	m	struct:__anonfe33527c1508	typeref:typename:void *
string_storage	stb/stb_c_lexer.h	/^   char *string_storage;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
string_storage_len	stb/stb_c_lexer.h	/^   int   string_storage_len;$/;"	m	struct:__anone321a15d0108	typeref:typename:int
stringlen	stb/tests/test_cpp_compilation.cpp	/^   int stringlen;$/;"	m	struct:__anonfcac0af00108	typeref:typename:int	file:
stringlen	stb/tests/textedit_sample.c	/^   int stringlen;$/;"	m	struct:__anon9df40e5c0108	typeref:typename:int	file:
strip_table	stb/tools/unicode.c	/^int strip_table(table *t, int exceptions)$/;"	f	typeref:typename:int
strkey	stb/stb_ds.h	/^char *strkey(int n)$/;"	f	typeref:typename:char *
strreset	stb/stb_ds.h	/^#define strreset /;"	d
struct1	stb/tests/stb.c	/^typedef struct { unsigned short x,y,z; } struct1;$/;"	t	typeref:struct:__anon9cbc07790108	file:
struct2	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	t	typeref:struct:__anon9cbc07790208	file:
subclass_books	stb/stb_vorbis.c	/^   int16 subclass_books[16][8]; \/\/ varies$/;"	m	struct:__anon008e12ab0608	typeref:typename:int16[16][8]	file:
subdirs	stb/deprecated/stb.h	/^   stb_dirtree2 **subdirs;$/;"	m	struct:stb_dirtree2	typeref:typename:stb_dirtree2 **
submap_floor	stb/stb_vorbis.c	/^   uint8  submap_floor[15]; \/\/ varies$/;"	m	struct:__anon008e12ab0a08	typeref:typename:uint8[15]	file:
submap_residue	stb/stb_vorbis.c	/^   uint8  submap_residue[15]; \/\/ varies$/;"	m	struct:__anon008e12ab0a08	typeref:typename:uint8[15]	file:
submaps	stb/stb_vorbis.c	/^   uint8  submaps;$/;"	m	struct:__anon008e12ab0a08	typeref:typename:uint8	file:
subrs	stb/stb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
succ_high	stb/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
succ_low	stb/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
suffix	stb/deprecated/stb_image.c	/^   stbi__uint8 suffix;$/;"	m	struct:stbi_gif_lzw_struct	typeref:typename:stbi__uint8	file:
suffix	stb/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anonc3e085de1208	typeref:typename:stbi_uc
sum	stb/tests/stb.c	/^int sum(short *s)$/;"	f	typeref:typename:int
sum	stb/tests/test_ds_cpp.cpp	/^size_t t0, sum, mn,mx,count;$/;"	v	typeref:typename:size_t
support	stb/stb_image_resize.h	/^    stbir__support_fn* support;$/;"	m	struct:__anonb59f51af0508	typeref:typename:stbir__support_fn *
surface	font.cpp	/^  SDL_Surface* surface;$/;"	m	struct:FontImpl	typeref:typename:SDL_Surface *	file:
surface	render-surface.cpp	/^  SDL_Surface* surface;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:SDL_Surface *	file:
sv_blocktype	stb/tests/caveview/caveview.h	/^   uint8 sv_blocktype[34][34][18];$/;"	m	struct:__anonc22370580108	typeref:typename:uint8[34][34][18]
sv_lighting	stb/tests/caveview/caveview.h	/^   uint8 sv_lighting [34][34][18];$/;"	m	struct:__anonc22370580108	typeref:typename:uint8[34][34][18]
sval	stb/deprecated/stb.h	/^      char *sval;$/;"	m	union:__anonfe33527c2808::__anonfe33527c290a	typeref:typename:char *
svg	stb/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
swap	stb/deprecated/stb.h	/^   #define swap(/;"	d
sx	stb/stb_tilemap_editor.h	/^   int sx,sy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
sx	stb/tests/oversample/main.c	/^int sx=SIZE_X, sy=SIZE_Y;$/;"	v	typeref:typename:int
sy	stb/stb_tilemap_editor.h	/^   int sx,sy;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
sy	stb/stb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
sy	stb/tests/oversample/main.c	/^int sx=SIZE_X, sy=SIZE_Y;$/;"	v	typeref:typename:int
sync	stb/deprecated/stb.h	/^   stb_sync sync;$/;"	m	struct:__anonfe33527c2408	typeref:typename:stb_sync
synch	stb/tests/stb.c	/^stb_sync synch;$/;"	v	typeref:typename:stb_sync
t	stb/stb_hexwave.h	/^   float t, prev_dt;$/;"	m	struct:HexWave	typeref:typename:float
t	stb/stb_hexwave.h	/^   float t,v,s; \/\/ time, value, slope$/;"	m	struct:__anon773b6f930308	typeref:typename:float
t	stb/tools/unicode.c	/^   table t;$/;"	m	struct:__anona458f2750308	typeref:typename:table	file:
t0	atlas.h	/^  float s0, t0, s1, t1; \/\/ Corners in texture coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
t0	stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
t0	stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
t0	stb/tests/test_ds.c	/^unsigned __int64 t0, xsum, mn,mx,count;$/;"	v	typeref:typename:unsigned __int64
t0	stb/tests/test_ds_cpp.cpp	/^size_t t0, sum, mn,mx,count;$/;"	v	typeref:typename:size_t
t1	atlas.h	/^  float s0, t0, s1, t1; \/\/ Corners in texture coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
t1	stb/stb_image_resize.h	/^    float s0, t0, s1, t1;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
t1	stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
table	stb/deprecated/stb.h	/^   stb_uint32 *table;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint32 *
table	stb/deprecated/stb.h	/^   void *table[1];$/;"	m	struct:__anonfe33527c1a08	typeref:typename:void * [1]
table	stb/tools/unicode.c	/^} table;$/;"	t	typeref:struct:__anona458f2750108	file:
table3	stb/tests/caveview/cave_render.c	/^float table3[128][3];$/;"	v	typeref:typename:float[128][3]
table4	stb/tests/caveview/cave_render.c	/^float table4[64][4];$/;"	v	typeref:typename:float[64][4]
table_mask	stb/deprecated/stb.h	/^   stb_uint table_mask;$/;"	m	struct:__anonfe33527c0b08	typeref:typename:stb_uint
table_size	stb/tests/test_ds.c	/^  int    table_size;$/;"	m	struct:__anon7e6d9c060c08	typeref:typename:int	file:
tablei	stb/tests/caveview/cave_render.c	/^GLint tablei[2];$/;"	v	typeref:typename:GLint[2]
tags	stb/stb_voxel_render.h	/^   unsigned int tags;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:unsigned int
tail	stb/deprecated/stb.h	/^   int head, tail, array_size, growable;$/;"	m	struct:stb__threadqueue	typeref:typename:int
tail_blockers	stb/deprecated/stb.h	/^   int tail_blockers;$/;"	m	struct:stb__threadqueue	typeref:typename:int
target	stb/deprecated/stb.h	/^   int target;  \/\/ target number of threads to hit it$/;"	m	struct:stb__sync	typeref:typename:int
targets	stb/deprecated/stb.h	/^   stb__nptr_target *targets;$/;"	m	struct:__anonfe33527c0e08	typeref:typename:stb__nptr_target *
tc	stb/tests/stb.c	/^char tc[] = "testing compression test quick test voila woohoo what the hell";$/;"	v	typeref:typename:char[]
tc1	stb/tests/stb.c	/^volatile int tc1, tc2;$/;"	v	typeref:typename:volatile int
tc2	stb/tests/stb.c	/^volatile int tc1, tc2;$/;"	v	typeref:typename:volatile int
tell	stb/deprecated/stb.h	/^   unsigned int (*tell)(struct stbfile *);$/;"	m	struct:stbfile	typeref:typename:unsigned int (*)(struct stbfile *)
temp	stb/stb_ds.h	/^  ptrdiff_t   temp;$/;"	m	struct:__anona15bb9d20108	typeref:typename:ptrdiff_t
temp	stb/stb_sprintf.h	/^   short temp; \/\/ force next field to be 2-byte aligned$/;"	m	struct:__anonb1ccf5010108	typeref:typename:short
temp_alloc	stb/stb_vorbis.c	/^#define temp_alloc(/;"	d	file:
temp_alloc_restore	stb/stb_vorbis.c	/^#define temp_alloc_restore(/;"	d	file:
temp_alloc_save	stb/stb_vorbis.c	/^#define temp_alloc_save(/;"	d	file:
temp_bitmap	glwrappers.cpp	/^unsigned char temp_bitmap[512*512];$/;"	v	typeref:typename:unsigned char[]
temp_bitmap	stb/tests/oversample/main.c	/^unsigned char temp_bitmap[BITMAP_W][BITMAP_H];$/;"	v	typeref:typename:unsigned char[][]
temp_bitmap	stb/tests/test_truetype.c	/^unsigned char temp_bitmap[BITMAP_H][BITMAP_W];$/;"	v	typeref:typename:unsigned char[][]
temp_bitmap	stb/tests/truetype_test_win32.c	/^unsigned char temp_bitmap[1024*1024];$/;"	v	typeref:typename:unsigned char[]
temp_block_array	stb/stb_vorbis.c	/^#define temp_block_array(/;"	d	file:
temp_buffer	stb/tests/caveview/cave_parse.c	/^   char temp_buffer[256];$/;"	m	struct:__anonb02522120308	typeref:typename:char[256]	file:
temp_free	stb/stb_vorbis.c	/^#define temp_free(/;"	d	file:
temp_key	stb/stb_ds.h	/^  char * temp_key; \/\/ this MUST be the first field of the hash table$/;"	m	struct:__anona15bb9d20408	typeref:typename:char *
temp_memory_required	stb/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:__anon008e12ab0208	typeref:typename:unsigned int	file:
temp_memory_required	stb/stb_vorbis.c	/^   unsigned int temp_memory_required;$/;"	m	struct:stb_vorbis	typeref:typename:unsigned int	file:
temp_name	stb/deprecated/stb.h	/^   char *temp_name;$/;"	m	struct:__anonfe33527c1108	typeref:typename:char *
temp_offset	stb/stb_vorbis.c	/^   int temp_offset;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
tempdata	stb/tools/unicode.c	/^uval tempdata[256];$/;"	v	typeref:typename:uval[256]
test	stb/stb_divide.h	/^void test(int a, int b)$/;"	f	typeref:typename:void
test_32	stb/tests/resample_test.cpp	/^static void test_32(void)$/;"	f	typeref:typename:void	file:
test_channels	stb/tests/resample_test.cpp	/^void test_channels(const char* file, float width_percent, float height_percent, int channels)$/;"	f	typeref:typename:void
test_classes	stb/tests/stb.c	/^void test_classes(void)$/;"	f	typeref:typename:void
test_compression	stb/tests/stb.c	/^int test_compression(unsigned char *buffer, int length)$/;"	f	typeref:typename:int
test_connected	stb/tests/grid_reachability.c	/^void test_connected(stbcc_grid *g)$/;"	f	typeref:typename:void
test_count	stb/tests/vorbseek/vorbseek.c	/^int test_count  [5] = { 5000, 3000, 2000, 50000, 50000 };$/;"	v	typeref:typename:int[5]
test_filters	stb/tests/resample_test.cpp	/^void test_filters(void)$/;"	f	typeref:typename:void
test_float	stb/tests/resample_test.cpp	/^void test_float(const char* file, float width_percent, float height_percent, stbir_datatype type/;"	f	typeref:typename:void
test_format	stb/tests/resample_test.cpp	/^void test_format(const char* file, float width_percent, float height_percent, stbir_datatype typ/;"	f	typeref:typename:void
test_lex	stb/tests/stb.c	/^void test_lex(void)$/;"	f	typeref:typename:void
test_lex	stb/tests/stb_cpp.cpp	/^void test_lex(void)$/;"	f	typeref:typename:void
test_plane	stb/tests/caveview/cave_render.c	/^static int test_plane(plane *p, float x0, float y0, float z0, float x1, float y1, float z1)$/;"	f	typeref:typename:int	file:
test_premul	stb/tests/resample_test.cpp	/^void test_premul()$/;"	f	typeref:typename:void
test_script	stb/tests/stb.c	/^void test_script(void)$/;"	f	typeref:typename:void
test_sha1	stb/tests/stb.c	/^void test_sha1(void)$/;"	f	typeref:typename:void
test_spacing	stb/tests/vorbseek/vorbseek.c	/^int test_spacing[5] = {    1,  111, 3337,  7779, 72717 };$/;"	v	typeref:typename:int[5]
test_subpixel	stb/tests/resample_test.cpp	/^void test_subpixel(const char* file, float width_percent, float height_percent, float s1, float /;"	f	typeref:typename:void
test_subpixel_1	stb/tests/resample_test.cpp	/^void test_subpixel_1()$/;"	f	typeref:typename:void
test_subpixel_2	stb/tests/resample_test.cpp	/^void test_subpixel_2()$/;"	f	typeref:typename:void
test_subpixel_3	stb/tests/resample_test.cpp	/^void test_subpixel_3()$/;"	f	typeref:typename:void
test_subpixel_4	stb/tests/resample_test.cpp	/^void test_subpixel_4()$/;"	f	typeref:typename:void
test_subpixel_command	stb/tests/resample_test.cpp	/^void test_subpixel_command(const char* file, float width_percent, float height_percent, float x_/;"	f	typeref:typename:void
test_subpixel_region	stb/tests/resample_test.cpp	/^void test_subpixel_region(const char* file, float width_percent, float height_percent, float s0,/;"	f	typeref:typename:void
test_suite	stb/tests/resample_test.cpp	/^void test_suite(int argc, char **argv)$/;"	f	typeref:typename:void
test_threads	stb/tests/stb.c	/^void test_threads(void)$/;"	f	typeref:typename:void
test_threads2	stb/tests/stb.c	/^void test_threads2(void)$/;"	f	typeref:typename:void
testh	stb/stb_divide.h	/^void testh(int a, int b)$/;"	f	typeref:typename:void
tex	stb/tests/truetype_test_win32.c	/^GLuint tex;$/;"	v	typeref:typename:GLuint
tex1	stb/stb_voxel_render.h	/^      unsigned char tex1,tex2,color,face_info;$/;"	m	struct:__anonc1feb0a80a08	typeref:typename:unsigned char
tex2	stb/stb_voxel_render.h	/^      unsigned char tex1,tex2,color,face_info;$/;"	m	struct:__anonc1feb0a80a08	typeref:typename:unsigned char
tex2	stb/stb_voxel_render.h	/^   unsigned char *tex2;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
tex2_alpha	stb/tests/caveview/cave_main.c	/^float tex2_alpha = 1.0;$/;"	v	typeref:typename:float
tex2_data	stb/tests/caveview/cave_render.c	/^unsigned char tex2_data[64][4];$/;"	v	typeref:typename:unsigned char[64][4]
tex2_facemask	stb/stb_voxel_render.h	/^   unsigned char *tex2_facemask;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
tex2_for_tex1	stb/stb_voxel_render.h	/^   unsigned char *tex2_for_tex1;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
tex2_replace	stb/stb_voxel_render.h	/^   unsigned char *tex2_replace;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
texcoord	render-sprites.cpp	/^  GLfloat texcoord[2]; \/\/ texture s,t of this corner$/;"	m	struct:Attributes	typeref:typename:GLfloat[2]	file:
texcoord	render-surface.cpp	/^  GLfloat texcoord[] = { 0, 0, 1, 0, 0, 1, 1, 1 };$/;"	v	namespace:__anon8ac3718c0111	typeref:typename:GLfloat[]
texlerp	stb/stb_voxel_render.h	/^   unsigned char *texlerp;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
texlerp_face3	stb/stb_voxel_render.h	/^   unsigned short *texlerp_face3;          \/\/ e:3,n:3,w:3,s:3,u:2,d:2$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned short *
texlerp_simple	stb/stb_voxel_render.h	/^   unsigned char *texlerp_simple;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
texlerp_vert3	stb/stb_voxel_render.h	/^   unsigned short *texlerp_vert3;$/;"	m	struct:stbvox_input_description	typeref:typename:unsigned short *
text_color	stb/tests/caveview/cave_main.c	/^static float text_color[3];$/;"	v	typeref:typename:float[3]	file:
text_control	stb/tests/test_cpp_compilation.cpp	/^} text_control;$/;"	t	typeref:struct:__anonfcac0af00108	file:
text_control	stb/tests/textedit_sample.c	/^} text_control;$/;"	t	typeref:struct:__anon9df40e5c0108	file:
texture	render-sprites.cpp	/^  Texture texture;$/;"	m	struct:RenderSpritesImpl	typeref:typename:Texture	file:
texture	render-surface.cpp	/^  Texture texture;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:Texture	file:
texture	stb/tests/caveview/cave_render.c	/^uint32 texture[TEX_SIZE][TEX_SIZE];$/;"	v	typeref:typename:uint32[][]
tga_info	stb/deprecated/stb_image.c	/^static int tga_info(stbi *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int	file:
tga_load	stb/deprecated/stb_image.c	/^static stbi_uc *tga_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *	file:
tga_test	stb/deprecated/stb_image.c	/^static int tga_test(stbi *s)$/;"	f	typeref:typename:int	file:
thread4	stb/tests/stb.c	/^void *thread4(void *p)$/;"	f	typeref:typename:void *
thread_1	stb/tests/stb.c	/^void * thread_1(void *x)$/;"	f	typeref:typename:void *
thread_2	stb/tests/stb.c	/^void * thread_2(void *y)$/;"	f	typeref:typename:void *
thread_3	stb/tests/stb.c	/^void *thread_3(void *p)$/;"	f	typeref:typename:void *
thread_sum	stb/tests/stb.c	/^volatile int thread_sum;$/;"	v	typeref:typename:volatile int
tileinfo_dirty	stb/stb_tilemap_editor.h	/^    int tileinfo_dirty;$/;"	m	struct:stbte_tilemap	typeref:typename:int
tiles	stb/stb_tilemap_editor.h	/^    stbte__tileinfo *tiles;$/;"	m	struct:stbte_tilemap	typeref:typename:stbte__tileinfo *
time_current	window.cpp	/^  int time_current;$/;"	m	struct:WindowImpl	typeref:typename:int	file:
time_last	window.cpp	/^  int time_last;$/;"	m	struct:WindowImpl	typeref:typename:int	file:
timer	stb/tests/test_ds.c	/^double timer;$/;"	v	typeref:typename:double
timer	stb/tests/test_ds_cpp.cpp	/^double timer;$/;"	v	typeref:typename:double
timestamp	stb/deprecated/stb.h	/^   time_t timestamp;$/;"	m	struct:__anonfe33527c2a08	typeref:typename:time_t
tmp	stb/deprecated/rrsprintf.h	/^  char tmp[ RR_SPRINTF_MIN ];$/;"	m	struct:RRCCS	typeref:typename:char[]
tmp	stb/stb_sprintf.h	/^   char tmp[STB_SPRINTF_MIN];$/;"	m	struct:stbsp__context	typeref:typename:char[]
todo	stb/deprecated/stb_image.c	/^   int restart_interval, todo;$/;"	m	struct:__anon9409ffb90608	typeref:typename:int	file:
todo	stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonc3e085de0808	typeref:typename:int
token	stb/stb_c_lexer.h	/^   long token;$/;"	m	struct:__anone321a15d0108	typeref:typename:long
tombstone_count	stb/stb_ds.h	/^  size_t tombstone_count;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
tombstone_count_threshold	stb/stb_ds.h	/^  size_t tombstone_count_threshold;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
tool	stb/stb_tilemap_editor.h	/^   int tool, active_event;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
toolchar	stb/stb_tilemap_editor.h	/^static int toolchar[] = { 26,24,25,20,23,22,18, 19,17, 29,28, };$/;"	v	typeref:typename:int[]
total_bytes	stb/deprecated/stb.h	/^   stb_uint total_bytes;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:stb_uint
total_miss_probes	stb/tests/test_ds.c	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
total_miss_probes	stb/tests/test_ds_cpp.cpp	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
total_put_probes	stb/tests/test_ds.c	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
total_put_probes	stb/tests/test_ds_cpp.cpp	/^size_t max_hit_probes, max_miss_probes, total_put_probes, total_miss_probes, churn_misses;$/;"	v	typeref:typename:size_t
total_samples	stb/stb_vorbis.c	/^   uint32 total_samples;$/;"	m	struct:stb_vorbis	typeref:typename:uint32	file:
tq	stb/deprecated/stb.h	/^   stb_threadqueue *tq;$/;"	m	struct:stb__workqueue	typeref:typename:stb_threadqueue *
tq	stb/deprecated/stb_image.c	/^      int tq;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
tq	stb/stb_image.h	/^      int tq;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
tq	stb/tests/stb.c	/^stb_threadqueue *tq;$/;"	v	typeref:typename:stb_threadqueue *
transform	stb/tests/caveview/cave_render.c	/^   float transform[3][3];$/;"	m	struct:__anonb6d309d70208	typeref:typename:float[3][3]	file:
transform	stb/tests/caveview/caveview.h	/^   float transform[3][3];$/;"	m	struct:__anonc22370580108	typeref:typename:float[3][3]
transformtype	stb/stb_vorbis.c	/^   uint16 transformtype;$/;"	m	struct:__anon008e12ab0b08	typeref:typename:uint16	file:
transition	stb/deprecated/stb.h	/^   stb_int16 transition[256];$/;"	m	struct:__anonfe33527c1b08	typeref:typename:stb_int16[256]
translate_t	stb/tests/oversample/main.c	/^float rotate_t, translate_t;$/;"	v	typeref:typename:float
translating	stb/tests/oversample/main.c	/^int translating;$/;"	v	typeref:typename:int
transparent	stb/deprecated/stb_image.c	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
transparent	stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
tri	main.cpp	/^Triangle tri(float x1, float y1, float x2, float y2, float x3, float y3) {$/;"	f	typeref:typename:Triangle
triangles	render-shapes.h	/^  std::vector<Triangle> triangles;$/;"	m	struct:Shape	typeref:typename:std::vector<Triangle>
trig	stb/stb_vorbis.c	/^  float *trig;$/;"	m	struct:__anon008e12ab1008	typeref:typename:float *	file:
trim_end	stb/tools/unicode.c	/^   uint8 trim_end;$/;"	m	struct:__anona458f2750508	typeref:typename:uint8	file:
trim_start	stb/tools/unicode.c	/^   uint8 trim_start;$/;"	m	struct:__anona458f2750508	typeref:typename:uint8	file:
try_seeking	stb/tests/vorbseek/vorbseek.c	/^int try_seeking(stb_vorbis *v, unsigned int pos, short *output, unsigned int num_samples)$/;"	f	typeref:typename:int
ts	stb/stb_herringbone_wang_tile.h	/^   stbhw_tileset *ts;$/;"	m	struct:stbhw__process	typeref:typename:stbhw_tileset *
ttBYTE	stb/stb_truetype.h	/^#define ttBYTE(/;"	d
ttCHAR	stb/stb_truetype.h	/^#define ttCHAR(/;"	d
ttFixed	stb/stb_truetype.h	/^#define ttFixed(/;"	d
ttLONG	stb/stb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_int32
ttSHORT	stb/stb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_int16
ttULONG	stb/stb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_uint32
ttUSHORT	stb/stb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_uint16
ttf_buffer	glwrappers.cpp	/^unsigned char ttf_buffer[1<<20];$/;"	v	typeref:typename:unsigned char[]
ttf_buffer	stb/tests/oversample/main.c	/^unsigned char ttf_buffer[1 << 25];$/;"	v	typeref:typename:unsigned char[]
ttf_buffer	stb/tests/test_truetype.c	/^unsigned char ttf_buffer[1 << 25];$/;"	v	typeref:typename:unsigned char[]
ttf_buffer	stb/tests/truetype_test_win32.c	/^unsigned char ttf_buffer[1<<20];$/;"	v	typeref:typename:unsigned char[]
type	stb/deprecated/stb.h	/^   int type;$/;"	m	struct:__anonfe33527c2808	typeref:typename:int
type	stb/deprecated/stb_image.c	/^   stbi__uint32 type;$/;"	m	struct:__anon9409ffb90b08	typeref:typename:stbi__uint32	file:
type	stb/deprecated/stb_image.c	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon9409ffb90e08	typeref:typename:stbi_uc	file:
type	stb/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anonc3e085de0d08	typeref:typename:stbi__uint32
type	stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc3e085de1108	typeref:typename:stbi_uc
type	stb/stb_image_resize.h	/^    stbir_datatype type;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_datatype
type	stb/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:unsigned char
type	stb/stb_voxel_render.h	/^   int type;                    \/\/ which type of uniform$/;"	m	struct:stbvox_uniform_info	typeref:typename:int
type	stb/tests/oversample/stb_wingraph.h	/^   stbwingraph_event_type type;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:stbwingraph_event_type
u	stb/stb_image_resize.h	/^    stbir_uint32 u;$/;"	m	union:__anonb59f51af080a	typeref:typename:stbir_uint32
uchar	stb/deprecated/stb.h	/^   typedef unsigned char  uchar ;$/;"	t	typeref:typename:unsigned char
uint	stb/deprecated/stb.h	/^   typedef unsigned int   uint  ;$/;"	t	typeref:typename:unsigned int
uint16	stb/deprecated/stb.h	/^   typedef unsigned short uint16;$/;"	t	typeref:typename:unsigned short
uint16	stb/stb_vorbis.c	/^typedef unsigned short uint16;$/;"	t	typeref:typename:unsigned short	file:
uint32	stb/deprecated/stb.h	/^   typedef unsigned int   uint32;$/;"	t	typeref:typename:unsigned int
uint32	stb/deprecated/stb.h	/^   typedef unsigned long  uint32;$/;"	t	typeref:typename:unsigned long
uint32	stb/stb_vorbis.c	/^typedef unsigned int   uint32;$/;"	t	typeref:typename:unsigned int	file:
uint32_compare	stb/stb_vorbis.c	/^static int STBV_CDECL uint32_compare(const void *p, const void *q)$/;"	f	typeref:typename:int STBV_CDECL	file:
uint64_t	stb/tests/caveview/glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	stb/tests/caveview/glext.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	stb/tests/caveview/glext.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint8	stb/deprecated/stb.h	/^   typedef unsigned char  uint8 ;$/;"	t	typeref:typename:unsigned char
uint8	stb/stb_vorbis.c	/^typedef unsigned char  uint8;$/;"	t	typeref:typename:unsigned char	file:
ulong	stb/deprecated/stb.h	/^   typedef unsigned long  ulong ;$/;"	t	typeref:typename:unsigned long
undo_available	stb/stb_tilemap_editor.h	/^    unsigned char undo_available;$/;"	m	struct:stbte_tilemap	typeref:typename:unsigned char
undo_available_valid	stb/stb_tilemap_editor.h	/^    unsigned char undo_available_valid;$/;"	m	struct:stbte_tilemap	typeref:typename:unsigned char
undo_buffer	stb/stb_tilemap_editor.h	/^    short *undo_buffer;$/;"	m	struct:stbte_tilemap	typeref:typename:short *
undo_char	stb/stb_textedit.h	/^   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:__anonb04bb6e60208	typeref:typename:STB_TEXTEDIT_CHARTYPE[]
undo_char_point	stb/stb_textedit.h	/^   int undo_char_point, redo_char_point;$/;"	m	struct:__anonb04bb6e60208	typeref:typename:int
undo_len	stb/stb_tilemap_editor.h	/^    int undo_pos, undo_len, redo_len;$/;"	m	struct:stbte_tilemap	typeref:typename:int
undo_point	stb/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anonb04bb6e60208	typeref:typename:short
undo_pos	stb/stb_tilemap_editor.h	/^    int undo_pos, undo_len, redo_len;$/;"	m	struct:stbte_tilemap	typeref:typename:int
undo_rec	stb/stb_textedit.h	/^   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:__anonb04bb6e60208	typeref:typename:StbUndoRecord[]
undoing	stb/stb_tilemap_editor.h	/^   int undoing;$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
undostate	stb/stb_textedit.h	/^   StbUndoState undostate;$/;"	m	struct:__anonb04bb6e60308	typeref:typename:StbUndoState
unibuf	stb/tests/caveview/cave_render.c	/^GLuint unitex[64], unibuf[64];$/;"	v	typeref:typename:GLuint[64]
unicode_table	stb/tools/unicode.c	/^uval unicode_table[0x110000];$/;"	v	typeref:typename:uval[0x110000]
uniform_loc	stb/tests/caveview/cave_render.c	/^GLint uniform_loc[16];$/;"	v	typeref:typename:GLint[16]
uniform_locations	stb/tests/caveview/cave_render.c	/^GLint uniform_locations[64];$/;"	v	typeref:typename:GLint[64]
unitex	stb/tests/caveview/cave_render.c	/^GLuint unitex[64], unibuf[64];$/;"	v	typeref:typename:GLuint[64]
unlock_chunk_get_mutex	stb/tests/caveview/cave_mesher.c	/^void unlock_chunk_get_mutex(void)$/;"	f	typeref:typename:void
update_frustum	stb/tests/caveview/cave_render.c	/^int update_frustum = 1;$/;"	v	typeref:typename:int
update_meshes_from_render_thread	stb/tests/caveview/cave_render.c	/^void update_meshes_from_render_thread(void)$/;"	f	typeref:typename:void
update_view	stb/tests/caveview/cave_main.c	/^void update_view(float dx, float dy)$/;"	f	typeref:typename:void
upload_mesh	stb/tests/caveview/cave_render.c	/^void upload_mesh(chunk_mesh *cm, uint8 *build_buffer, uint8 *face_buffer)$/;"	f	typeref:typename:void
upload_mesh_data	stb/tests/caveview/cave_render.c	/^static void upload_mesh_data(raw_mesh *rm)$/;"	f	typeref:typename:void	file:
use_tex_buffer	stb/stb_voxel_render.h	/^   int use_tex_buffer;          \/\/ if true, then the uniform is a sampler but the data can com/;"	m	struct:stbvox_uniform_info	typeref:typename:int
used_count	stb/stb_ds.h	/^  size_t used_count;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
used_count_shrink_threshold	stb/stb_ds.h	/^  size_t used_count_shrink_threshold;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
used_count_threshold	stb/stb_ds.h	/^  size_t used_count_threshold;$/;"	m	struct:__anona15bb9d20408	typeref:typename:size_t
user_allocator_context	stb/stb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
userdata	stb/stb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo	typeref:typename:void *
ushort	stb/deprecated/stb.h	/^   typedef unsigned short ushort;$/;"	t	typeref:typename:unsigned short
uval	stb/tools/unicode.c	/^typedef uint32 uval;$/;"	t	typeref:typename:uint32	file:
v	stb/deprecated/stb_image.c	/^      int h,v;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
v	stb/stb_hexwave.h	/^   float t,v,s; \/\/ time, value, slope$/;"	m	struct:__anon773b6f930308	typeref:typename:float
v	stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
v	stb/tests/stb.c	/^   int v;$/;"	m	struct:Btest	typeref:typename:int	file:
v_color	stb/stb_herringbone_wang_tile.h	/^static signed char v_color[STB_HBWANG_MAX_Y+6][STB_HBWANG_MAX_X+5];$/;"	v	typeref:typename:signed char[][]
v_oversample	stb/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon77ab60dd0508	typeref:typename:unsigned char
v_oversample	stb/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
v_seg	stb/stb_easy_font.h	/^    unsigned char v_seg;$/;"	m	struct:stb_easy_font_info_struct	typeref:typename:unsigned char
v_tiles	stb/stb_herringbone_wang_tile.h	/^   stbhw_tile **v_tiles;$/;"	m	struct:stbhw_tileset	typeref:typename:stbhw_tile **
valid	stb/deprecated/stb.h	/^   int valid;          \/\/ amount of valid data in bytes$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
valid	stb/tests/caveview/cave_mesher.c	/^   int valid;$/;"	m	struct:__anon257c0e9b0208	typeref:typename:int	file:
valid	stb/tests/caveview/cave_parse.c	/^   int valid;$/;"	m	struct:__anonb02522120508	typeref:typename:int	file:
valid_bits	stb/stb_vorbis.c	/^   int valid_bits;$/;"	m	struct:stb_vorbis	typeref:typename:int	file:
validate_uint32	stb/deprecated/stb_image.c	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]	file:
validate_uint32	stb/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]
value	stb/deprecated/stb.h	/^   void *value;$/;"	m	struct:__anonfe33527c1208	typeref:typename:void *
value	stb/deprecated/stb_image.c	/^   stbi__uint16 value[288]; $/;"	m	struct:__anon9409ffb90908	typeref:typename:stbi__uint16[288]	file:
value	stb/stb_image.h	/^   stbi__uint16 value[STBI__ZNSYMS];$/;"	m	struct:__anonc3e085de0b08	typeref:typename:stbi__uint16[]
value	stb/tests/test_ds.c	/^  struct { int key,value; } *hash[50000];$/;"	m	struct:multisearch::__anon7e6d9c060408	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build::__anon7e6d9c060308	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn::__anon7e6d9c060108	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn_stats::__anon7e6d9c060208	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_average_lookup4::__anon7e6d9c060e08	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_build4::__anon7e6d9c060d08	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_uncached_lookup4::__anon7e6d9c061108	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_worst_lookup4_a::__anon7e6d9c060f08	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:measure_worst_lookup4_b::__anon7e6d9c061008	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { int key,value; } *map[50000];$/;"	m	struct:multichurn4::__anon7e6d9c060b08	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { size_t key,value; } *map=NULL;$/;"	m	struct:churn8::__anon7e6d9c060a08	typeref:typename:size_t	file:
value	stb/tests/test_ds.c	/^  struct { str256 key; int value; } *map=NULL;$/;"	m	struct:churn256::__anon7e6d9c060908	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { str32 key; int value; } *map=NULL;$/;"	m	struct:churn32::__anon7e6d9c060708	typeref:typename:int	file:
value	stb/tests/test_ds.c	/^  struct { unsigned int key,value; } *map=NULL;$/;"	m	struct:churn_skip::__anon7e6d9c060508	typeref:typename:unsigned int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build::__anon6cf133e80308	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:build_stb::__anon6cf133e80408	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn::__anon6cf133e80108	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { int key,value; } *map=NULL;$/;"	m	struct:churn_stats::__anon6cf133e80208	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { size_t key,value; } *map=NULL;$/;"	m	struct:churn8::__anon6cf133e80a08	typeref:typename:size_t	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { str256 key; int value; } *map=NULL;$/;"	m	struct:churn256::__anon6cf133e80908	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { str32 key; int value; } *map=NULL;$/;"	m	struct:churn32::__anon6cf133e80708	typeref:typename:int	file:
value	stb/tests/test_ds_cpp.cpp	/^  struct { unsigned int key,value; } *map=NULL;$/;"	m	struct:churn_skip::__anon6cf133e80508	typeref:typename:unsigned int	file:
value_bits	stb/stb_vorbis.c	/^   uint8  value_bits;$/;"	m	struct:__anon008e12ab0408	typeref:typename:uint8	file:
value_len	stb/deprecated/stb.h	/^   int value_len;$/;"	m	struct:__anonfe33527c1208	typeref:typename:int
values	stb/deprecated/stb_image.c	/^   stbi__uint8  values[256];$/;"	m	struct:__anon9409ffb90508	typeref:typename:stbi__uint8[256]	file:
values	stb/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anonc3e085de0708	typeref:typename:stbi_uc[256]
values	stb/stb_vorbis.c	/^   int values;$/;"	m	struct:__anon008e12ab0608	typeref:typename:int	file:
various	stb/deprecated/stb.h	/^      int various;$/;"	m	union:stbfile::__anonfe33527c1f0a	typeref:typename:int
vbo	render-shapes.cpp	/^  VertexBuffer vbo;$/;"	m	struct:RenderShapesImpl	typeref:typename:VertexBuffer	file:
vbo_attributes	render-sprites.cpp	/^  VertexBuffer vbo_attributes;$/;"	m	struct:RenderSpritesImpl	typeref:typename:VertexBuffer	file:
vbo_index	render-sprites.cpp	/^  VertexBuffer vbo_index;$/;"	m	struct:RenderSpritesImpl	typeref:typename:VertexBuffer	file:
vbo_pos	render-surface.cpp	/^  VertexBuffer vbo_pos;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:VertexBuffer	file:
vbo_tex	render-surface.cpp	/^  VertexBuffer vbo_tex;$/;"	m	struct:RenderSurfaceImpl	typeref:typename:VertexBuffer	file:
vbuf	stb/tests/caveview/cave_render.c	/^   GLuint vbuf;\/\/ vbuf_tex;$/;"	m	struct:__anonb6d309d70208	typeref:typename:GLuint	file:
vbuf_size	stb/tests/caveview/cave_render.c	/^   int vbuf_size, fbuf_size;$/;"	m	struct:__anonb6d309d70208	typeref:typename:int	file:
vendor	stb/stb_vorbis.c	/^   char *vendor;$/;"	m	struct:__anon008e12ab0308	typeref:typename:char *	file:
vendor	stb/stb_vorbis.c	/^   char *vendor;$/;"	m	struct:stb_vorbis	typeref:typename:char *	file:
verify_box	stb/tests/resample_test.cpp	/^void verify_box(void)$/;"	f	typeref:typename:void
verify_filter_normalized	stb/tests/resample_test.cpp	/^void verify_filter_normalized(stbir_filter filter, int output_size, unsigned int value)$/;"	f	typeref:typename:void
vertex_gather_offset	stb/stb_voxel_render.h	/^   int vertex_gather_offset[6][4];$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int[6][4]
vertex_shader	render-shapes.cpp	/^  GLchar vertex_shader[] = R"($/;"	v	namespace:__anond2ba22070211	typeref:typename:GLchar[]
vertex_shader	render-sprites.cpp	/^  GLchar vertex_shader[] = R"($/;"	v	namespace:__anonf78e452d0111	typeref:typename:GLchar[]
vertex_shader	render-surface.cpp	/^  GLchar vertex_shader[] = R"($/;"	v	namespace:__anon8ac3718c0111	typeref:typename:GLchar[]
vertical_coefficient_width	stb/stb_image_resize.h	/^    int vertical_coefficient_width;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_coefficients	stb/stb_image_resize.h	/^    float* vertical_coefficients;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float *
vertical_coefficients_size	stb/stb_image_resize.h	/^    int vertical_coefficients_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_contributors	stb/stb_image_resize.h	/^    stbir__contributors* vertical_contributors;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir__contributors *
vertical_contributors_size	stb/stb_image_resize.h	/^    int vertical_contributors_size;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_filter	stb/stb_image_resize.h	/^    stbir_filter vertical_filter;$/;"	m	struct:__anonb59f51af0708	typeref:typename:stbir_filter
vertical_filter_pixel_margin	stb/stb_image_resize.h	/^    int vertical_filter_pixel_margin;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_filter_pixel_width	stb/stb_image_resize.h	/^    int vertical_filter_pixel_width;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_num_contributors	stb/stb_image_resize.h	/^    int vertical_num_contributors;$/;"	m	struct:__anonb59f51af0708	typeref:typename:int
vertical_scale	stb/stb_image_resize.h	/^    float vertical_scale;$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
vertical_shift	stb/stb_image_resize.h	/^    float vertical_shift;   \/\/ Units: output pixels$/;"	m	struct:__anonb59f51af0708	typeref:typename:float
vertices	render-shapes.cpp	/^  std::vector<Attributes> vertices;$/;"	m	struct:RenderShapesImpl	typeref:typename:std::vector<Attributes>	file:
vertices	render-sprites.cpp	/^  std::vector<Attributes> vertices;$/;"	m	struct:RenderSpritesImpl	typeref:typename:std::vector<Attributes>	file:
vheight	stb/stb_voxel_render.h	/^   unsigned char *vheight;                 \/\/ STBVOX_MAKE_VHEIGHT   -- sw:2, se:2, nw:2, ne:2,/;"	m	struct:stbvox_input_description	typeref:typename:unsigned char *
view_dist_in_chunks	stb/tests/caveview/cave_render.c	/^int view_dist_in_chunks = 50;$/;"	v	typeref:typename:int
view_dist_in_chunks	stb/tests/caveview/cave_render.c	/^int view_dist_in_chunks = 80;$/;"	v	typeref:typename:int
view_x_vel	stb/tests/caveview/cave_main.c	/^float view_x_vel = 0;$/;"	v	typeref:typename:float
view_z_vel	stb/tests/caveview/cave_main.c	/^float view_z_vel = 0;$/;"	v	typeref:typename:float
visible	window.h	/^  bool visible;$/;"	m	class:Window	typeref:typename:bool
voff	stb/tools/easy_font_maker.c	/^   unsigned char voff:1;$/;"	m	struct:__anonc58d97050108	typeref:typename:unsigned char:1	file:
vorb	stb/stb_vorbis.c	/^typedef struct stb_vorbis vorb;$/;"	t	typeref:struct:stb_vorbis	file:
vorbis_alloc	stb/stb_vorbis.c	/^static stb_vorbis * vorbis_alloc(stb_vorbis *f)$/;"	f	typeref:typename:stb_vorbis *	file:
vorbis_decode_initial	stb/stb_vorbis.c	/^static int vorbis_decode_initial(vorb *f, int *p_left_start, int *p_left_end, int *p_right_start/;"	f	typeref:typename:int	file:
vorbis_decode_packet	stb/stb_vorbis.c	/^static int vorbis_decode_packet(vorb *f, int *len, int *p_left, int *p_right)$/;"	f	typeref:typename:int	file:
vorbis_decode_packet_rest	stb/stb_vorbis.c	/^static int vorbis_decode_packet_rest(vorb *f, int *len, Mode *m, int left_start, int left_end, i/;"	f	typeref:typename:int	file:
vorbis_deinit	stb/stb_vorbis.c	/^static void vorbis_deinit(stb_vorbis *p)$/;"	f	typeref:typename:void	file:
vorbis_find_page	stb/stb_vorbis.c	/^static uint32 vorbis_find_page(stb_vorbis *f, uint32 *end, uint32 *last)$/;"	f	typeref:typename:uint32	file:
vorbis_finish_frame	stb/stb_vorbis.c	/^static int vorbis_finish_frame(stb_vorbis *f, int len, int left, int right)$/;"	f	typeref:typename:int	file:
vorbis_init	stb/stb_vorbis.c	/^static void vorbis_init(stb_vorbis *p, const stb_vorbis_alloc *z)$/;"	f	typeref:typename:void	file:
vorbis_pump_first_frame	stb/stb_vorbis.c	/^static int vorbis_pump_first_frame(stb_vorbis *f)$/;"	f	typeref:typename:int	file:
vorbis_search_for_page_pushdata	stb/stb_vorbis.c	/^static int vorbis_search_for_page_pushdata(vorb *f, uint8 *data, int data_len)$/;"	f	typeref:typename:int	file:
vorbis_validate	stb/stb_vorbis.c	/^static int vorbis_validate(uint8 *data)$/;"	f	typeref:typename:int	file:
voxel_tex	stb/tests/caveview/cave_render.c	/^GLuint voxel_tex[2];$/;"	v	typeref:typename:GLuint[2]
vs	stb/deprecated/stb_image.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon9409ffb90808	typeref:typename:int	file:
vs	stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonc3e085de0a08	typeref:typename:int
vsegments	stb/tools/easy_font_maker.c	/^segment *vsegments;$/;"	v	typeref:typename:segment *
w	stb/deprecated/stb_image.c	/^   int w,h;$/;"	m	struct:stbi_gif_struct	typeref:typename:int	file:
w	stb/stb_connected_components.h	/^   int w,h,cw,ch;$/;"	m	struct:st_stbcc_grid	typeref:typename:int
w	stb/stb_herringbone_wang_tile.h	/^   int stride,w,h;$/;"	m	struct:stbhw__process	typeref:typename:int
w	stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anonc3e085de1308	typeref:typename:int
w	stb/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
w	stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
w	stb/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon77ab60dd0808	typeref:typename:int
w	stb/tests/caveview/cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anonb6d309d70508	typeref:typename:float	file:
w	stb/tests/sdf/sdf_test.c	/^   unsigned char w,h;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:unsigned char	file:
w	stb/tools/easy_font_maker.c	/^int w,h;$/;"	v	typeref:typename:int
w2	stb/deprecated/stb_image.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
w2	stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
w_lores	stb/deprecated/stb_image.c	/^   int w_lores; \/\/ horizontal pixels pre-expansion $/;"	m	struct:__anon9409ffb90808	typeref:typename:int	file:
w_lores	stb/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anonc3e085de0a08	typeref:typename:int
waiting	stb/deprecated/stb.h	/^   int waiting; \/\/ total threads waiting$/;"	m	struct:stb__sync	typeref:typename:int
was_packed	stb/stb_rect_pack.h	/^   int            was_packed;  \/\/ non-zero if valid packing$/;"	m	struct:stbrp_rect	typeref:typename:int
was_packed	stb/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
weight	stb/deprecated/stb.h	/^   float weight;$/;"	m	struct:stb_dirtree2	typeref:typename:float
weight	stb/tools/unicode.c	/^int weight=1;$/;"	v	typeref:typename:int
where	stb/stb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  where;$/;"	m	struct:__anonb04bb6e60108	typeref:typename:STB_TEXTEDIT_POSITIONTYPE
where_firstchar	stb/stb_c_lexer.h	/^   char *where_firstchar;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
where_lastchar	stb/stb_c_lexer.h	/^   char *where_lastchar;$/;"	m	struct:__anone321a15d0108	typeref:typename:char *
width	stb/stb_hexwave.h	/^   int width;       \/\/ width of fixup in samples$/;"	m	struct:__anon773b6f930208	typeref:typename:int
width	stb/stb_rect_pack.h	/^   int width;$/;"	m	struct:stbrp_context	typeref:typename:int
width	stb/stb_tilemap_editor.h	/^   int width, height;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:int
width	stb/stb_tilemap_editor.h	/^   int width,height;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
width	stb/stb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
width	stb/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon77ab60dd1108	typeref:typename:int
width	stb/tests/oversample/stb_wingraph.h	/^   int width, height;$/;"	m	struct:__anon9f50dc2a0308	typeref:typename:int
width	window.h	/^  int width, height;$/;"	m	class:Window	typeref:typename:int
window	main.cpp	/^std::unique_ptr<Window> window;$/;"	v	typeref:typename:std::unique_ptr<Window>
window	stb/deprecated/stb.h	/^   int window;$/;"	m	struct:__anonfe33527c1e08	typeref:typename:int
window	stb/stb_vorbis.c	/^   float *window[2];$/;"	m	struct:stb_vorbis	typeref:typename:float * [2]	file:
window	stb/tests/caveview/cave_main.c	/^static SDL_Window *window;$/;"	v	typeref:typename:SDL_Window *	file:
window	stb/tests/oversample/stb_wingraph.h	/^   HWND  window;$/;"	m	struct:__anon9f50dc2a0408	typeref:typename:HWND
window	stb/tests/truetype_test_win32.c	/^HWND  window;$/;"	v	typeref:typename:HWND
window	window.cpp	/^  SDL_Window* window;$/;"	m	struct:WindowImpl	typeref:typename:SDL_Window *	file:
windowtype	stb/stb_vorbis.c	/^   uint16 windowtype;$/;"	m	struct:__anon008e12ab0b08	typeref:typename:uint16	file:
winproc	stb/tests/oversample/main.c	/^int winproc(void *data, stbwingraph_event *e)$/;"	f	typeref:typename:int
world_init	stb/tests/caveview/cave_render.c	/^void world_init(void)$/;"	f	typeref:typename:void
write32	stb/tests/resample_test.cpp	/^static void write32(const char *filename, stbir_uint32 *output, int w, int h)$/;"	f	typeref:typename:void	file:
write_map	stb/tests/grid_reachability.c	/^void write_map(stbcc_grid *g, int w, int h, char *filename)$/;"	f	typeref:typename:void
x	render-shapes.h	/^  float x[3], y[3];$/;"	m	struct:Triangle	typeref:typename:float[3]
x	render-sprites.h	/^  float x, y, rotation_degrees, scale;$/;"	m	struct:Sprite	typeref:typename:float
x	stb/deprecated/stb_image.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
x	stb/stb_connected_components.h	/^   unsigned char x,y;$/;"	m	struct:__anonc6c173d30608	typeref:typename:unsigned char
x	stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
x	stb/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon6e5b45070308	typeref:typename:int
x	stb/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	stb/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_coord
x	stb/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anonb04bb6e60508	typeref:typename:float
x	stb/stb_tilemap_editor.h	/^   int x,y;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:int
x	stb/stb_tilemap_editor.h	/^   short x,y;$/;"	m	struct:__anonbd4d158d0208	typeref:typename:short
x	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
x	stb/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:float
x	stb/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon77ab60dd1008	typeref:typename:float
x	stb/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
x	stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon77ab60dd1108	typeref:typename:int
x	stb/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	stb/stb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anon77ab60dd1208	typeref:typename:unsigned char
x	stb/stb_vorbis.c	/^   uint16 x,id;$/;"	m	struct:__anon008e12ab0e08	typeref:typename:uint16	file:
x	stb/stb_voxel_render.h	/^   unsigned char x,y,z;$/;"	m	struct:__anonc1feb0a80d08	typeref:typename:unsigned char
x	stb/tests/caveview/cave_parse.c	/^   int x,z; \/\/ chunk index$/;"	m	struct:__anonb02522120108	typeref:typename:int	file:
x	stb/tests/caveview/cave_parse.c	/^   int x,z;$/;"	m	struct:__anonb02522120208	typeref:typename:int	file:
x	stb/tests/caveview/cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anonb6d309d70508	typeref:typename:float	file:
x	stb/tests/grid_reachability.c	/^   uint16 x,y;$/;"	m	struct:__anondb2f75c60108	typeref:typename:uint16	file:
x	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	m	struct:__anon9cbc07790208	typeref:typename:int	file:
x	stb/tests/stb.c	/^typedef struct { unsigned short x,y,z; } struct1;$/;"	m	struct:__anon9cbc07790108	typeref:typename:unsigned short	file:
x0	atlas.h	/^  float x0, y0, x1, y1; \/\/ Corners in world coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
x0	stb/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, et/;"	m	struct:__anonb04bb6e60408	typeref:typename:float
x0	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
x0	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1,color;$/;"	m	struct:__anonbd4d158d0d08	typeref:typename:int
x0	stb/stb_tilemap_editor.h	/^   int x0,y0;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
x0	stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x0	stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
x0	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0208	typeref:typename:unsigned short
x0	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0408	typeref:typename:unsigned short
x0	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
x1	atlas.h	/^  float x0, y0, x1, y1; \/\/ Corners in world coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
x1	stb/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, et/;"	m	struct:__anonb04bb6e60408	typeref:typename:float
x1	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
x1	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1,color;$/;"	m	struct:__anonbd4d158d0d08	typeref:typename:int
x1	stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x1	stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
x1	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0208	typeref:typename:unsigned short
x1	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0408	typeref:typename:unsigned short
x1	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
x_stride_in_bytes	stb/stb_voxel_render.h	/^   int x_stride_in_bytes;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
xadvance	font.cpp	/^  int xadvance;   \/\/ how much x increases after drawing$/;"	m	struct:FontCharacter	typeref:typename:int	file:
xadvance	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0208	typeref:typename:float
xadvance	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0408	typeref:typename:float
xoff	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0208	typeref:typename:float
xoff	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0408	typeref:typename:float
xoff	stb/tests/sdf/sdf_test.c	/^   signed char xoff;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:signed char	file:
xoff2	stb/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon77ab60dd0408	typeref:typename:float
xpos	stb/tests/caveview/cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anonb02522170308	typeref:typename:int
xpos	stb/tests/caveview/cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anonb02522170208	typeref:typename:int
xsum	stb/tests/test_ds.c	/^unsigned __int64 t0, xsum, mn,mx,count;$/;"	v	typeref:typename:unsigned __int64
xtb	stb/deprecated/stb.h	/^} xtb;$/;"	v	typeref:struct:__anonfe33527c1e08
y	render-shapes.h	/^  float x[3], y[3];$/;"	m	struct:Triangle	typeref:typename:float[3]
y	render-sprites.h	/^  float x, y, rotation_degrees, scale;$/;"	m	struct:Sprite	typeref:typename:float
y	stb/deprecated/stb_image.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon9409ffb90608::__anon9409ffb90708	typeref:typename:int	file:
y	stb/stb_connected_components.h	/^   unsigned char x,y;$/;"	m	struct:__anonc6c173d30608	typeref:typename:unsigned char
y	stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc3e085de0808::__anonc3e085de0908	typeref:typename:int
y	stb/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon6e5b45070308	typeref:typename:int
y	stb/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y	stb/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_coord
y	stb/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anonb04bb6e60508	typeref:typename:float
y	stb/stb_tilemap_editor.h	/^   int x,y;$/;"	m	struct:__anonbd4d158d1508	typeref:typename:int
y	stb/stb_tilemap_editor.h	/^   short x,y;$/;"	m	struct:__anonbd4d158d0208	typeref:typename:short
y	stb/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon77ab60dd0708	typeref:typename:stbtt_vertex_type
y	stb/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon77ab60dd0f08	typeref:typename:float
y	stb/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon77ab60dd1008	typeref:typename:float
y	stb/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon77ab60dd1108	typeref:typename:int
y	stb/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y	stb/stb_voxel_render.h	/^   unsigned char x,y,z;$/;"	m	struct:__anonc1feb0a80d08	typeref:typename:unsigned char
y	stb/tests/caveview/cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anonb6d309d70508	typeref:typename:float	file:
y	stb/tests/grid_reachability.c	/^   uint16 x,y;$/;"	m	struct:__anondb2f75c60108	typeref:typename:uint16	file:
y	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	m	struct:__anon9cbc07790208	typeref:typename:int	file:
y	stb/tests/stb.c	/^typedef struct { unsigned short x,y,z; } struct1;$/;"	m	struct:__anon9cbc07790108	typeref:typename:unsigned short	file:
y	stb/tools/easy_font_maker.c	/^   unsigned char y:4;$/;"	m	struct:__anonc58d97050208	typeref:typename:unsigned char:4	file:
y0	atlas.h	/^  float x0, y0, x1, y1; \/\/ Corners in world coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
y0	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
y0	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1,color;$/;"	m	struct:__anonbd4d158d0d08	typeref:typename:int
y0	stb/stb_tilemap_editor.h	/^   int x0,y0;$/;"	m	struct:__anonbd4d158d0c08	typeref:typename:int
y0	stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y0	stb/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
y0	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0208	typeref:typename:unsigned short
y0	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0408	typeref:typename:unsigned short
y0	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
y1	atlas.h	/^  float x0, y0, x1, y1; \/\/ Corners in world coordinates$/;"	m	struct:SpriteLocation	typeref:typename:float
y1	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1, left_width, right_width; \/\/ configurable widths$/;"	m	struct:__anonbd4d158d0e08	typeref:typename:int
y1	stb/stb_tilemap_editor.h	/^   int x0,y0,x1,y1,color;$/;"	m	struct:__anonbd4d158d0d08	typeref:typename:int
y1	stb/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y1	stb/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon77ab60dd0308	typeref:typename:float
y1	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0208	typeref:typename:unsigned short
y1	stb/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon77ab60dd0408	typeref:typename:unsigned short
y1	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
y_stride_in_bytes	stb/stb_voxel_render.h	/^   int y_stride_in_bytes;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
ybaseline	font.cpp	/^  int ybaseline;  \/\/ how far down into the region the baseline is$/;"	m	struct:FontCharacter	typeref:typename:int	file:
ymax	stb/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anonb04bb6e60408	typeref:typename:float
ymin	stb/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anonb04bb6e60408	typeref:typename:float
yoff	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0208	typeref:typename:float
yoff	stb/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon77ab60dd0408	typeref:typename:float
yoff	stb/tests/sdf/sdf_test.c	/^   signed char yoff;$/;"	m	struct:__anonc0c3bd380108	typeref:typename:signed char	file:
yoff2	stb/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon77ab60dd0408	typeref:typename:float
ypos	stb/deprecated/stb_image.c	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon9409ffb90808	typeref:typename:int	file:
ypos	stb/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anonc3e085de0a08	typeref:typename:int
ystep	stb/deprecated/stb_image.c	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon9409ffb90808	typeref:typename:int	file:
ystep	stb/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anonc3e085de0a08	typeref:typename:int
z	stb/stb_voxel_render.h	/^   unsigned char x,y,z;$/;"	m	struct:__anonc1feb0a80d08	typeref:typename:unsigned char
z	stb/tests/caveview/cave_parse.c	/^   int x,z; \/\/ chunk index$/;"	m	struct:__anonb02522120108	typeref:typename:int	file:
z	stb/tests/caveview/cave_parse.c	/^   int x,z;$/;"	m	struct:__anonb02522120208	typeref:typename:int	file:
z	stb/tests/caveview/cave_render.c	/^   float x,y,z,w;$/;"	m	struct:__anonb6d309d70508	typeref:typename:float	file:
z	stb/tests/stb.c	/^typedef struct { double a; int x,y,z; } struct2;$/;"	m	struct:__anon9cbc07790208	typeref:typename:int	file:
z	stb/tests/stb.c	/^typedef struct { unsigned short x,y,z; } struct1;$/;"	m	struct:__anon9cbc07790108	typeref:typename:unsigned short	file:
z0	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
z1	stb/stb_voxel_render.h	/^   int x0,y0,z0,x1,y1,z1;$/;"	m	struct:stbvox_mesh_maker	typeref:typename:int
z_distance	stb/deprecated/stb_image.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:zhuffman	file:
z_distance	stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:stbi__zhuffman
z_expandable	stb/deprecated/stb_image.c	/^   int   z_expandable;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:int	file:
z_expandable	stb/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:int
z_length	stb/deprecated/stb_image.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:zhuffman	file:
z_length	stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:stbi__zhuffman
zbuf	stb/deprecated/stb_image.c	/^} zbuf;$/;"	t	typeref:struct:__anon9409ffb90a08	file:
zbuffer	stb/deprecated/stb_image.c	/^   stbi__uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:stbi__uint8 *	file:
zbuffer	stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:stbi_uc *
zbuffer_end	stb/deprecated/stb_image.c	/^   stbi__uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:stbi__uint8 *	file:
zbuffer_end	stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:stbi_uc *
zbuild_huffman	stb/deprecated/stb_image.c	/^static int zbuild_huffman(zhuffman *z, stbi__uint8 *sizelist, int num)$/;"	f	typeref:typename:int	file:
zero_wait	stb/stb_hexwave.h	/^   float zero_wait;$/;"	m	struct:__anon773b6f930108	typeref:typename:float
zget8	stb/deprecated/stb_image.c	/^stbi_inline static int zget8(zbuf *z)$/;"	f	typeref:typename:stbi_inline int	file:
zhuffman	stb/deprecated/stb_image.c	/^} zhuffman;$/;"	t	typeref:struct:__anon9409ffb90908	file:
zhuffman_decode	stb/deprecated/stb_image.c	/^stbi_inline static int zhuffman_decode(zbuf *a, zhuffman *z)$/;"	f	typeref:typename:stbi_inline int	file:
zout	stb/deprecated/stb_image.c	/^   char *zout;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:char *	file:
zout	stb/stb_image.h	/^   char *zout;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:char *
zout_end	stb/deprecated/stb_image.c	/^   char *zout_end;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:char *	file:
zout_end	stb/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:char *
zout_start	stb/deprecated/stb_image.c	/^   char *zout_start;$/;"	m	struct:__anon9409ffb90a08	typeref:typename:char *	file:
zout_start	stb/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anonc3e085de0c08	typeref:typename:char *
zpos	stb/tests/caveview/cave_parse.h	/^   int max_y, xpos, zpos;$/;"	m	struct:__anonb02522170308	typeref:typename:int
zpos	stb/tests/caveview/cave_parse.h	/^   int xpos, zpos, max_y;$/;"	m	struct:__anonb02522170208	typeref:typename:int
zreceive	stb/deprecated/stb_image.c	/^stbi_inline static unsigned int zreceive(zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int	file:
~Atlas	atlas.cpp	/^Atlas::~Atlas() {}$/;"	f	class:Atlas
~Font	font.cpp	/^Font::~Font() {}$/;"	f	class:Font
~GlContext	glwrappers.cpp	/^GlContext::~GlContext() {$/;"	f	class:GlContext
~IRenderLayer	window.cpp	/^IRenderLayer::~IRenderLayer() {}$/;"	f	class:IRenderLayer
~RenderShapes	render-shapes.cpp	/^RenderShapes::~RenderShapes() {}$/;"	f	class:RenderShapes
~RenderSprites	render-sprites.cpp	/^RenderSprites::~RenderSprites() {}$/;"	f	class:RenderSprites
~RenderSurface	render-surface.cpp	/^RenderSurface::~RenderSurface() {}$/;"	f	class:RenderSurface
~ShaderProgram	glwrappers.cpp	/^ShaderProgram::~ShaderProgram() {$/;"	f	class:ShaderProgram
~Tetris	tetris.cpp	/^Tetris::~Tetris() {}$/;"	f	class:Tetris
~Texture	glwrappers.cpp	/^Texture::~Texture() {$/;"	f	class:Texture
~VertexBuffer	glwrappers.cpp	/^VertexBuffer::~VertexBuffer() {$/;"	f	class:VertexBuffer
~Window	window.cpp	/^Window::~Window() {}$/;"	f	class:Window
~WindowImpl	window.cpp	/^WindowImpl::~WindowImpl() {$/;"	f	class:WindowImpl
~stbir_context	stb/tests/resample_test.cpp	/^	~stbir_context()$/;"	f	class:stbir_context	file:
